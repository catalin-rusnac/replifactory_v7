import{g as X,h as O,o as i,c,a as e,s as E,C as ne,l as F,j as G,F as P,y as ye,d as j,_ as Z,r as M,f as _,q as y,t as D,k as A,i as L,w as ue,v as de,x as J,D as ie,E as le,e as Y}from"./index-6db60074.js";import{T as ce,V as be}from"./VialPlot-55ea09d6.js";/* empty css              */import{u as we}from"./device-8da93b28.js";const xe={__name:"ControlParameters",emits:["refresh-table"],setup(H,{emit:N}){const b=N,v=X(),m=O(()=>v.currentExperiment||{}),V={name:"Name of the culture",description:"Descriptive text explaining the purpose or conditions of this vial",volume_vial:"Volume of liquid below waste needle in vial (mL)",pump1_stock_drug_concentration:"Drug concentration in pump1 stock solution (typically 0 for media)",pump2_stock_drug_concentration:"Drug concentration in pump2 stock solution (matches stock bottle)",dose_initialization:"Initial drug dose (concentration) added at experiment start",dilution_factor:"Factor by which culture is diluted during each dilution event",od_dilution_threshold:"Optical density threshold that triggers automatic dilution. -1 to disable automatic dilution.",delay_dilution_max_hours:"Maximum time delay between dilution events (hours). Useful to trigger dilutions due to time passing. -1 to disable.",dilution_number_first_drug_addition:"Index of dilution event when drug is first added (after initialization).",dose_first_drug_addition:"Initial drug dose (concentration) when drug is first added",dose_increase_factor:"Multiplicative factor for increasing drug dose at drug increase events. 1.1 means 10% increase.",dose_increase_amount:"Additive amount for increasing drug dose at drug increase events. 0.1 means 0.1 units increase.",delay_stress_increase_min_generations:"Minimum generations to wait before increasing stress. Useful to prevent over-stressing the culture. Decrease this parameter for more stress increase events that reduce growth rate and media consumption.",threshold_od_min_increase_stress:"Minimum OD threshold to allow stress increase events. Useful to prevent stressing a small population.",threshold_growth_rate_increase_stress:"Growth rate threshold above which stress increase events are allowed. Decrease this parameter for more stress increase events that reduce growth rate and media consumption.",threshold_growth_rate_decrease_stress:"Growth rate threshold below which stress decrease events are allowed. Useful to prevent over-stressing the culture.",postfill:"Volume added after pumping waste. Useful for phage experiments."};function k(){const g=m.value.parameters.cultures;if(!g)return{data:[],keys:[]};const p=Object.keys(g[1]||{}),x=["name","description","volume_vial","pump1_stock_drug_concentration","pump2_stock_drug_concentration","dose_initialization","dilution_factor","od_dilution_threshold","delay_dilution_max_hours","dilution_number_first_drug_addition","dose_first_drug_addition","dose_increase_factor","dose_increase_amount","delay_stress_increase_min_generations","threshold_od_min_increase_stress","threshold_growth_rate_increase_stress","threshold_growth_rate_decrease_stress"],f=(r=>{const d=new Set(x),l=x.filter(C=>r.includes(C)),$=r.filter(C=>!d.has(C)).sort();return[...l,...$]})(p);return{data:f.map(r=>Object.keys(g).map(d=>g[d][r])),keys:f}}async function u(g){console.log("updateStockConcentration called with value:",g);const p={...m.value.parameters},x=p.stock_concentration_drug;if(console.log("Current stock concentration:",x,"New concentration:",g),x!==g){p.stock_concentration_drug=g;for(let h=1;h<=7;h++)p.cultures[h]&&(p.cultures[h].pump2_stock_drug_concentration=g);try{await v.updateCurrentExperimentParameters(p),console.log("Stock concentration and vial concentrations updated successfully");const h=p.concentration_units||"units";F.success(`Stock concentration updated from ${x} to ${g} ${h}. All vial concentrations synchronized.`),b("refresh-table")}catch(h){console.error("Failed to update stock concentration:",h),F.error("Failed to update stock concentration")}}}async function a(g){var n,r;const{keys:p}=k(),x=Object.keys(m.value.parameters.cultures);console.log("Updating cells with data:",{sortedKeys:p,columnNames:x,data:g});const h={...m.value.parameters};let f=[];for(let d=0;d<x.length;d++)for(let l=0;l<p.length;l++){const $=h.cultures[x[d]][p[l]],C=g[l][d];$!==C&&(console.log("Cell edited:",{vial:x[d],parameter:p[l],oldValue:$,newValue:C}),f.push({vial:x[d],parameter:p[l],oldValue:$,newValue:C})),h.cultures[x[d]][p[l]]=C}if(f.length>0){const d=f.map(l=>`Vial ${l.vial}: ${l.parameter} changed from ${l.oldValue} to ${l.newValue}`).join(`
`);F.info(d,{position:"top-right",autoClose:5e3,hideProgressBar:!1,closeOnClick:!0,pauseOnHover:!0,draggable:!0,progress:void 0})}if(v.updateCurrentExperimentParameters)try{await v.updateCurrentExperimentParameters(h);const d=Number(h.stock_concentration_drug),l=h.cultures;let $=!1,C=[],U=null;for(let W=1;W<=7;W++)if(l[W]){const I=Number(l[W].pump2_stock_drug_concentration);Math.abs(I-d)>1e-4&&($=!0,C.push(W),U===null&&(U=I))}if($&&U!==null){F.error(`Warning: Culture pump2_stock_drug_concentration values in vials ${C.join(", ")} do not match the stock bottle concentration (${d}).`,{position:"top-right",autoClose:8e3});const{openDialog:W}=ye();await W({title:"Update Stock Concentration",message:`Update stock bottle concentration from ${d} to ${U}?`})&&await u(U)}else F.success("Control parameters updated")}catch(d){let l="Failed to update parameters";(r=(n=d==null?void 0:d.response)==null?void 0:n.data)!=null&&r.detail?l+=": "+d.response.data.detail:d!=null&&d.message&&(l+=": "+d.message),F.error(l)}}return(g,p)=>(i(),c(P,null,[e("h2",null,[p[1]||(p[1]=E(" Culture Control Parameters ")),e("span",{class:"info-icon",onClick:p[0]||(p[0]=x=>ne(F).info("Control parameters are used to define the flow of the experiment.",{position:"top-right",autoClose:8e3})),style:{cursor:"pointer","margin-left":"8px","font-size":"0.8em"}}," ⓘ ")]),(i(),G(ce,{key:m.value.id,fetchData:k,updateData:a,columnHeaders:["Vial 1","Vial 2","Vial 3","Vial 4","Vial 5","Vial 6","Vial 7"],rowHeaderLabel:"Parameter",rowHeaderWidth:270,rowTooltips:V}))],64))}},ke={key:0},$e={__name:"GrowthParameters",setup(H){const N=X(),b=O(()=>N.currentExperiment||{}),v={initial_population:"Initial OD of the culture at the start of the experiment",doubling_time_mins:"Time in minutes for the culture to double under optimal conditions",carrying_capacity:"Maximum OD the culture can reach under optimal conditions.",mu_min:"Minimum growth rate (death rate under stress)",ic50_initial:"Initial drug concentration that inhibits growth by 50% (IC50)",ic10_ic50_ratio:"Ratio between IC10 and IC50 concentrations. Lower values indicate steeper dose-response curves.",dose_effective_slope_width_mins:"Describes how fast the drug can stress the culture.",time_lag_drug_effect_mins:"Delay in minutes between drug addition and onset of growth inhibition effects.",adaptation_rate_max:"Maximum rate at which the culture can adapt to stress - the model assumes it is at IC50.",adaptation_rate_ic10_ic50_ratio:"Ratio of adaptation rate at IC10 to IC50. Higher values indicate more similar adaptation at optimum and suboptimum stress conditions.",effective_dose:"Calculated effective drug dose based on current conditions and adaptation state."};function m(){const k=b.value.parameters.growth_parameters;if(!k)return{data:[],keys:[]};const u=Object.keys(k[1]||{}),a=["initial_population","doubling_time_mins","carrying_capacity","mu_min","ic50_initial","ic10_ic50_ratio","dose_effective_slope_width_mins","time_lag_drug_effect_mins","adaptation_rate_max","adaptation_rate_ic10_ic50_ratio","drug_concentration","effective_dose"],p=(h=>{const f=new Set(a),n=a.filter(d=>h.includes(d)),r=h.filter(d=>!f.has(d)).sort();return[...n,...r]})(u);return{data:p.map(h=>Object.keys(k).map(f=>k[f][h])),keys:p}}async function V(k){const{keys:u}=m(),a=Object.keys(b.value.parameters.growth_parameters),g={};for(let p=0;p<a.length;p++){g[a[p]]={};for(let x=0;x<u.length;x++)g[a[p]][u[x]]=k[x][p]}if(N.updateCurrentGrowthParameters)try{await N.updateCurrentGrowthParameters(g),F("Growth parameters updated",{type:"success"})}catch{F("Failed to update growth parameters",{type:"error"})}}return(k,u)=>{var a,g;return i(),c(P,null,[e("h2",null,[u[1]||(u[1]=E(" Culture Growth Parameters ")),e("span",{class:"info-icon",onClick:u[0]||(u[0]=p=>ne(F).info("Growth parameters are used to predict the growth of the culture in the simulation. They do not affect the flow of the experiment but correct values are important for the accuracy of the prediction, helping adjust control parameters.",{position:"top-right",autoClose:8e3})),style:{cursor:"pointer","margin-left":"8px","font-size":"0.8em"}}," ⓘ ")]),Object.keys(((g=(a=b.value)==null?void 0:a.parameters)==null?void 0:g.growth_parameters)||{}).length>0?(i(),c("div",ke,[(i(),G(ce,{key:b.value.id,fetchData:m,updateData:V,columnHeaders:["Vial 1","Vial 2","Vial 3","Vial 4","Vial 5","Vial 6","Vial 7"],rowHeaderLabel:"Parameter",rowHeaderWidth:270,rowTooltips:v}))])):j("",!0)],64)}}};const Ce={class:"dilution-settings"},Ve={class:"warning-header"},Se={class:"settings-content"},Ee={class:"parameter-list"},Ne={class:"parameter-item"},De={class:"parameter-values"},Ie={class:"parameter-value"},Pe={class:"parameter-item"},Me={class:"parameter-values"},ze={class:"parameter-value"},Fe={class:"parameter-item"},Oe={class:"parameter-values"},Te={class:"parameter-value"},je={class:"action-buttons"},Ue={__name:"DilutionSettings",props:{vialId:{type:Number,required:!0}},emits:["close","confirm"],setup(H,{emit:N}){const b=H,v=N,m=X(),V=O(()=>{var a;const u=(a=m.currentExperiment)==null?void 0:a.parameters;return!u||!u.cultures||!u.cultures[b.vialId]?{od_dilution_threshold:"N/A",delay_dilution_max_hours:"N/A",dose_initialization:"N/A"}:u.cultures[b.vialId]});async function k(){try{const u={...m.currentExperiment.parameters};u.cultures[b.vialId]={...u.cultures[b.vialId],od_dilution_threshold:-1,delay_dilution_max_hours:-1,dose_initialization:-1},await m.updateCurrentExperimentParameters(u),F.success(`Dilutions disabled for Vial ${b.vialId}`),v("confirm")}catch(u){console.error("Failed to update dilution settings:",u),F.error("Failed to update dilution settings")}}return(u,a)=>{const g=M("v-icon"),p=M("v-btn");return i(),c("div",Ce,[e("div",Ve,[_(g,{color:"warning",size:"large"},{default:y(()=>a[1]||(a[1]=[E("warning")])),_:1}),e("h2",null,"Dilution Settings for Vial "+D(H.vialId),1)]),e("div",Se,[a[13]||(a[13]=e("p",{class:"settings-description"}," This will modify the following parameters: ",-1)),e("div",Ee,[e("div",Ne,[a[4]||(a[4]=e("span",{class:"parameter-name"},"OD Dilution Threshold",-1)),e("div",De,[e("span",Ie,D(V.value.od_dilution_threshold),1),a[2]||(a[2]=e("span",{class:"parameter-arrow"},"→",-1)),a[3]||(a[3]=e("span",{class:"parameter-value new"},"-1",-1))])]),e("div",Pe,[a[7]||(a[7]=e("span",{class:"parameter-name"},"Delay Dilution Max Hours",-1)),e("div",Me,[e("span",ze,D(V.value.delay_dilution_max_hours),1),a[5]||(a[5]=e("span",{class:"parameter-arrow"},"→",-1)),a[6]||(a[6]=e("span",{class:"parameter-value new"},"-1",-1))])]),e("div",Fe,[a[10]||(a[10]=e("span",{class:"parameter-name"},"Dose Initialization",-1)),e("div",Oe,[e("span",Te,D(V.value.dose_initialization),1),a[8]||(a[8]=e("span",{class:"parameter-arrow"},"→",-1)),a[9]||(a[9]=e("span",{class:"parameter-value new"},"-1",-1))])])]),e("div",je,[_(p,{color:"primary",onClick:k},{default:y(()=>a[11]||(a[11]=[E(" Confirm Changes ")])),_:1}),_(p,{color:"error",onClick:a[0]||(a[0]=x=>u.$emit("close"))},{default:y(()=>a[12]||(a[12]=[E(" Cancel ")])),_:1})])])])}}},Ae=Z(Ue,[["__scopeId","data-v-eda7b901"]]);const He={class:"morbidostat-settings"},We={class:"warning-header"},Ke={class:"settings-content"},Re={class:"parameter-list"},Ge={key:0,class:"parameter-item"},Be={class:"parameter-name"},Le={class:"parameter-values"},qe={class:"parameter-value"},Je=["onUpdate:modelValue","min","max","onBlur"],Qe={class:"action-buttons"},Xe={__name:"MorbidostatSettings",props:{vialId:{type:Number,required:!0}},emits:["close","confirm"],setup(H,{emit:N}){const b=H,v=N,m=X(),V=O(()=>{var r;const n=(r=m.currentExperiment)==null?void 0:r.parameters;return!n||!n.cultures||!n.cultures[b.vialId]?{volume_vial:12,pump1_stock_drug_concentration:0,dose_initialization:0,dilution_factor:1.6,od_dilution_threshold:.3,delay_dilution_max_hours:4,dilution_number_first_drug_addition:2,dose_first_drug_addition:1,dose_increase_factor:2,dose_increase_amount:0,delay_stress_increase_min_generations:2,threshold_od_min_increase_stress:.1,threshold_growth_rate_increase_stress:.15,threshold_growth_rate_decrease_stress:-.1,postfill:0}:(console.log("Current culture parameters:",n.cultures[b.vialId]),console.log("proposed parameters:",u.value),n.cultures[b.vialId])}),k=O(()=>{var d;const n=(d=m.currentExperiment)==null?void 0:d.parameters;if(!n||!n.cultures||!n.cultures[b.vialId])return 0;const r=n.cultures[b.vialId];return r.pump2_stock_drug_concentration?r.pump2_stock_drug_concentration*.01:0}),u=A({volume_vial:12,pump1_stock_drug_concentration:0,dose_initialization:k.value,dilution_factor:1.6,od_dilution_threshold:.3,delay_dilution_max_hours:4,dilution_number_first_drug_addition:2,dose_first_drug_addition:1,dose_increase_factor:2,dose_increase_amount:0,delay_stress_increase_min_generations:2,threshold_od_min_increase_stress:.1,threshold_growth_rate_increase_stress:.15,threshold_growth_rate_decrease_stress:-.1,postfill:0}),a=O(()=>{const n=V.value,r=u.value;return Object.keys(r).filter(d=>n[d]!==r[d])}),g=["name","description","volume_vial","pump1_stock_drug_concentration","pump2_stock_drug_concentration","dose_initialization","dilution_factor","od_dilution_threshold","delay_dilution_max_hours","dilution_number_first_drug_addition","dose_first_drug_addition","dose_increase_factor","dose_increase_amount","delay_stress_increase_min_generations","threshold_od_min_increase_stress","threshold_growth_rate_increase_stress","threshold_growth_rate_decrease_stress","postfill"];function p(n){const r={volume_vial:0,dose_initialization:0,dilution_factor:1,od_dilution_threshold:0,delay_dilution_max_hours:0,dilution_number_first_drug_addition:1,dose_first_drug_addition:0,dose_increase_factor:1,dose_increase_amount:0,delay_stress_increase_min_generations:1,threshold_od_min_increase_stress:0,threshold_growth_rate_increase_stress:0,postfill:0};return r[n]!==void 0?r[n]:null}function x(n){const r={threshold_growth_rate_decrease_stress:0};return r[n]!==void 0?r[n]:null}function h(n){return typeof n=="number"?Number(n).toFixed(5).replace(/\.0+$/,"").replace(/(\.\d*?[1-9])0+$/,"$1"):n}async function f(){try{const n={...m.currentExperiment.parameters};Object.keys(u.value).forEach(r=>{n.cultures[b.vialId][r]=u.value[r]}),console.log("Saving:",u.value),await m.updateCurrentExperimentParameters(n),F.success(`Morbidostat settings applied to Vial ${b.vialId}`),v("confirm")}catch(n){console.error("Failed to apply morbidostat settings:",n),F.error("Failed to apply morbidostat settings")}}return(n,r)=>{const d=M("v-icon"),l=M("v-tooltip"),$=M("v-btn");return i(),c("div",He,[e("div",We,[_(d,{color:"info",size:"large"},{default:y(()=>r[1]||(r[1]=[E("mdi-skull")])),_:1}),e("h2",null,"Morbidostat Settings for Vial "+D(H.vialId),1)]),e("div",Ke,[r[6]||(r[6]=e("p",{class:"settings-description"}," Apply the following parameters: ",-1)),e("div",Re,[(i(),c(P,null,L(g,C=>(i(),c(P,{key:C},[a.value.includes(C)?(i(),c("div",Ge,[e("span",Be,D(C),1),e("div",Le,[e("span",qe,D(h(V.value[C])),1),r[3]||(r[3]=e("span",{class:"parameter-arrow"},"→",-1)),ue(e("input",{type:"number","onUpdate:modelValue":U=>u.value[C]=U,class:"parameter-input",min:p(C),max:x(C),onBlur:U=>u.value[C]=Number(u.value[C]).toFixed(5)*1},null,40,Je),[[de,u.value[C],void 0,{number:!0}]]),C==="dose_initialization"?(i(),G(l,{key:0,text:"1% of drug stock concentration"},{activator:y(({props:U})=>[_(d,J({ref_for:!0},U,{size:"small",color:"info"}),{default:y(()=>r[2]||(r[2]=[E("mdi-information")])),_:2},1040)]),_:1})):j("",!0)])])):j("",!0)],64))),64))]),e("div",Qe,[_($,{color:"primary",onClick:f},{default:y(()=>r[4]||(r[4]=[E(" Confirm Changes ")])),_:1}),_($,{color:"error",onClick:r[0]||(r[0]=C=>n.$emit("close"))},{default:y(()=>r[5]||(r[5]=[E(" Cancel ")])),_:1})])])])}}},Ye=Z(Xe,[["__scopeId","data-v-4d6d0544"]]);const Ze={class:"chemostat-settings"},et={class:"header"},tt={class:"settings-content"},rt={class:"parameter-list"},ot={key:0,class:"parameter-item"},nt={class:"parameter-name"},st={class:"parameter-values"},at={class:"parameter-value"},it=["onUpdate:modelValue","min","max","onBlur"],lt={class:"action-buttons"},ut={__name:"ChemostatSettings",props:{vialId:{type:Number,required:!0}},emits:["close","confirm"],setup(H,{emit:N}){const b=H,v=N,m=X(),V=["name","description","volume_vial","pump1_stock_drug_concentration","pump2_stock_drug_concentration","dose_initialization","dilution_factor","od_dilution_threshold","delay_dilution_max_hours","dilution_number_first_drug_addition","dose_first_drug_addition","postfill"],k={volume_vial:12,pump1_stock_drug_concentration:0,dose_initialization:0,dilution_factor:1.6,od_dilution_threshold:-1,delay_dilution_max_hours:4,dilution_number_first_drug_addition:-1,dose_first_drug_addition:-1,dose_increase_factor:-1,dose_increase_amount:-1,delay_stress_increase_min_generations:-1,threshold_od_min_increase_stress:-1,threshold_growth_rate_increase_stress:-1,threshold_growth_rate_decrease_stress:-1},u=O(()=>{var r;const n=(r=m.currentExperiment)==null?void 0:r.parameters;return!n||!n.cultures||!n.cultures[b.vialId]?{...k}:n.cultures[b.vialId]}),a=A({...k}),g=O(()=>{const n=u.value,r=a.value;return Object.keys(k).filter(d=>n[d]!==r[d])});function p(n){return typeof n=="number"?Number(n).toFixed(5).replace(/\.0+$/,"").replace(/(\.\d*?[1-9])0+$/,"$1"):n}function x(n){const r={volume_vial:0,dose_initialization:0,dilution_factor:1,od_dilution_threshold:0,delay_dilution_max_hours:0,dilution_number_first_drug_addition:1,dose_first_drug_addition:0,postfill:0};return r[n]!==void 0?r[n]:null}function h(n){return null}async function f(){try{const n={...m.currentExperiment.parameters};V.forEach(r=>{Object.prototype.hasOwnProperty.call(a.value,r)&&(n.cultures[b.vialId][r]=a.value[r])}),await m.updateCurrentExperimentParameters(n),F.success(`Chemostat settings updated for Vial ${b.vialId}`),v("confirm")}catch(n){console.error("Failed to update chemostat settings:",n),F.error("Failed to update chemostat settings")}}return(n,r)=>{const d=M("v-icon"),l=M("v-btn");return i(),c("div",Ze,[e("div",et,[_(d,{color:"info",size:"large"},{default:y(()=>r[1]||(r[1]=[E("mdi-flask")])),_:1}),e("h2",null,"Chemostat Settings for Vial "+D(H.vialId),1)]),e("div",tt,[r[5]||(r[5]=e("p",{class:"settings-description"}," Configure the following chemostat parameters: ",-1)),e("div",rt,[(i(),c(P,null,L(V,$=>(i(),c(P,{key:$},[g.value.includes($)?(i(),c("div",ot,[e("span",nt,D($),1),e("div",st,[e("span",at,D(p(u.value[$])),1),r[2]||(r[2]=e("span",{class:"parameter-arrow"},"→",-1)),ue(e("input",{type:"number","onUpdate:modelValue":C=>a.value[$]=C,class:"parameter-input",min:x($),max:h(),onBlur:C=>a.value[$]=Number(a.value[$]).toFixed(5)*1},null,40,it),[[de,a.value[$],void 0,{number:!0}]])])])):j("",!0)],64))),64))]),e("div",lt,[_(l,{color:"primary",onClick:f},{default:y(()=>r[3]||(r[3]=[E("Confirm Changes")])),_:1}),_(l,{color:"error",onClick:r[0]||(r[0]=$=>n.$emit("close"))},{default:y(()=>r[4]||(r[4]=[E("Cancel")])),_:1})])])])}}},dt=Z(ut,[["__scopeId","data-v-c24d39f4"]]);const ct={class:"dilution-controls"},_t={__name:"DilutionControls",emits:["settings-updated"],setup(H,{emit:N}){const b=N,v=[1,2,3,4,5,6,7],m=A(!1),V=A(!1),k=A(!1),u=A(null),a=X();function g(d){u.value=d,m.value=!0}function p(d){u.value=d,V.value=!0}function x(d){u.value=d,k.value=!0}function h(){m.value=!1}function f(){V.value=!1}function n(){k.value=!1}async function r(){m.value=!1,V.value=!1,k.value=!1,await a.fetchCurrentExperiment(),b("settings-updated")}return(d,l)=>{const $=M("v-btn"),C=M("v-icon"),U=M("v-table"),W=M("v-dialog");return i(),c("div",ct,[l[12]||(l[12]=e("h3",null,"Preconfigured",-1)),_(U,null,{default:y(()=>[e("thead",null,[e("tr",null,[l[3]||(l[3]=e("th",null,null,-1)),(i(),c(P,null,L(v,I=>e("th",{key:I},"Vial "+D(I),1)),64))])]),e("tbody",null,[e("tr",null,[l[5]||(l[5]=e("td",null,null,-1)),(i(),c(P,null,L(v,I=>e("td",{key:I},[_($,{color:"warning",onClick:re=>g(I),class:"dilution-button"},{default:y(()=>l[4]||(l[4]=[E(" Dilutions Off ")])),_:2},1032,["onClick"])])),64))]),e("tr",null,[l[8]||(l[8]=e("td",null,null,-1)),(i(),c(P,null,L(v,I=>e("td",{key:I},[_($,{color:"secondary",onClick:re=>x(I),class:"dilution-button"},{default:y(()=>[_(C,{left:""},{default:y(()=>l[6]||(l[6]=[E("mdi-flask")])),_:1}),l[7]||(l[7]=E(" Chemostat "))]),_:2},1032,["onClick"])])),64))]),e("tr",null,[l[11]||(l[11]=e("td",null,null,-1)),(i(),c(P,null,L(v,I=>e("td",{key:I},[_($,{color:"info",onClick:re=>p(I),class:"dilution-button"},{default:y(()=>[_(C,{left:""},{default:y(()=>l[9]||(l[9]=[E("mdi-skull")])),_:1}),l[10]||(l[10]=E(" Morbidostat "))]),_:2},1032,["onClick"])])),64))])])]),_:1}),_(W,{modelValue:m.value,"onUpdate:modelValue":l[0]||(l[0]=I=>m.value=I),"max-width":"600"},{default:y(()=>[m.value?(i(),G(Ae,{key:0,vialId:u.value,onClose:h,onConfirm:r},null,8,["vialId"])):j("",!0)]),_:1},8,["modelValue"]),_(W,{modelValue:V.value,"onUpdate:modelValue":l[1]||(l[1]=I=>V.value=I),"max-width":"600"},{default:y(()=>[V.value?(i(),G(Ye,{key:0,vialId:u.value,onClose:f,onConfirm:r},null,8,["vialId"])):j("",!0)]),_:1},8,["modelValue"]),_(W,{modelValue:k.value,"onUpdate:modelValue":l[2]||(l[2]=I=>k.value=I),"max-width":"600"},{default:y(()=>[k.value?(i(),G(dt,{key:0,vialId:u.value,onClose:n,onConfirm:r},null,8,["vialId"])):j("",!0)]),_:1},8,["modelValue"])])}}},mt=Z(_t,[["__scopeId","data-v-4970b36f"]]);const pt={class:"experiment-simulation"},ft={class:"controls"},vt={class:"simulation-input"},gt={key:0,class:"simulation-status"},ht={key:1,class:"results"},yt={key:0},bt={key:0,class:"volume-cell error"},wt={key:0},xt={key:0,class:"volume-cell error"},kt={key:0},$t={key:0,class:"volume-cell error"},Ct={key:1},Vt={key:0},St={__name:"ExperimentSimulation",setup(H){const N=we(),b=X(),v=A(!1),m=A([]),V=O({get:()=>b.simulationHours,set:t=>b.setSimulationHours(t)}),k=O(()=>{const t=V.value;return t<1?"Simulation hours must be at least 1":t>240?"Simulation hours cannot exceed 240 (10 days)":null});A(24);const u=A({}),a=A(!1),g=O(()=>{var s,o;return((o=(s=b.currentExperiment)==null?void 0:s.parameters)==null?void 0:o.stock_volume_main)||0}),p=O(()=>{var s,o;return((o=(s=b.currentExperiment)==null?void 0:s.parameters)==null?void 0:o.stock_volume_drug)||0}),x=O(()=>{var s,o;return((o=(s=b.currentExperiment)==null?void 0:s.parameters)==null?void 0:o.bottle_volume_waste)||0}),h=O(()=>{var s,o;return((o=(s=b.currentExperiment)==null?void 0:s.parameters)==null?void 0:o.stock_volume_waste)||0}),f=O(()=>m.value.reduce((s,o)=>s+o.pump1_volume_used,0)),n=O(()=>m.value.reduce((s,o)=>s+o.pump2_volume_used,0)),r=O(()=>m.value.reduce((s,o)=>s+o.waste_medium_volume_created,0));function d(t,s){return t>s}function l(t){const s=x.value-h.value;return t>s}function $(t,s){return d(t,s)?"danger":"success"}function C(t){return l(t)?"danger":"success"}function U(t,s){return d(t,s)?"text-danger":"text-success"}function W(t){return l(t)?"text-danger":"text-success"}function I(t){return B(Math.log(2)/t*60)+" min"}async function re(){var t,s;if(!v.value){if(k.value){F.error(k.value);return}v.value=!0,m.value=[],a.value=!1,u.value=Object.fromEntries(Array.from({length:7},(o,S)=>[S+1,!0]));try{for(let o=1;o<=7&&v.value;o++){console.log(`Starting simulation for vial ${o}...`);try{const S=await N.runSimulation(o,V.value);if(!v.value)break;u.value[o]=!1,console.log(`Completed simulation for vial ${o}`),m.value.push({vial_id:o,...S.summary_data}),o===1&&(a.value=!0)}catch(S){if(!v.value)break;u.value[o]=!1;const K=(s=(t=S.response)==null?void 0:t.data)==null?void 0:s.detail,R=(K==null?void 0:K.message)||S.message;F.error(`Vial ${o} simulation failed: ${R}`),m.value.push({vial_id:o,error:!0,error_message:R})}}if(!v.value)return;console.log("All simulations completed"),m.value.some(o=>o.error)?F.warning("Some simulations completed with errors"):F.success("All simulations completed successfully")}catch(o){if(!v.value)return;console.error("Error running simulations:",o),F.error(o.message||"Failed to run simulations")}finally{v.value&&(v.value=!1,u.value={})}}}const _e=[{name:"Initial OD",key:"initial_population",tooltip:"Starting optical density of the culture"},{name:"Initial IC50",key:"initial_ic50",tooltip:"Initial drug concentration at which growth rate is reduced by 50%"},{name:"Final IC50",key:"final_ic50",tooltip:"Final drug concentration at which growth rate is reduced by 50%"},{name:"Adaptation Factor",key:"adaptation_factor",tooltip:"Ratio of final IC50 to initial IC50, indicating how much the culture adapted to the drug. A value of 2 means the culture became twice as resistant to the drug."},{name:"Final Dose",key:"final_dose",tooltip:"Final drug concentration applied to the culture"},{name:"Final Growth Rate",key:"final_effective_growth_rate",tooltip:"Final growth rate of the culture (hover for doubling time)"},{name:"Final OD",key:"final_population",tooltip:"Final optical density of the culture"},{name:"Final Generation Number",key:"final_generation",tooltip:"Final number of population doublings during the simulation"},{name:"Pump 1 Volume",key:"pump1_volume_used",tooltip:"Total volume of medium used from Pump 1"},{name:"Pump 2 Volume",key:"pump2_volume_used",tooltip:"Total volume of drug medium used from Pump 2"},{name:"Waste Volume",key:"waste_medium_volume_created",tooltip:"Total volume of waste medium created"}];function Q(t,s){const o=m.value.find(K=>K.vial_id===t);if(!o)return a.value?"---":null;if(o.error)return"Error";if(s.key==="adaptation_factor")return o.final_ic50&&o.initial_ic50?o.final_ic50/o.initial_ic50:"---";const S=o[s.key];return S??"---"}function B(t){return t==null||t==="---"||t==="Error"?t:new Intl.NumberFormat("en-US",{maximumFractionDigits:2}).format(t)}function T(t){return t==null||t==="---"||t==="Error"?t:isNaN(t)?"NaN mL":`${B(t)} mL`}function ee(t,s){if(t==="---"||t===null||t===void 0||t==="Error")return t;if(s.key==="final_effective_growth_rate")return`${B(t)} /hr`;if(s.key.includes("volume")){const o=T(t);return{text:o,isError:o.includes("NaN")}}else return s.key==="final_population"?B(Array.isArray(t)?t[0]:t):B(t)}function se(t,s=null){if(t.key==="final_effective_growth_rate"&&s){const o=m.value.find(S=>S.vial_id===s);if(o&&!o.error)return`Doubling time: ${I(o.final_effective_growth_rate)}`}if(t.key==="adaptation_factor"&&s){const o=m.value.find(S=>S.vial_id===s);if(o&&!o.error)return`Initial IC50: ${B(o.initial_ic50)} μg/mL
Final IC50: ${B(o.final_ic50)} μg/mL
Adaptation Factor: ${B(o.final_ic50/o.initial_ic50)}`}return t.tooltip}function me(t){var S,K,R;const s=m.value.find(te=>te.vial_id===t);if(!s)return a.value?"---":null;if(s.error)return"Error";const o=(R=(K=(S=b.currentExperiment)==null?void 0:S.parameters)==null?void 0:K.cultures)==null?void 0:R[t];return(o==null?void 0:o.name)||`Vial ${t}`}function pe(t){var S,K,R;const s=m.value.find(te=>te.vial_id===t);if(!s)return a.value?"---":null;if(s.error)return"Error";const o=(R=(K=(S=b.currentExperiment)==null?void 0:S.parameters)==null?void 0:K.cultures)==null?void 0:R[t];return(o==null?void 0:o.description)||"-"}function ae(t,s,o){if(isNaN(t))return"Error calculating volume";const S=s-t;return S>=0?`${o} stock bottle (${T(s)}) is sufficient.
Will use ${T(t)} (${B(t/s*100)}% of stock).
${T(S)} will remain.`:`${o} stock bottle (${T(s)}) is insufficient.
Will use ${T(t)} (${B(t/s*100)}% of stock).
Missing ${T(Math.abs(S))}.`}function fe(t){if(isNaN(t))return"Error calculating volume";const s=x.value-h.value;return s>=t?`Waste bottle (${T(x.value)}) has sufficient space.
Current waste: ${T(h.value)}
Will create ${T(t)} (${B(t/x.value*100)}% of bottle).
${T(s-t)} will remain available.`:`Waste bottle (${T(x.value)}) has insufficient space.
Current waste: ${T(h.value)}
Will create ${T(t)} (${B(t/x.value*100)}% of bottle).
Missing ${T(Math.abs(s-t))} of space.`}return(t,s)=>{const o=M("v-icon"),S=M("v-btn"),K=M("v-text-field"),R=M("v-progress-circular"),te=M("v-card-title"),q=M("v-tooltip"),ve=M("v-table"),ge=M("v-card-text"),he=M("v-card");return i(),c("div",pt,[s[6]||(s[6]=e("div",{class:"header"},[e("h3",null,"Experiment Simulation"),e("p",{class:"description"},"Run a simulation to predict culture growth and resource usage for all vials")],-1)),e("div",ft,[_(S,{color:"primary",loading:v.value,disabled:v.value||!!k.value,onClick:re},{default:y(()=>[_(o,{left:""},{default:y(()=>s[1]||(s[1]=[E("mdi-play")])),_:1}),s[2]||(s[2]=E(" Run Simulation "))]),_:1},8,["loading","disabled"]),e("div",vt,[_(K,{modelValue:V.value,"onUpdate:modelValue":s[0]||(s[0]=w=>V.value=w),modelModifiers:{number:!0},type:"number",label:"Simulation hours",min:"1",max:"240",density:"compact","hide-details":!k.value,error:!!k.value,"error-messages":k.value,class:"hours-input",style:{width:"130px"}},null,8,["modelValue","hide-details","error","error-messages"])])]),v.value?(i(),c("div",gt,[_(R,{indeterminate:"",color:"primary"}),s[3]||(s[3]=e("span",null,"Running simulations...",-1))])):j("",!0),m.value.length>0?(i(),c("div",ht,[_(he,{class:"summary-card"},{default:y(()=>[_(te,null,{default:y(()=>s[4]||(s[4]=[E("Simulation Results")])),_:1}),_(ge,null,{default:y(()=>[_(ve,null,{default:y(()=>[e("thead",null,[e("tr",null,[s[5]||(s[5]=e("th",null,"Metric",-1)),(i(),c(P,null,L(7,w=>e("th",{key:w},"Vial "+D(w),1)),64)),!v.value&&m.value.length===7?(i(),c("th",yt,"Total")):j("",!0)])]),e("tbody",null,[e("tr",null,[e("td",null,[_(q,{text:"Name of the vial"},{activator:y(({props:w})=>[e("span",ie(le(w)),"Vial Name",16)]),_:1})]),(i(),c(P,null,L(7,w=>e("td",{key:w},[u.value[w]?(i(),G(R,{key:0,indeterminate:"",size:"24",color:"primary"})):(i(),c(P,{key:1},[Q(w,{key:"name"})==="Error"?(i(),c("div",bt,[_(o,{size:"small",color:"error",icon:"mdi-close-circle"}),_(q,{text:"Adjust parameters and rerun simulation"},{activator:y(({props:z})=>[e("span",J({ref_for:!0},z,{class:"text-error"}),"Error",16)]),_:1})])):(i(),c(P,{key:1},[E(D(me(w)),1)],64))],64))])),64)),!v.value&&m.value.length===7?(i(),c("td",wt)):j("",!0)]),e("tr",null,[e("td",null,[_(q,{text:"Description of the vial"},{activator:y(({props:w})=>[e("span",ie(le(w)),"Description",16)]),_:1})]),(i(),c(P,null,L(7,w=>e("td",{key:w},[u.value[w]?(i(),G(R,{key:0,indeterminate:"",size:"24",color:"primary"})):(i(),c(P,{key:1},[Q(w,{key:"description"})==="Error"?(i(),c("div",xt,[_(o,{size:"small",color:"error",icon:"mdi-close-circle"}),_(q,{text:"Adjust parameters and rerun simulation"},{activator:y(({props:z})=>[e("span",J({ref_for:!0},z,{class:"text-error"}),"Error",16)]),_:1})])):(i(),c(P,{key:1},[E(D(pe(w)),1)],64))],64))])),64)),!v.value&&m.value.length===7?(i(),c("td",kt)):j("",!0)]),(i(),c(P,null,L(_e,w=>e("tr",{key:w.key},[e("td",null,[_(q,{text:se(w)},{activator:y(({props:z})=>[e("span",J({ref_for:!0},z),D(w.name),17)]),_:2},1032,["text"])]),(i(),c(P,null,L(7,z=>e("td",{key:z},[u.value[z]?(i(),G(R,{key:0,indeterminate:"",size:"24",color:"primary"})):(i(),c(P,{key:1},[Q(z,w)==="Error"?(i(),c("div",$t,[_(o,{size:"small",color:"error",icon:"mdi-close-circle"}),_(q,{text:"Adjust parameters and rerun simulation"},{activator:y(({props:oe})=>[e("span",J({ref_for:!0},oe,{class:"text-error"}),"Error",16)]),_:1})])):(i(),c(P,{key:1},[w.key==="final_effective_growth_rate"?(i(),G(q,{key:0,text:se(w,z)},{activator:y(({props:oe})=>[e("span",J({ref_for:!0},oe),D(ee(Q(z,w),w)),17)]),_:2},1032,["text"])):(i(),c(P,{key:1},[typeof ee(Q(z,w),w)=="object"?(i(),c("span",{key:0,class:Y({"text-error":ee(Q(z,w),w).isError})},D(ee(Q(z,w),w).text),3)):(i(),c("span",Ct,D(ee(Q(z,w),w)),1))],64))],64))],64))])),64)),!v.value&&m.value.length===7?(i(),c("td",Vt,[w.key==="pump1_volume_used"?(i(),c("div",{key:0,class:Y(["volume-cell",isNaN(f.value)?"error":$(f.value,g.value)])},[_(q,{text:ae(f.value,g.value,"Main medium")},{activator:y(({props:z})=>[e("div",J({ref_for:!0},z,{class:"volume-content"}),[_(o,{size:"small",color:isNaN(f.value)?"error":$(f.value,g.value),icon:isNaN(f.value)?"mdi-close-circle":$(f.value,g.value)==="success"?"mdi-check-circle":"mdi-close-circle"},null,8,["color","icon"]),e("span",{class:Y(isNaN(f.value)?"text-error":U(f.value,g.value))},D(T(f.value)),3)],16)]),_:1},8,["text"])],2)):w.key==="pump2_volume_used"?(i(),c("div",{key:1,class:Y(["volume-cell",isNaN(n.value)?"error":$(n.value,p.value)])},[_(q,{text:ae(n.value,p.value,"Drug medium")},{activator:y(({props:z})=>[e("div",J({ref_for:!0},z,{class:"volume-content"}),[_(o,{size:"small",color:isNaN(n.value)?"error":$(n.value,p.value),icon:isNaN(n.value)?"mdi-close-circle":$(n.value,p.value)==="success"?"mdi-check-circle":"mdi-close-circle"},null,8,["color","icon"]),e("span",{class:Y(isNaN(n.value)?"text-error":U(n.value,p.value))},D(T(n.value)),3)],16)]),_:1},8,["text"])],2)):w.key==="waste_medium_volume_created"?(i(),c("div",{key:2,class:Y(["volume-cell",isNaN(r.value)?"error":C(r.value)])},[_(q,{text:fe(r.value)},{activator:y(({props:z})=>[e("div",J({ref_for:!0},z,{class:"volume-content"}),[_(o,{size:"small",color:isNaN(r.value)?"error":C(r.value),icon:isNaN(r.value)?"mdi-close-circle":C(r.value)==="success"?"mdi-check-circle":"mdi-close-circle"},null,8,["color","icon"]),e("span",{class:Y(isNaN(r.value)?"text-error":W(r.value))},D(T(r.value)),3)],16)]),_:1},8,["text"])],2)):j("",!0)])):j("",!0)])),64))])]),_:1})]),_:1})]),_:1})])):j("",!0)])}}},Et=Z(St,[["__scopeId","data-v-83007ae2"]]);const Nt={key:0},Dt={class:"preconfigured-wrapper"},It={class:"container-wrapper"},Pt={class:"tables-container"},Mt={class:"table-wrapper"},zt={class:"table-wrapper"},Ft={class:"simulation-wrapper"},Ot={id:"SimulationPlot"},Tt={class:"plot-buttons-container"},jt={class:"vial-buttons-row"},Ut={key:0,class:"plot-area"},At={key:0,class:"error-panel"},Ht={class:"error-content"},Wt={key:1,class:"plot-wrapper"},Kt={key:0,class:"plot-loading-overlay"},Rt={class:"loading-content"},Gt={class:"loading-text"},Bt={key:1,class:"no-experiment-selected"},Lt={__name:"PredictionTab",setup(H){const N=X(),b=Array.from({length:7},(h,f)=>f+1),v=A(1),m=A(0),V=O(()=>N.currentExperiment||{}),k=O(()=>N.simulation_data||{}),u=A(!1),a=A(null),g=O(()=>{const h=N.simulationHours;return h<1?"Simulation hours must be at least 1":h>240?"Simulation hours cannot exceed 240 (10 days)":null});function p(){m.value=Date.now()}async function x(h){if(V.value){if(g.value){a.value=`Invalid simulation hours: ${g.value}`;return}v.value=h,u.value=!0,a.value=null,N.errorMessage=null;try{if(N.fetchSimulationPlot){if(await N.fetchSimulationPlot(h,N.simulationHours),N.errorMessage){a.value=`Simulation Error. Please adjust parameters

${N.errorMessage}`;return}if(!k.value[h]||k.value[h].length===0){a.value=`Simulation Error. Please adjust parameters

No data received`;return}}}catch(f){console.error("Error plotting vial:",f),a.value=`Simulation Error. Please adjust parameters

${f.message||"Unknown error"}`}finally{u.value=!1}}}return(h,f)=>{const n=M("v-progress-circular"),r=M("v-btn"),d=M("v-icon");return V.value.parameters?(i(),c("div",Nt,[e("div",Dt,[_(mt,{onSettingsUpdated:p})]),e("div",It,[e("div",Pt,[e("div",Mt,[(i(),G(xe,{key:m.value,onRefreshTable:p}))]),e("div",zt,[_($e)])])]),e("div",Ft,[_(Et)]),e("div",Ot,[e("div",Tt,[f[1]||(f[1]=e("h3",null,"Plot Predicted Experiment",-1)),e("div",jt,[(i(!0),c(P,null,L(ne(b),l=>(i(),G(r,{key:l,color:"info",class:"vial-plot-button",onClick:$=>x(l),disabled:u.value||!!g.value},{default:y(()=>[u.value&&v.value===l?(i(),G(n,{key:0,indeterminate:"",color:"white",size:"20",class:"mr-2"})):j("",!0),E(" Vial "+D(l),1)]),_:2},1032,["onClick","disabled"]))),128))])]),v.value?(i(),c("div",Ut,[a.value?(i(),c("div",At,[_(d,{color:"error",size:"large",class:"error-icon"},{default:y(()=>f[2]||(f[2]=[E("mdi-alert-circle")])),_:1}),e("div",Ht,[f[5]||(f[5]=e("h4",null,"Plot Error",-1)),e("p",null,D(a.value),1),_(r,{color:"error",variant:"outlined",onClick:f[0]||(f[0]=l=>x(v.value)),disabled:u.value||!!g.value},{default:y(()=>[_(d,{left:""},{default:y(()=>f[3]||(f[3]=[E("mdi-refresh")])),_:1}),f[4]||(f[4]=E(" Retry "))]),_:1},8,["disabled"])])])):(i(),c("div",Wt,[_(be,{vial:v.value,data:k.value[v.value]},null,8,["vial","data"]),u.value?(i(),c("div",Kt,[e("div",Rt,[_(n,{indeterminate:"",color:"primary",size:"64"}),e("span",Gt,"Simulating Vial "+D(v.value)+"...",1)])])):j("",!0)]))])):j("",!0)])])):(i(),c("div",Bt,f[6]||(f[6]=[e("p",null,"No experiment selected",-1)])))}}},Yt=Z(Lt,[["__scopeId","data-v-dc22c7a6"]]);export{Yt as default};
