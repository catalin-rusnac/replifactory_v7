import{_ as D,u as k,c as b,r as y,o as l,a as d,b as v,F as w,d as B,e as K,w as M,f as C,l as V,g as P,h as F,i as x,j as p,k as E,n as U,m as I,s as T,t as O,p as N}from"./index-9d109742.js";/* empty css              */import{V as L}from"./VialPlot-dc37b00c.js";const R={class:"experiment-parameters"},W={class:"stock-parameters"},q={__name:"ExperimentParameters",setup(S){const e=k(),r=b(()=>e.currentExperiment||{});async function n(o,i){if(i!==""&&i!==null&&i!==void 0){r.value.parameters[o]=i;try{await e.updateCurrentExperimentParameters(r.value.parameters),V("Parameter updated",{type:"success"})}catch{V("Failed to update parameter",{type:"error"})}}}return(o,i)=>{const t=y("v-text-field");return l(),d("div",R,[v("div",W,[(l(!0),d(w,null,B(r.value.parameters,(m,s)=>(l(),d(w,{key:s},[s!=="cultures"&&s!=="growth_parameters"?(l(),K(t,{key:0,class:"stock-parameter-field",label:`${s}`,modelValue:r.value.parameters[s],"onUpdate:modelValue":a=>r.value.parameters[s]=a,readonly:r.value.status==="running",onBlur:a=>n(s,a.target.value),onKeyup:M(a=>n(s,a.target.value),["enter"])},null,8,["label","modelValue","onUpdate:modelValue","readonly","onBlur","onKeyup"])):C("",!0)],64))),128))])])}}},G=D(q,[["__scopeId","data-v-978c0c9b"]]);const H={class:"experiment-setup"},J={class:"d-flex line-container"},Q={class:"d-flex line-container"},X={key:0,class:"d-flex"},Y={key:1},Z={__name:"ExperimentSetup",setup(S){const e=k(),r=P(""),n=P(!1),o=P(null),i=b(()=>e.experiments),t=b(()=>e.currentExperiment||{}),m=b(()=>[...i.value].reverse());async function s(){t.value.status==="running"&&await e.stopExperiment(),await e.selectExperiment(o.value)}async function a(){n.value=!n.value,t.value.status==="running"&&await e.stopExperiment()}async function f(){o.value=await e.createExperiment({name:r.value}),await e.selectExperiment(o.value),n.value=!1,r.value=t.value.name}async function _(){try{await e.startExperiment(),await e.fetchCurrentExperiment(),V("Experiment started!",{type:"success"})}catch(g){V(g.message,{type:"error"})}}async function u(){await e.stopExperiment(),await e.fetchCurrentExperiment()}return F(async()=>{await e.fetchExperiments(),await e.fetchCurrentExperiment(),e.currentExperiment&&(o.value=e.currentExperiment.id)}),(g,c)=>{const j=y("v-select"),h=y("v-btn"),z=y("v-text-field"),A=y("v-container");return l(),K(A,null,{default:x(()=>[v("div",H,[v("div",J,[p(j,{modelValue:o.value,"onUpdate:modelValue":[c[0]||(c[0]=$=>o.value=$),s],items:m.value,"item-title":"name","item-value":"id",label:"Select Experiment",dense:"",outlined:"",class:"flex-grow-1 mt-3 experiment-select",style:{minWidth:"150px"},disabled:t.value.status==="running"},null,8,["modelValue","items","disabled"]),p(h,{color:"primary",onClick:a,class:"mt-3",style:{height:"60px"},title:"New Experiment",disabled:t.value.status==="running"},{default:x(()=>c[2]||(c[2]=[E("+")])),_:1},8,["disabled"])]),v("div",Q,[p(h,{class:U(["start-button",{active:t.value.status==="running"}]),style:I({"background-color":t.value.status==="running"?"#28a745":"transparent",opacity:t.value.status==="running"?.5:1}),onClick:_,color:"success",title:"Start the experiment loop - measure OD every minute and dilute the cultures as necessary, according to the parameters.",disabled:t.value.status==="running"},{default:x(()=>c[3]||(c[3]=[E(" Start ")])),_:1},8,["class","style","disabled"]),p(h,{class:U(["start-button",{active:t.value.status==="stopped"}]),style:I({"background-color":t.value.status==="stopped"?"#dc3545":"transparent",opacity:t.value.status==="stopped"?.5:1}),onClick:u,color:"error",title:"Stop gracefully - wait for the current dilution to finish.",disabled:t.value.status==="stopped"},{default:x(()=>c[4]||(c[4]=[E(" Stop ")])),_:1},8,["class","style","disabled"])]),n.value?(l(),d("div",X,[p(z,{modelValue:r.value,"onUpdate:modelValue":c[1]||(c[1]=$=>r.value=$),label:"New Experiment Name",outlined:"",dense:"",class:"flex-grow-1 mt-3"},null,8,["modelValue"]),p(h,{color:"success",onClick:f,class:"ml-3 mt-3"},{default:x(()=>c[5]||(c[5]=[E("Create Experiment")])),_:1})])):C("",!0),t.value?(l(),d("div",Y,[p(G)])):C("",!0)])]),_:1})}}},ee=D(Z,[["__scopeId","data-v-28756c19"]]);const te={id:"CulturePlot"},ae={class:"control-container"},ne={class:"button-row"},se={class:"button-container"},re={__name:"ExperimentChart",setup(S){const e=k(),{currentExperiment:r,selectedVials:n,plot_data:o}=T(e),i=[1,2,3,4,5,6,7],t=b(()=>i.filter(a=>n.value[a]));async function m(){if(r.value)for(let a of t.value)await e.fetchCulturePlot(a)}async function s(a,f){let _;f.altKey?_={[a]:!0}:_={...n.value,[a]:!n.value[a]},e.setSelectedVials(_),_[a]&&await e.fetchCulturePlot(a)}return F(()=>{m()}),(a,f)=>{const _=y("v-btn");return l(),d("div",te,[v("div",ae,[v("div",ne,[p(_,{class:"plot-button",color:"success",onClick:m,title:"Plot selected vials. alt-click to select single vial"},{default:x(()=>f[0]||(f[0]=[E("Plot Data")])),_:1}),v("div",se,[(l(),d(w,null,B(i,u=>v("div",{key:u,class:"button-item"},[p(_,{color:N(n)[u]?"primary":"secondary",style:I({"background-color":N(n)[u]?"#007bff":"transparent"}),onClick:g=>s(u,g),id:`vial-button-${u}`},{default:x(()=>[E(O(`Vial ${u}`),1)]),_:2},1032,["color","style","onClick","id"])])),64))])])]),(l(!0),d(w,null,B(t.value,u=>(l(),d("div",{key:u},[p(L,{vial:u,data:N(o)[u]},null,8,["vial","data"])]))),128))])}}},le=D(re,[["__scopeId","data-v-9ef9e3fb"]]),ce={__name:"ExperimentTab",setup(S){const e=k(),{experiments:r,currentExperiment:n,errorMessage:o}=T(e),i=b(()=>{var m,s;return Object.keys(((s=(m=n.value)==null?void 0:m.parameters)==null?void 0:s.cultures)||{}).length>0});return(t,m)=>(l(),d("div",null,[p(ee),i.value?(l(),K(le,{key:0})):C("",!0)]))}};export{ce as default};
