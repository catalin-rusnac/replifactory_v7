import{z as Le,N as Ne,J as Ve,O as ot,k as P,m as ve,p as Ee,A as de,P as Ie,L as Ce,Q as Be,_ as se,B as re,h as Y,o as s,c as d,a as l,F as Z,i as ae,t as G,e as X,w as _e,v as ye,j as oe,C as I,d as W,R as ke,S as be,r as q,q as O,f as m,s as L,l as te,M as st,T as it,U as rt,n as Re,b as me,y as Pe,g as ut}from"./index-dba55fd0.js";import{u as ue}from"./device-dcde96f0.js";import{C as De,B as ct,S as dt,a as vt,b as qe,L as je,p as Ke,c as ze,d as Ge,e as pt,P as ft}from"./chart-48157de6.js";/* empty css              */const We={data:{type:Object,required:!0},options:{type:Object,default:()=>({})},plugins:{type:Array,default:()=>[]},datasetIdKey:{type:String,default:"label"},updateMode:{type:String,default:void 0}},mt={ariaLabel:{type:String},ariaDescribedby:{type:String}},gt={type:{type:String,required:!0},destroyDelay:{type:Number,default:0},...We,...mt},bt=ot[0]==="2"?(p,a)=>Object.assign(p,{attrs:a}):(p,a)=>Object.assign(p,a);function ge(p){return Be(p)?Ie(p):p}function _t(p){let a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:p;return Be(a)?new Proxy(p,{}):p}function yt(p,a){const e=p.options;e&&a&&Object.assign(e,a)}function He(p,a){p.labels=a}function Je(p,a,e){const S=[];p.datasets=a.map(g=>{const o=p.datasets.find(y=>y[e]===g[e]);return!o||!g.data||S.includes(o)?{...g}:(S.push(o),Object.assign(o,g),o)})}function ht(p,a){const e={labels:[],datasets:[]};return He(e,p.labels),Je(e,p.datasets,a),e}const Ct=Le({props:gt,setup(p,a){let{expose:e,slots:S}=a;const g=P(null),o=Ne(null);e({chart:o});const y=()=>{if(!g.value)return;const{type:M,data:v,options:i,plugins:u,datasetIdKey:c}=p,b=ht(v,c),_=_t(b,v);o.value=new De(g.value,{type:M,data:_,options:{...i},plugins:u})},E=()=>{const M=Ie(o.value);M&&(p.destroyDelay>0?setTimeout(()=>{M.destroy(),o.value=null},p.destroyDelay):(M.destroy(),o.value=null))},F=M=>{M.update(p.updateMode)};return ve(y),Ee(E),de([()=>p.options,()=>p.data],(M,v)=>{let[i,u]=M,[c,b]=v;const _=Ie(o.value);if(!_)return;let j=!1;if(i){const K=ge(i),f=ge(c);K&&K!==f&&(yt(_,K),j=!0)}if(u){const K=ge(u.labels),f=ge(b.labels),D=ge(u.datasets),w=ge(b.datasets);K!==f&&(He(_.config.data,K),j=!0),D&&D!==w&&(Je(_.config.data,D,p.datasetIdKey),j=!0)}j&&Ce(()=>{F(_)})},{deep:!0}),()=>Ve("canvas",{role:"img",ariaLabel:p.ariaLabel,ariaDescribedby:p.ariaDescribedby,ref:g},[Ve("p",{},[S.default?S.default():""])])}});function Qe(p,a){return De.register(a),Le({props:We,setup(e,S){let{expose:g}=S;const o=Ne(null),y=E=>{o.value=E==null?void 0:E.chart};return g({chart:o}),()=>Ve(Ct,bt({ref:y},{type:p,...e}))}})}const kt=Qe("bar",ct),Dt=Qe("scatter",dt);const wt={class:"pump-data"},St={class:"iteration-rotation-wrapper"},$t={class:"iteration"},xt={class:"rotation"},Ot=["onClick"],Vt={key:0},It={key:1},Et=["onUpdate:modelValue","onChange"],Pt={class:"chart-container"},Mt={key:0,class:"calibration-section"},Ft={__name:"PumpCalibration",props:{pumpId:{type:Number,required:!0}},setup(p){De.register(vt,qe,je,Ke,ze,Ge);const a=p,e=ue(),{calibrationModeEnabled:S,pumps:g,valves:o}=re(e),y=P({datasets:[{data:[]}]}),E=P({responsive:!0,devicePixelRatio:4,maintainAspectRatio:!1,plugins:{legend:{display:!1}},backgroundColor:"rgba(0, 140, 186, 0.3)",layout:{padding:{top:20}},scales:{x:{title:{display:!0,text:"rotations"}},y:{title:{display:!0,text:"mL / rotation"},beginAtZero:!1,suggestedMin:.1,suggestedMax:.22}}}),F=P({}),M=P(null),v=P([{rotations:1,iterations:50,total_ml:NaN},{rotations:5,iterations:10,total_ml:NaN},{rotations:10,iterations:5,total_ml:NaN},{rotations:50,iterations:1,total_ml:NaN}]),i=Y(()=>{var f,D;return((D=(f=g.value)==null?void 0:f.calibration)==null?void 0:D[a.pumpId])||{}});function u(){return{labels:Object.keys(i.value),datasets:[{label:null,data:Object.values(i.value),fill:!1,borderColor:"rgb(75, 192, 192)",tension:.1}]}}function c(){y.value=u()}function b(f){if(!Object.values(o.value.states).some(w=>w==="open")){alert("At least one valve must be open to start the pump");return}F.value[f]=!F.value[f],F.value[f]?K(v.value[f]):e.setPartStateAction({devicePart:"pumps",partIndex:a.pumpId,newState:"stopped"})}function _(f){F.value[f]=!1}function j(f){f.total_ml&&(e.setPartCalibrationAction({devicePart:"pumps",partIndex:a.pumpId,newCalibration:{...i.value,[f.rotations]:f.total_ml/f.rotations/f.iterations}}),F.value[f]=!1)}async function K(f){if(!confirm(`Pumping ${f.rotations} rotations ${f.iterations} times. Please blank the scale. Continue?`)){const w=v.value.findIndex(h=>h===f);_(w);return}try{const w=Date.now()+Math.random();M.value=w;const h=e.startPumpCalibrationSequence({pumpId:a.pumpId,rotations:f.rotations,iterations:f.iterations});await new Promise($=>setTimeout($,100)),await e.fetchDeviceData(),await h;const C=v.value.findIndex($=>$===f);if(_(C),M.value===w){const $=parseFloat(prompt("Enter total mL pumped"));isNaN($)||(f.total_ml=$,j(f))}M.value===w&&(M.value=null)}catch(w){console.error("Calibration failed:",w);const h=v.value.findIndex(C=>C===f);_(h),M.value=null}}return ve(()=>{i.value&&c(),v.value.forEach(f=>{f.total_ml=(i.value[f.rotations]||0)*f.rotations*f.iterations,f.total_ml=f.total_ml?f.total_ml.toFixed(2):""})}),de(i,()=>{c()},{deep:!0}),de(()=>{var f,D;return(D=(f=g.value)==null?void 0:f.states)==null?void 0:D[a.pumpId]},(f,D)=>{f==="stopped"&&D==="running"&&(Object.values(F.value).some(Boolean)&&M.value&&(M.value=null),Object.keys(F.value).forEach(h=>{F.value[h]&&(F.value[h]=!1)}))}),(f,D)=>(s(),d("div",wt,[l("table",null,[D[1]||(D[1]=l("thead",null,[l("tr",null,[l("th",null,"Calibration Sequence"),l("th"),l("th",null,"Volume (mL)")])],-1)),l("tbody",null,[(s(!0),d(Z,null,ae(v.value,(w,h)=>(s(),d("tr",{key:h},[l("td",null,[l("div",St,[l("div",$t,G(w.iterations),1),D[0]||(D[0]=l("div",{class:"multiplier"},"x",-1)),l("div",xt,G(w.rotations)+" rots",1)])]),l("td",null,[l("button",{onClick:C=>b(h),class:X([F.value[h]?"stop-button":"",F.value[h]===!1&&v.value[h].total_ml?"restart-button":""])},[F.value[h]?(s(),d("span",Vt,"Stop")):(s(),d("span",It,"Start"))],10,Ot)]),l("td",null,[_e(l("input",{"onUpdate:modelValue":C=>w.total_ml=C,onChange:C=>j(w),type:"float"},null,40,Et),[[ye,w.total_ml]])])]))),128))])]),l("div",Pt,[y.value.datasets[0].data.length>0?(s(),oe(I(kt),{key:0,id:"pump-calibration-chart",options:E.value,class:"pump-calibration-chart",data:y.value},null,8,["options","data"])):W("",!0)]),I(S)?(s(),d("div",Mt)):W("",!0)]))}},At=se(Ft,[["__scopeId","data-v-23032033"]]);const Rt={class:"dialog-title"},Tt={class:"d-flex align-center"},Ut={class:"flex-grow-1 mr-3"},Lt={__name:"PumpSettingsDialog",props:{modelValue:{type:Boolean,default:!1},pumpId:{type:Number,required:!0},pumpName:{type:String,required:!0}},emits:["update:modelValue","settingsUpdated"],setup(p,{emit:a}){const e=p,S=a,g=ue(),{pumps:o}=re(g),y=P(e.modelValue),E=P(!1),F=P(!1),M=P(!1),v=P(1),i={max_speed_rps:4,min_speed_rps:.01,acceleration:.01,deceleration:.01,kval_run:.8,kval_acc:.57,kval_dec:.3,stall_threshold:2.03,supply_voltage:12},u=ke({...i}),c=P(12),b=Y(()=>(u.kval_run*c.value).toFixed(1)),_=Y(()=>(u.kval_acc*c.value).toFixed(1)),j=Y(()=>(u.kval_dec*c.value).toFixed(1));de(()=>e.modelValue,C=>{var $,ne;if(y.value=C,C){const pe=(ne=($=o.value)==null?void 0:$.states)==null?void 0:ne[e.pumpId];M.value=pe==="running",K()}}),de(y,C=>{S("update:modelValue",C)}),de(()=>{var C,$;return($=(C=o.value)==null?void 0:C.states)==null?void 0:$[e.pumpId]},C=>{y.value&&(M.value=C==="running")});async function K(){try{const C=await be.get(`/pump/${e.pumpId}/stepper-params`);C.data.success&&(Object.assign(u,C.data.params),C.data.params.supply_voltage&&(c.value=C.data.params.supply_voltage))}catch(C){console.error("Error loading pump settings:",C),Object.assign(u,i),c.value=i.supply_voltage}}async function f(){E.value=!0;try{const C=await be.post(`/pump/${e.pumpId}/stepper-params`,{params:u});C.data.success?(S("settingsUpdated",{pumpId:e.pumpId,params:{...u}}),w()):alert("Error saving settings: "+(C.data.error||"Unknown error"))}catch(C){console.error("Error saving pump settings:",C),alert("Error saving settings: "+C.message)}finally{E.value=!1}}function D(){Object.assign(u,i),c.value=i.supply_voltage}function w(){y.value=!1}async function h(){F.value=!0;try{const C=M.value?"stop":"start",$={action:C};if(C==="start"){if(!v.value||v.value<.01||v.value>10){alert("Speed must be between 0.01 and 10 RPS"),F.value=!1;return}$.speed=v.value}const ne=await be.post(`/pump/${e.pumpId}/continuous-run`,$);ne.data.success?(M.value=ne.data.running||!1,await g.fetchDeviceData()):alert("Error: "+(ne.data.error||"Unknown error"))}catch(C){console.error("Error toggling continuous run:",C),alert("Error: "+C.message)}finally{F.value=!1}}return(C,$)=>{const ne=q("v-card-title"),pe=q("v-alert"),r=q("v-text-field"),R=q("v-col"),J=q("v-row"),U=q("v-btn"),H=q("v-card"),N=q("v-container"),z=q("v-card-text"),fe=q("v-spacer"),ee=q("v-card-actions"),Q=q("v-dialog");return s(),oe(Q,{modelValue:y.value,"onUpdate:modelValue":$[9]||($[9]=T=>y.value=T),"max-width":"600px"},{default:O(()=>[m(H,null,{default:O(()=>[m(ne,{class:"text-h5"},{default:O(()=>[l("span",Rt,G(p.pumpName)+" Pump Stepper Settings",1)]),_:1}),m(z,null,{default:O(()=>[m(pe,{type:"warning",class:"mb-4"},{default:O(()=>$[10]||($[10]=[L(" These settings are temporary and will reset to defaults when the device reconnects. ")])),_:1}),m(N,null,{default:O(()=>[m(J,null,{default:O(()=>[m(R,{cols:"12",md:"6"},{default:O(()=>[m(r,{modelValue:u.max_speed_rps,"onUpdate:modelValue":$[0]||($[0]=T=>u.max_speed_rps=T),modelModifiers:{number:!0},label:"Max Speed (RPS)",type:"number",step:"0.1",min:"0.1",max:"10",hint:"Maximum speed in rotations per second","persistent-hint":""},null,8,["modelValue"])]),_:1}),m(R,{cols:"12",md:"6"},{default:O(()=>[m(r,{modelValue:u.min_speed_rps,"onUpdate:modelValue":$[1]||($[1]=T=>u.min_speed_rps=T),modelModifiers:{number:!0},label:"Min Speed (RPS)",type:"number",step:"0.01",min:"0.01",max:"1",hint:"Minimum speed in rotations per second","persistent-hint":""},null,8,["modelValue"])]),_:1})]),_:1}),m(J,null,{default:O(()=>[m(R,{cols:"12",md:"6"},{default:O(()=>[m(r,{modelValue:u.acceleration,"onUpdate:modelValue":$[2]||($[2]=T=>u.acceleration=T),modelModifiers:{number:!0},label:"Acceleration",type:"number",step:"0.001",min:"0.001",max:"1",hint:"Rate of speed increase (step/tick²)","persistent-hint":""},null,8,["modelValue"])]),_:1}),m(R,{cols:"12",md:"6"},{default:O(()=>[m(r,{modelValue:u.deceleration,"onUpdate:modelValue":$[3]||($[3]=T=>u.deceleration=T),modelModifiers:{number:!0},label:"Deceleration",type:"number",step:"0.001",min:"0.001",max:"1",hint:"Rate of speed decrease (step/tick²)","persistent-hint":""},null,8,["modelValue"])]),_:1})]),_:1}),m(J,null,{default:O(()=>[m(R,{cols:"12",md:"4"},{default:O(()=>[m(r,{modelValue:u.kval_run,"onUpdate:modelValue":$[4]||($[4]=T=>u.kval_run=T),modelModifiers:{number:!0},label:"KVAL Run",type:"number",step:"0.01",min:"0",max:"0.996",hint:`Run voltage: ${(u.kval_run*100).toFixed(1)}% = ${b.value}V`,"persistent-hint":""},null,8,["modelValue","hint"])]),_:1}),m(R,{cols:"12",md:"4"},{default:O(()=>[m(r,{modelValue:u.kval_acc,"onUpdate:modelValue":$[5]||($[5]=T=>u.kval_acc=T),modelModifiers:{number:!0},label:"KVAL Acceleration",type:"number",step:"0.01",min:"0",max:"0.996",hint:`Acceleration voltage: ${(u.kval_acc*100).toFixed(1)}% = ${_.value}V`,"persistent-hint":""},null,8,["modelValue","hint"])]),_:1}),m(R,{cols:"12",md:"4"},{default:O(()=>[m(r,{modelValue:u.kval_dec,"onUpdate:modelValue":$[6]||($[6]=T=>u.kval_dec=T),modelModifiers:{number:!0},label:"KVAL Deceleration",type:"number",step:"0.01",min:"0",max:"0.996",hint:`Deceleration voltage: ${(u.kval_dec*100).toFixed(1)}% = ${j.value}V`,"persistent-hint":""},null,8,["modelValue","hint"])]),_:1})]),_:1}),m(J,null,{default:O(()=>[m(R,{cols:"12",md:"6"},{default:O(()=>[m(r,{modelValue:u.stall_threshold,"onUpdate:modelValue":$[7]||($[7]=T=>u.stall_threshold=T),modelModifiers:{number:!0},label:"Stall Threshold",type:"number",step:"0.03125",min:"0.03125",max:"4",hint:"Current threshold for motor stall detection (31.25mA to 4A)","persistent-hint":""},null,8,["modelValue"])]),_:1})]),_:1}),m(J,{class:"mt-4"},{default:O(()=>[m(R,{cols:"12"},{default:O(()=>[m(H,{variant:"outlined",class:"pa-4 continuous-run-card"},{default:O(()=>[l("div",Tt,[l("div",Ut,[$[11]||($[11]=l("div",{class:"text-subtitle2 mb-2",style:{color:"white"}},"∞ Continuous Run",-1)),m(r,{modelValue:v.value,"onUpdate:modelValue":$[8]||($[8]=T=>v.value=T),modelModifiers:{number:!0},label:"Speed (RPS)",type:"number",step:"0.01",min:"0.01",max:"10",density:"compact","hide-details":"",theme:"dark",style:{"max-width":"140px"}},null,8,["modelValue"])]),m(U,{class:X(["continuous-run-button-compact",{"continuous-run-stop-compact":M.value}]),onClick:h,loading:F.value},{default:O(()=>[$[12]||($[12]=l("span",{style:{"font-size":"16px","margin-right":"4px"}},"∞",-1)),L(" "+G(M.value?"STOP":"RUN"),1)]),_:1},8,["class","loading"])])]),_:1})]),_:1})]),_:1})]),_:1})]),_:1}),m(ee,null,{default:O(()=>[m(U,{color:"grey",onClick:D},{default:O(()=>$[13]||($[13]=[L(" Reset to Defaults ")])),_:1}),m(fe),m(U,{color:"grey",onClick:w},{default:O(()=>$[14]||($[14]=[L(" Cancel ")])),_:1}),m(U,{color:"primary",onClick:f,loading:E.value},{default:O(()=>$[15]||($[15]=[L(" Apply Settings ")])),_:1},8,["loading"])]),_:1})]),_:1})]),_:1},8,["modelValue"])}}},Nt=se(Lt,[["__scopeId","data-v-ff01ee70"]]);const Bt={key:0,class:"pump-controls"},qt={key:1},jt={class:"pump-input"},Kt={key:1},zt=2e3,Gt={__name:"PumpControl",setup(p){const a=ue(),{pumps:e,valves:S,calibrationModeEnabled:g}=re(a),o=P({}),y=ke({show:!1,pumpId:null,pumpName:""}),E=P({}),F=P({});de(()=>{var r;return(r=e.value)==null?void 0:r.states},r=>{},{immediate:!1});const M={1:"MAIN",2:"DRUG",3:"MISSING!!!",4:"WASTE"},v=ke({1:null,2:null,3:null,4:null}),i=ke({1:null,2:null,3:null,4:null});ve(()=>{e.value||a.fetchDeviceData()}),Ee(()=>{Object.keys(E.value).forEach(r=>{D(parseInt(r))}),Object.keys(o.value).forEach(r=>{clearInterval(o.value[r])})});async function u(r,R){if(R.ctrlKey&&R.shiftKey){w(r);return}if(F.value[r]){F.value[r]=!1;return}if(o.value[r]&&(clearInterval(o.value[r]),delete o.value[r]),e.value.states[r]==="running"){await a.setPartStateAction({devicePart:"pumps",partIndex:r,newState:"stopped"}),await a.fetchDeviceData();return}if(!Object.values(S.value.states).some(H=>H==="open")){alert("At least one valve must be open to start the pump");return}const U=parseFloat(i[r]);if(!U){alert("Please set the volume before starting the pump");return}try{o.value[r]=setInterval(async()=>{await a.fetchDeviceData(),e.value.states[r]!=="running"&&(clearInterval(o.value[r]),delete o.value[r])},500),await a.setPartStateAction({devicePart:"pumps",partIndex:r,newState:"running",input:{volume:U}}),setTimeout(()=>{o.value[r]&&(clearInterval(o.value[r]),delete o.value[r],a.fetchDeviceData())},3e4)}catch(H){console.error(`Error starting pump ${r}:`,H),e.value.states[r]="stopped",o.value[r]&&(clearInterval(o.value[r]),delete o.value[r])}}function c(r,R){i[R]=r;const J=parseFloat(i[R]);isNaN(J)?v[R]="":v[R]=_(J,R).toFixed(2)}function b(r,R){v[R]=r;const J=parseFloat(v[R]);isNaN(J)?i[R]="":i[R]=j(J,R)}function _(r,R){const J=e.value.calibration[R],U=Object.entries(J).map(([T,he])=>[parseInt(T),he]).sort((T,he)=>T[0]-he[0]);if(r>=U[U.length-1][0]*U[U.length-1][1])return r/U[U.length-1][1];let H=U[0],N=U[U.length-1];for(let T=0;T<U.length-1;T++)if(r>=U[T][0]*U[T][1]&&r<=U[T+1][0]*U[T+1][1]){H=U[T],N=U[T+1];break}const z=H[0]*H[1],fe=N[0]*N[1],ee=(r-z)/(fe-z),Q=H[1]+(N[1]-H[1])*ee;return r/Q}function j(r,R){const J=e.value.calibration[R],U=Object.entries(J).map(([ee,Q])=>[parseInt(ee),Q]).sort((ee,Q)=>ee[0]-Q[0]);if(r>=U[U.length-1][0])return(r*U[U.length-1][1]).toFixed(2);let H=U[0],N=U[U.length-1];for(let ee=0;ee<U.length-1;ee++)if(r>=U[ee][0]&&r<=U[ee+1][0]){H=U[ee],N=U[ee+1];break}const z=(r-H[0])/(N[0]-H[0]),fe=H[1]+(N[1]-H[1])*z;return(r*fe).toFixed(2)}function K(r){console.log(`Pump ${r.pumpId} settings updated:`,r.params)}function f(r){D(r),E.value[r]=setTimeout(()=>{F.value[r]=!0,w(r)},zt)}function D(r){E.value[r]&&(clearTimeout(E.value[r]),delete E.value[r])}function w(r){y.pumpId=r,y.pumpName=M[r],y.show=!0}function h(r,R){R.preventDefault(),F.value[r]=!1,f(r)}function C(r,R){D(r),setTimeout(()=>{F.value[r]=!1},50)}function $(r,R){!R.ctrlKey&&!R.shiftKey&&(F.value[r]=!1,f(r))}function ne(r,R){D(r),setTimeout(()=>{F.value[r]=!1},50)}function pe(r){D(r),F.value[r]=!1}return(r,R)=>{const J=q("v-progress-circular"),U=q("v-btn"),H=q("v-text-field");return s(),d(Z,null,[I(e)&&I(e).states?(s(),d("div",Bt,[(s(),d(Z,null,ae([1,2,4],N=>l("div",{class:"pump",key:N},[m(U,{class:X(["pump-button",{"stop-button":I(e).states[N]==="running"}]),onClick:z=>u(N,z),onTouchstart:z=>h(N,z),onTouchend:z=>C(N),onMousedown:z=>$(N,z),onMouseup:z=>ne(N),onMouseleave:z=>pe(N),title:`Start ${M[N]} Pump (hold or Ctrl+Shift+Click to open advanced settings)`},{default:O(()=>[I(e).states[N]==="running"?(s(),oe(J,{key:0,indeterminate:"",color:"white",class:"spinner-custom",size:"64"})):(s(),d("span",qt,[L(G(M[N]),1),R[1]||(R[1]=l("br",null,null,-1)),R[2]||(R[2]=L("pump"))]))]),_:2},1032,["class","onClick","onTouchstart","onTouchend","onMousedown","onMouseup","onMouseleave","title"]),l("div",jt,[m(H,{label:"Volume (mL)",type:"number",dense:"",modelValue:i[N],"onUpdate:modelValue":[z=>i[N]=z,z=>c(z,N)]},null,8,["modelValue","onUpdate:modelValue"]),I(g)?(s(),oe(H,{key:0,label:"Rotations",type:"number",dense:"",modelValue:v[N],"onUpdate:modelValue":[z=>v[N]=z,z=>b(z,N)]},null,8,["modelValue","onUpdate:modelValue"])):W("",!0),I(g)?(s(),oe(At,{key:1,pumpId:N},null,8,["pumpId"])):W("",!0)])])),64))])):(s(),d("div",Kt," Loading pump data... ")),m(Nt,{modelValue:y.show,"onUpdate:modelValue":R[0]||(R[0]=N=>y.show=N),"pump-id":y.pumpId,"pump-name":y.pumpName,onSettingsUpdated:K},null,8,["modelValue","pump-id","pump-name"])],64)}}},Wt=se(Gt,[["__scopeId","data-v-e363be9c"]]);const Ht={class:"valve-calibration"},Jt={class:"warning-header"},Qt={key:0,class:"loading-state"},Zt={key:1,class:"calibration-controls"},Xt={class:"slider-container"},Yt={class:"slider-label"},ea={class:"value"},ta={class:"slider-container"},aa={class:"slider-label"},na={class:"value"},la={class:"valve-controls"},oa={__name:"ValveCalibration",props:{valveId:{type:Number,required:!0}},setup(p){const a=p,e=ue(),{valves:S}=re(e),g=P(.03),o=P(.12),y=P(!1),E=P(!0);de(S,b=>{var _,j;b&&(g.value=((_=b.duty_cycle_open)==null?void 0:_[a.valveId])??.03,o.value=((j=b.duty_cycle_closed)==null?void 0:j[a.valveId])??.12),E.value=!1},{immediate:!0}),ve(async()=>{try{await e.fetchDeviceData()}catch(b){console.error("Error initializing valve calibration:",b),E.value=!1}});async function F(b){var _,j;y.value=!0;try{await e.setPartStateAction({devicePart:"valves",partIndex:a.valveId,newState:b?"open":"closed",input:{dutyCycle:b?g.value:o.value}}),te.success(`Valve ${a.valveId} ${b?"opened":"closed"} successfully`)}catch(K){if(console.error("Error operating valve:",K),!K.response)te.error("Server connection error. Please check if the backend server is running.");else{const f=((j=(_=K.response)==null?void 0:_.data)==null?void 0:j.message)||K.message||"Operation failed";te.error(`Failed to ${b?"open":"close"} valve ${a.valveId}: ${f}`)}}finally{y.value=!1}}async function M(){try{await be.post("/set-valve-duty-cycle-open",{valve:a.valveId,duty_cycle:g.value}),te.success(`Valve ${a.valveId} open duty cycle set to ${g.value.toFixed(3)}`)}catch(b){console.error("Error updating open duty cycle:",b),te.error(`Failed to update valve ${a.valveId} open duty cycle`)}}async function v(){try{await be.post("/set-valve-duty-cycle-closed",{valve:a.valveId,duty_cycle:o.value}),te.success(`Valve ${a.valveId} closed duty cycle set to ${o.value.toFixed(3)}`)}catch(b){console.error("Error updating closed duty cycle:",b),te.error(`Failed to update valve ${a.valveId} closed duty cycle`)}}async function i(){g.value=.03,o.value=.12;try{await Promise.all([M(),v()]),te.success(`Valve ${a.valveId} duty cycles reset to defaults`)}catch{te.error(`Failed to reset valve ${a.valveId} duty cycles`)}}function u(b){g.value=b}function c(b){o.value=b}return(b,_)=>{const j=q("v-icon"),K=q("v-progress-circular"),f=q("v-slider"),D=q("v-btn");return s(),d("div",Ht,[l("div",Jt,[m(j,{color:"error",size:"large"},{default:O(()=>_[4]||(_[4]=[L("warning")])),_:1}),l("h2",null,"Warning! Valve "+G(p.valveId)+" Calibration Mode",1)]),E.value?(s(),d("div",Qt,[m(K,{indeterminate:"",color:"primary"}),_[5]||(_[5]=l("span",null,"Loading valve data...",-1))])):(s(),d("div",Zt,[l("div",Xt,[l("div",Yt,[_[6]||(_[6]=l("span",null,"Open Duty Cycle",-1)),l("span",ea,G(g.value.toFixed(3)),1)]),m(f,{modelValue:g.value,"onUpdate:modelValue":[_[0]||(_[0]=w=>g.value=w),u],min:.02,max:.04,step:.001,color:"primary","track-color":"grey","thumb-label":"",onMouseup:M},null,8,["modelValue"])]),l("div",ta,[l("div",aa,[_[7]||(_[7]=l("span",null,"Closed Duty Cycle",-1)),l("span",na,G(o.value.toFixed(3)),1)]),m(f,{modelValue:o.value,"onUpdate:modelValue":[_[1]||(_[1]=w=>o.value=w),c],min:.11,max:.13,step:.001,color:"primary","track-color":"grey","thumb-label":"",onMouseup:v},null,8,["modelValue"])]),l("div",la,[m(D,{color:"success",onClick:_[2]||(_[2]=w=>F(!0)),loading:y.value,disabled:y.value},{default:O(()=>_[8]||(_[8]=[L(" Open Valve ")])),_:1},8,["loading","disabled"]),m(D,{color:"error",onClick:_[3]||(_[3]=w=>F(!1)),loading:y.value,disabled:y.value},{default:O(()=>_[9]||(_[9]=[L(" Close Valve ")])),_:1},8,["loading","disabled"]),m(D,{color:"primary",onClick:i},{default:O(()=>_[10]||(_[10]=[L(" Reset Defaults ")])),_:1})])]))])}}},sa=se(oa,[["__scopeId","data-v-2b40de6c"]]);const ia={class:"valve-controls"},ra=["onClick","disabled"],ua={key:0,class:"spinner-border spinner-custom",role:"status"},ca={key:1},da={__name:"ValveControl",setup(p){const a=ue(),{valves:e}=re(a),S=P({}),g=new(window.AudioContext||window.webkitAudioContext),o=P(!1),y=P(null);function E(v){const i=v==="open"?500:300,u=v==="open"?300:500,c=g.createOscillator();c.type="sine";const b=g.createGain();return b.gain.setValueAtTime(.1,g.currentTime),c.connect(b),b.connect(g.destination),c.frequency.setValueAtTime(i,g.currentTime),c.frequency.linearRampToValueAtTime(u,g.currentTime+.3),c.start(),c.stop(g.currentTime+.3),c}async function F(v){const i=e.value.states[v];if(S.value[v])return;S.value={...S.value,[v]:!0};const u=E(i);try{await a.setPartStateAction({devicePart:"valves",partIndex:v,newState:i==="open"?"closed":"open"}),u.stop()}catch(c){console.error(c)}finally{S.value={...S.value,[v]:!1}}}function M(v,i){if(i.ctrlKey&&i.shiftKey){y.value=v,o.value=!0;return}F(v)}return(v,i)=>{const u=q("v-dialog");return s(),d(Z,null,[l("div",ia,[(s(),d(Z,null,ae(7,c=>l("button",{class:X(["btn",{"btn-danger":I(e).states[c]==="closed"&&!S.value[c],"btn-success":I(e).states[c]==="open"&&!S.value[c],"btn-warning":S.value[c]}]),key:c,onClick:b=>M(c,b),disabled:S.value[c]},[S.value[c]?(s(),d("div",ua)):(s(),d("span",ca,"Valve "+G(c),1))],10,ra)),64))]),m(u,{modelValue:o.value,"onUpdate:modelValue":i[1]||(i[1]=c=>o.value=c),"max-width":"600"},{default:O(()=>[o.value?(s(),oe(sa,{key:0,valveId:y.value,onClose:i[0]||(i[0]=c=>o.value=!1)},null,8,["valveId"])):W("",!0)]),_:1},8,["modelValue"])],64)}}},va=se(da,[["__scopeId","data-v-a341c808"]]);const pa={class:"elements-container"},fa={class:"stirrer-name"},ma={key:0},ga={style:{position:"relative",display:"inline-block"}},ba={style:{position:"relative",display:"inline-block"}},_a={class:"buttons-container"},Te=0,Ue=1,ya={__name:"StirrerCalibration",props:{stirrerId:{type:Number,required:!0}},setup(p){const a=p,e=P(null),S=P(null),g=P(null),o=new(window.AudioContext||window.webkitAudioContext);let y=null,E=null,F=null;const M=ue(),{calibrationModeEnabled:v,stirrers:i}=re(M),u=Y(()=>i.value&&i.value.states?i.value.states[a.stirrerId]:void 0);function c(w){M.setPartStateAction({devicePart:"stirrers",partIndex:a.stirrerId,newState:w})}function b(w){if(i.value&&i.value.states)for(let h=1;h<=7;h++)i.value.states[h]=w;M.setAllStirrersStateAction&&M.setAllStirrersStateAction(w)}function _(w,h){K(h.target.value)}function j(w,h){!i.value||!i.value.calibration||!i.value.calibration[a.stirrerId]||M.setPartCalibrationAction({devicePart:"stirrers",partIndex:a.stirrerId,newCalibration:{low:i.value.calibration[a.stirrerId].low,high:i.value.calibration[a.stirrerId].high}}).catch(C=>{console.error("Error updating stirrer calibration:",C)})}function K(w){y||(y=o.createOscillator(),E=o.createGain(),y.type="sine",E.gain.setValueAtTime(.1,o.currentTime),y.connect(E),E.connect(o.destination),y.start());const h=300+w*500;y.frequency.setValueAtTime(h,o.currentTime),F&&clearTimeout(F),F=setTimeout(f,200)}function f(){y&&(E.gain.exponentialRampToValueAtTime(.001,o.currentTime+.01),E.gain.setValueAtTime(.1,o.currentTime+.02),y.stop(o.currentTime+.02),y=null,E=null)}function D(w,h){(w==="high"&&u.value!=="high"||w==="low"&&u.value!=="low")&&(h.preventDefault(),te("Enable stirrer to adjust speed",{type:"info"}))}return ve(()=>{window.addEventListener("resize",()=>{})}),st(()=>{window.removeEventListener("resize",()=>{})}),(w,h)=>(s(),d("div",{class:"stirrer-calibrator",ref_key:"container",ref:e},[l("div",pa,[l("div",fa,[l("header",null,"Stirrer "+G(p.stirrerId),1)]),I(v)&&I(i)&&I(i).calibration&&I(i).calibration[p.stirrerId]?(s(),d("div",ma,[l("div",ga,[_e(l("input",{type:"range",class:X(["slider slider-high",[{active:u.value==="high"},{"slider-disabled":u.value!=="high"}]]),min:Te,max:Ue,step:.01,"onUpdate:modelValue":h[0]||(h[0]=C=>I(i).calibration[p.stirrerId].high=C),onInput:h[1]||(h[1]=C=>_("high",C)),onChange:h[2]||(h[2]=C=>j())},null,34),[[ye,I(i).calibration[p.stirrerId].high,void 0,{number:!0}]]),u.value!=="high"?(s(),d("div",{key:0,class:"slider-overlay",onClick:h[3]||(h[3]=C=>D("high",C))})):W("",!0)]),l("div",ba,[_e(l("input",{type:"range",class:X(["slider slider-low",[{active:u.value==="low"},{"slider-disabled":u.value!=="low"}]]),min:Te,max:Ue,step:.01,"onUpdate:modelValue":h[4]||(h[4]=C=>I(i).calibration[p.stirrerId].low=C),onInput:h[5]||(h[5]=C=>_("low",C)),onChange:h[6]||(h[6]=C=>j())},null,34),[[ye,I(i).calibration[p.stirrerId].low,void 0,{number:!0}]]),u.value!=="low"?(s(),d("div",{key:0,class:"slider-overlay",onClick:h[7]||(h[7]=C=>D("low",C))})):W("",!0)])])):W("",!0),l("div",_a,[l("button",{class:X(["button button-high",{active:u.value==="high"}]),ref_key:"buttonHigh",ref:S,onClick:h[8]||(h[8]=C=>c("high")),onDblclick:h[9]||(h[9]=C=>b("high"))},"High",34),l("button",{class:X(["button button-low",{active:u.value==="low"}]),ref_key:"buttonLow",ref:g,onClick:h[10]||(h[10]=C=>c("low")),onDblclick:h[11]||(h[11]=C=>b("low"))},"Low",34),l("button",{class:X(["button button-off",{active:u.value==="stopped"}]),ref:"buttonOff",onClick:h[12]||(h[12]=C=>c("stopped")),onDblclick:h[13]||(h[13]=C=>b("stopped"))},"OFF",34)])])],512))}},ha=se(ya,[["__scopeId","data-v-d01f6391"]]);const Ca={name:"StirrerControl",components:{StirrerCalibration:ha}},ka={class:"stirrer-controls"};function Da(p,a,e,S,g,o){const y=q("StirrerCalibration");return s(),d("div",ka,[(s(),d(Z,null,ae(7,E=>m(y,{key:E,stirrerId:E},null,8,["stirrerId"])),64))])}const wa=se(Ca,[["render",Da],["__scopeId","data-v-6cada7fd"]]),Sa={className:"single-chart-container"},$a={__name:"ODChart",props:{partId:{type:Number,required:!0}},setup(p){De.register(Ke,ze,Ge,pt,qe,je,ft);const a=p,e=ue(),{ods:S}=re(e),g=Y(()=>{var v,i;return(i=(v=S.value)==null?void 0:v.calibration)==null?void 0:i[a.partId]}),o=Y(()=>{var v,i;return(i=(v=S.value)==null?void 0:v.calibration_coefs)==null?void 0:i[a.partId]}),y=Y(()=>{var v,i,u,c;return{od:(i=(v=S.value)==null?void 0:v.states)==null?void 0:i[a.partId],signal:(c=(u=S.value)==null?void 0:u.odsignals)==null?void 0:c[a.partId]}});function E(v,i,u){return-Math.log10(v/i)*u}const F=Y(()=>{if(g.value&&typeof g.value=="object"&&o.value){const v=Object.entries(g.value).filter(([b,_])=>_!==null).map(([b,_])=>({x:Number(_),y:Number(b)})).sort((b,_)=>b.x-_.x);let i=Math.min(...v.map(b=>b.x)),u=Math.max(...v.map(b=>b.x));const c=[];i===u&&(i=0,u=50);for(let b=i;b<=u;b+=.1){const _=E(b,...o.value);c.push({x:b,y:_})}return{datasets:[{label:`Vial ${a.partId} Calibration OD`,data:v,borderColor:"#607ecb",backgroundColor:"rgba(83,158,255,0.64)"},{label:`Vial ${a.partId} Current OD`,data:[{x:y.value.signal,y:y.value.od}],pointRadius:5,backgroundColor:"rgba(255,1,60,0.64)"},{label:`Vial ${a.partId} Fit`,data:c,pointRadius:0,borderColor:"rgba(0,70,220,0.38)",borderWidth:2,showLine:!0,fill:!1,borderDash:[2,2]}]}}return{}}),M=Y(()=>{var v,i;return{devicePixelRatio:4,responsive:!0,maintainAspectRatio:!1,plugins:{legend:{display:!1},title:{display:!0,text:`Vial ${a.partId}`+(o.value?`
blank: ${(v=o.value[0])==null?void 0:v.toFixed(2)}, scaling: ${(i=o.value[1])==null?void 0:i.toFixed(2)}`:"")}},scales:{x:{title:{display:!0,text:"Signal (mV)"},suggestedMin:0},y:{title:{display:!0,text:"OD"},suggestedMax:1.5,suggestedMin:0}}}});return(v,i)=>(s(),d("div",Sa,[m(I(Dt),{data:F.value,options:M.value},null,8,["data","options"])]))}};P({show:!1,title:"",content:"",resolve:null});const xa={class:"guide-popup"},Oa={class:"guide-header"},Va={__name:"ODGuide",setup(p){return(a,e)=>{const S=q("v-icon");return s(),d("div",{class:"guide-overlay",onClick:e[1]||(e[1]=rt(g=>a.$emit("close"),["self"]))},[l("div",xa,[l("div",Oa,[e[3]||(e[3]=l("span",{class:"guide-title"},"OD Calibration Guide",-1)),l("button",{class:"guide-close",onClick:e[0]||(e[0]=g=>a.$emit("close"))},[m(S,null,{default:O(()=>e[2]||(e[2]=[L("mdi-close")])),_:1})])]),e[4]||(e[4]=it('<div class="guide-content" data-v-8d7af6ce><div class="guide-section" data-v-8d7af6ce><b class="section-title" data-v-8d7af6ce>What is Optical Density (OD)?</b><br data-v-8d7af6ce><span class="guide-text" data-v-8d7af6ce> Optical Density (OD) measures how much light is absorbed by a sample. The higher the OD, the more cells or particles are in the solution. </span></div><div class="guide-section" data-v-8d7af6ce><b class="section-title" data-v-8d7af6ce>Beer-Lambert Law and Scaling Factor</b><br data-v-8d7af6ce><span class="guide-text" data-v-8d7af6ce> The Beer-Lambert Law relates OD to the transmitted light signal: </span><br data-v-8d7af6ce><span class="formula" data-v-8d7af6ce> OD = -log₁₀(signal / blank_signal) </span><br data-v-8d7af6ce><span class="guide-text" data-v-8d7af6ce> In our devices, the light path is not a standard 1cm cuvette. The curved shape of the vial and the sensor design affect how light travels through the sample. This is corrected using a scaling factor: </span><br data-v-8d7af6ce><span class="formula" data-v-8d7af6ce> OD = -log₁₀(signal / blank_signal) * scaling </span><br data-v-8d7af6ce></div><div class="guide-section" data-v-8d7af6ce><b class="section-title" data-v-8d7af6ce>Calibration Process</b><div class="method-panel" data-v-8d7af6ce><div class="method-heading" data-v-8d7af6ce>Step 1: Measure OD₀ (Blank Signal)</div><div class="od-warning-box" data-v-8d7af6ce><b data-v-8d7af6ce>Important: OD₀ must be measured with a vial containing growth medium!</b><div class="od-warning-details" data-v-8d7af6ce> - Use the same growth medium that will be used in your experiment<br data-v-8d7af6ce> - The vial must be filled with liquid<br data-v-8d7af6ce> - A good blank signal should be above 20mV<br data-v-8d7af6ce> - If the signal is below 20mV, check for:<br data-v-8d7af6ce>   • Proper vial alignment<br data-v-8d7af6ce>   • Clean sensors and vials<br data-v-8d7af6ce>   • No obstructions in the light path </div></div></div><div class="method-panel" data-v-8d7af6ce><div class="method-heading" data-v-8d7af6ce>Step 2 (Optional): Measure additional OD values to calibrate the scaling factor</div><div class="option-container" data-v-8d7af6ce><div class="option-box" data-v-8d7af6ce><div class="method-subheading" data-v-8d7af6ce>Option A: Using Liquid Samples (Recommended)</div><ol class="guide-ol" data-v-8d7af6ce><li data-v-8d7af6ce>Prepare a vial with a known OD between 0.1 and 2.0: </li><li data-v-8d7af6ce>Insert this vial into each slot and measure its signal using the calibration table.</li><li data-v-8d7af6ce>The scaling factor will be automatically calculated from these measurements.</li><i data-v-8d7af6ce>Repeat with different OD values for increased accuracy.</i></ol></div><div class="option-box" data-v-8d7af6ce><div class="method-subheading" data-v-8d7af6ce>Option B: Using Semitransparent Sheets</div><ol class="guide-ol" data-v-8d7af6ce><li data-v-8d7af6ce>Determine the equivalent OD of one or more semitransparent sheets (using a solution which creates the same signal as the sheet inserted in the sensor)</li><li data-v-8d7af6ce>Place the sheet over all sensors at once</li><li data-v-8d7af6ce>Measure the signals and the scaling factor will be calculated automatically</li><i data-v-8d7af6ce>Note: This method is less accurate than using liquid samples</i></ol></div></div></div><div class="method-panel" data-v-8d7af6ce><div class="method-heading" data-v-8d7af6ce>Step 3: Final Check</div><div class="guide-text" data-v-8d7af6ce> Ideally, remeasure OD₀ just before starting the experiment. Small changes in the position of the vial and media composition can affect the signal. </div></div></div></div>',1))])])}}},Ia=se(Va,[["__scopeId","data-v-8d7af6ce"]]);const Ea={class:"od-control-container"},Pa=["onClick","disabled"],Ma={key:1},Fa={key:0,class:"od-output-value error-message"},Aa={key:3,class:"signal-output-value error-message"},Ra={key:0,class:"calibration-section"},Ta={class:"probe-table-outer-container",style:{"margin-bottom":"18px"}},Ua={class:"table-controls"},La={class:"mode-controls"},Na={class:"calibration-table-wrapper"},Ba={class:"calibration-table"},qa={key:0,style:{width:"36px"}},ja={class:"od-value-container"},Ka=["onDblclick"],za=["value","onInput","onBlur","onKeyup"],Ga=["title"],Wa={key:1,class:"signal-value"},Ha={key:1,class:"signal-value"},Ja={key:1,class:"measure-cell-container"},Qa=["onDblclick"],Za=["onDblclick"],Xa=["value","onInput","onBlur","onKeyup"],Ya=["onClick","disabled","title"],en={key:0,class:"measure-button-content"},tn={key:1,class:"measure-button-content"},an={key:0,style:{"text-align":"center",width:"36px",padding:"4px"}},nn=["onClick","disabled"],ln={key:1,style:{width:"36px"}},on={key:0},sn={class:"scaling-factor-container"},rn={class:"calibration-table"},un={class:"scaling-factor-row"},cn=["title"],dn=["onUpdate:modelValue"],vn=["onDblclick","title"],pn=["onBlur","onKeyup"],fn={key:1},mn={key:0,style:{width:"40px"}},gn={key:0,class:"chart-container"},bn={__name:"ODControl",setup(p){const a=ue(),{ods:e,calibrationModeEnabled:S}=re(a),{openDialog:g}=Pe(),o=[1,2,3,4,5,6,7],y=P(!1),E=P(!0),F=P(!1),M=P(!1),v=P(null),i=P({}),u=P({}),c=P({}),b=Y(()=>{let n=new Set;if(e.value.calibration)for(let A in e.value.calibration)for(let B in e.value.calibration[A])n.add(B);return Array.from(n).sort((A,B)=>parseFloat(A)-parseFloat(B))}),_=Y(()=>{if(!e.value.calibration)return[];const n=new Set;for(const t in e.value.calibration)for(const A in e.value.calibration[t])n.add(parseFloat(A));return Array.from(n).sort((t,A)=>t-A)}),j=P(new Set),K=Y(()=>{const n=e.value.calibration_coefs||{};return o.map(t=>{var A;return((A=n[t])==null?void 0:A[1])??"—"})}),f=P([]),D=P(null),w=P(null);de(K,n=>{f.value=[...n]},{immediate:!0}),ve(()=>{a.fetchDeviceData(),document.addEventListener("click",h)}),Ee(()=>{document.removeEventListener("click",h)});function h(n){if(ie.value&&!n.target.closest(".calibration-signal")&&we(ie.value.vial,ie.value.odValue),ce.value&&!n.target.closest(".od-value-input")){const t=_.value.indexOf(ce.value);t!==-1&&J(ce.value,t),ce.value=null}D.value&&!n.target.closest(".scaling-factor-input")&&xe(D.value)}async function C(n){var t,A;if(console.log("handleOdClick called with odIndex:",n,typeof n),v.value===null){v.value=n,delete i.value[n];try{console.log("Starting OD measurement for index:",n);const B=await be.post("/measure-ods",{partIndex:n});if(console.log("Raw API response:",B),B.data.success)console.log("OD measurement successful for index:",n),await a.fetchDeviceData(),delete i.value[n];else throw console.log("API returned failure for index:",n),new Error(B.data.message||"Measurement failed")}catch(B){console.error("Error measuring OD:",B),console.log("Setting error for OD index:",n);const x=((A=(t=B.response)==null?void 0:t.data)==null?void 0:A.message)||B.message||"Measurement failed";i.value={...i.value,[n]:x},console.log("Error set for odIndex:",n,"error:",x),console.log("Full odErrors object:",i.value)}finally{v.value=null}}}function $(n,t,A){c.value[t]||(c.value[t]={}),c.value[t][A]=parseFloat(n.target.value)}function ne(n,t){if(c.value[n]&&c.value[n][t]!==void 0){e.value.calibration[n]||(e.value.calibration[n]={});const A=c.value[n][t];isNaN(c.value[n][t])&&delete e.value.calibration[n][t],a.updateODCalibrationValueAction({od:t,vial:n,newValue:A}).catch(B=>{console.error(`Error updating calibration for vial ${n}:`,B)}),delete c.value[n][t]}}function pe(n,t){return c.value[n]&&c.value[n][t]!==void 0?c.value[n][t]:e.value.calibration&&e.value.calibration[n]&&e.value.calibration[n][t]!==void 0?e.value.calibration[n][t]:""}function r(n,t){if(!e.value.calibration||!e.value.calibration[n]||e.value.calibration[n][t]===void 0)return{background:""};const A=parseFloat(e.value.calibration[n][t]),B=5,x=40;let k;if(A<=0)k=B;else{const V=Math.log(10),le=Math.log(1e3),lt=(Math.log(Math.max(10,Math.min(1e3,A)))-V)/(le-V);k=B+lt*(x-B)}return{background:`rgba(255, 100, 100, ${k/100})`}}function R(n){if(n==null)return"";const t=parseFloat(n);if(isNaN(t))return"";const A=.02,B=.25,x=Math.max(0,Math.min(4,t)),k=Math.log(x+1)/Math.log(5),V=A+k*(B-A);return`background: linear-gradient(to right, rgba(255, 235, 156, ${V}), rgba(255, 235, 156, ${V*.6}))`}async function J(n,t,A){if(u.value[t]!==void 0){const B=u.value[t];if(_.value.some((k,V)=>V!==t&&parseFloat(k)===parseFloat(B))&&!await g({title:"Duplicate OD Value",message:`An OD probe value of ${B} already exists. Are you sure you want to overwrite?`,showCancel:!0})){delete u.value[t];return}_.value[t]=B,delete u.value[t];try{for(let k in e.value.calibration){const V=e.value.calibration[k],le=JSON.parse(JSON.stringify(V));V[n]!==void 0&&(delete le[n],le[B]=V[n],await a.setPartCalibrationAction({devicePart:"ods",partIndex:k,newCalibration:le}))}await a.fetchDeviceData()}catch(k){console.error("Error updating calibration:",k),te.error("Failed to update calibration values")}}}function U(n,t){console.log("handleProbeValueInput",n.target.value),u.value[t]=parseFloat(n.target.value)}function H(){F.value=!0}function N(){F.value=!1}function z(){if(!_.value.length)return .1;const n=Math.max(..._.value);return parseFloat((n+.1).toFixed(2))}async function fe(){const n=z();for(const t of o)e.value.calibration[t]||(e.value.calibration[t]={}),e.value.calibration[t][n]=null,await a.setPartCalibrationAction({devicePart:"ods",partIndex:t,newCalibration:e.value.calibration[t]});await a.fetchDeviceData()}async function ee(n){const t=b.value[n];j.value.add(t);for(const A of o)e.value.calibration[A]&&(delete e.value.calibration[A][t],await a.setPartCalibrationAction({devicePart:"ods",partIndex:A,newCalibration:e.value.calibration[A]}));await a.fetchDeviceData(),j.value.delete(t)}const Q={VIEW:"view",MEASURE:"measure"},T=P(Q.VIEW);Y(()=>({"view-mode":T.value===Q.VIEW,"measure-mode":T.value===Q.MEASURE}));async function he(n,t){try{await a.measureDevicePart({devicePart:"ods",partIndex:n});const A=e.value.odsignals[n];await a.updateODCalibrationValueAction({od:t,vial:n,newValue:A}),await a.fetchDeviceData()}catch(A){console.error("Error measuring cell:",A)}}const ie=P(null),Ze=P(null);function Fe(n,t){ie.value={vial:n,odValue:t},Ce(()=>{const A=document.querySelector(".calibration-signal");A&&A.focus()})}function we(n,t){c.value[n]&&c.value[n][t]!==void 0&&ne(n,t),ie.value=null}function Xe(){if(ie.value=null,ie.value){const{vial:n,odValue:t}=ie.value;c.value[n]&&delete c.value[n][t]}}const ce=P(null);function Ye(n,t){ce.value=n,Ce(()=>{const A=document.querySelector(".od-value-input");A&&A.focus()})}function et(){if(ce.value=null,ce.value){const n=_.value.indexOf(ce.value);n!==-1&&u.value[n]&&delete u.value[n]}}const Se=(n,t)=>({icon:"",color:"#90caf9",tooltip:"Scaling factor"});function Ae(n){return!e.value.calibration||!e.value.calibration[n]?0:Object.values(e.value.calibration[n]).filter(t=>t!=null).length}function $e(n){return Ae(n)===1}function tt(n){const t=Ae(n);return t>=2?"Scaling factor is automatically calculated from multiple calibration points. Cannot be edited.":t===1?"Double-click to edit scaling factor.":"No calibration points available for this vial."}function at(n){if(!$e(n))return;D.value=n;const t=f.value[n-1];w.value=typeof t=="number"?t:2,Ce(()=>{const A=document.querySelector(".scaling-factor-input");A&&(A.focus(),A.select())})}async function xe(n){if(D.value===n)try{w.value&&w.value>0&&await a.setODScalingFactorAction({vial:n,scalingFactor:w.value})}catch(t){console.error("Error setting scaling factor:",t)}finally{D.value=null,w.value=null}}function nt(){D.value=null,w.value=null}const Oe=n=>typeof n!="number"?{icon:"mdi-help-circle-outline",color:"grey",tooltip:"No signal value available"}:n>=20?{icon:"mdi-check-circle",color:"#4caf50",tooltip:"Signal value within expected range"}:n>=12?{icon:"mdi-alert-circle",color:"#ffc107",tooltip:"Signal value slightly low. Consider recalibrating"}:{icon:"mdi-close-circle",color:"#f44336",tooltip:"Signal value too low. Check OD sensor"};return(n,t)=>{const A=q("v-progress-circular"),B=q("v-icon");return s(),d(Z,null,[l("div",Ea,[(s(!0),d(Z,null,ae(I(e).states,(x,k)=>(s(),d("div",{class:"elements-container",key:k},[l("button",{class:"od-button",onClick:V=>C(k),disabled:v.value===k},[v.value===k?(s(),oe(A,{key:0,indeterminate:"",color:"white",size:"24"})):(s(),d("span",Ma,"OD "+G(k),1))],8,Pa),i.value[k]?(s(),d("span",Fa,G(i.value[k]),1)):I(e).states&&I(e).states[k]!==void 0&&I(e).states[k]!==0?(s(),d("span",{key:1,class:X(["od-output-value",{"value-being-replaced":v.value===k}])},G(parseFloat(I(e).states[k].toFixed(2))),3)):(s(),d("span",{key:2,class:X(["od-output-value",{"value-being-replaced":v.value===k}])},"---",2)),t[2]||(t[2]=l("div",{style:{height:"0.5px"}},null,-1)),i.value[k]?(s(),d("span",Aa)):I(e).odsignals&&I(e).odsignals[k]!==void 0&&I(e).odsignals[k]!==0?(s(),d("span",{key:4,class:X(["signal-output-value",{"value-being-replaced":v.value===k}])},"("+G(parseFloat(I(e).odsignals[k].toFixed(2)))+"mV)",3)):(s(),d("span",{key:5,class:X(["signal-output-value",{"value-being-replaced":v.value===k}])},"(---)",2))]))),128))]),I(S)?(s(),d("div",Ra,[l("div",Ta,[t[7]||(t[7]=l("div",{style:{display:"flex","align-items":"center","margin-bottom":"8px"}},null,-1)),l("div",Ua,[t[6]||(t[6]=l("div",{style:{flex:"1"}},null,-1)),l("div",La,[l("button",{class:X(["control-button mode-toggle",{active:T.value===Q.MEASURE}]),onClick:t[0]||(t[0]=x=>T.value=T.value===Q.MEASURE?Q.VIEW:Q.MEASURE)},[m(B,null,{default:O(()=>t[3]||(t[3]=[L("mdi-pencil")])),_:1}),t[4]||(t[4]=L(" Edit "))],2)]),l("button",{class:"control-button help-button",onClick:H},[m(B,null,{default:O(()=>t[5]||(t[5]=[L("mdi-help-circle-outline")])),_:1})])])]),t[16]||(t[16]=l("div",{class:"calibration-controls"},null,-1)),l("div",Na,[l("table",Ba,[l("thead",null,[l("tr",null,[t[8]||(t[8]=l("th",{style:{width:"110px"}},"OD Value",-1)),(s(),d(Z,null,ae(o,x=>l("th",{key:x,style:{width:"90px"}},"Vial "+G(x),1)),64)),y.value?(s(),d("th",qa)):W("",!0)])]),l("tbody",null,[(s(!0),d(Z,null,ae(b.value,(x,k)=>(s(),d("tr",{key:x,class:X({"od-zero-row":parseFloat(x)===0})},[l("td",{style:Re([{width:"110px"},R(x)])},[l("div",ja,[!ce.value||ce.value!==x?(s(),d("span",{key:0,class:"od-value-display",onDblclick:V=>Ye(x),title:"Double click to edit"},G(k<_.value.length?u.value[k]!==void 0?u.value[k]:_.value[k]:x),41,Ka)):(s(),d("input",{key:1,value:u.value[k]!==void 0?u.value[k]:_.value[k],onInput:V=>U(V,k),onBlur:V=>J(x,k),onKeyup:[me(V=>J(x,k),["enter"]),me(et,["esc"])],type:"number",step:"0.1",class:"od-value-input",ref_for:!0,ref:"odValueInput"},null,40,za))])],4),(s(),d(Z,null,ae(o,V=>l("td",{key:V,class:X({"has-data":I(e).calibration&&I(e).calibration[V]&&I(e).calibration[V][x]!==void 0}),style:Re({background:r(V,x).background})},[T.value===Q.VIEW?(s(),d(Z,{key:0},[I(e).calibration&&I(e).calibration[V]&&I(e).calibration[V][x]!==void 0&&I(e).calibration[V][x]!==null?(s(),d(Z,{key:0},[parseFloat(x)===0?(s(),d("div",{key:0,class:"signal-value-with-status",title:Oe(I(e).calibration[V][x]).tooltip},[L(G(I(e).calibration[V][x].toFixed(2))+" ",1),m(B,{color:Oe(I(e).calibration[V][x]).color,size:"small",style:{"margin-left":"4px"}},{default:O(()=>[L(G(Oe(I(e).calibration[V][x]).icon),1)]),_:2},1032,["color"])],8,Ga)):(s(),d("div",Wa,G(I(e).calibration[V][x].toFixed(2)),1))],64)):(s(),d("div",Ha,"---"))],64)):T.value===Q.MEASURE?(s(),d("div",Ja,[I(e).calibration&&I(e).calibration[V]&&I(e).calibration[V][x]!==void 0&&I(e).calibration[V][x]!==null?(s(),d("span",{key:0,class:"signal-value measure-background-value",onDblclick:le=>Fe(V,x),title:"Double click to edit"},G(parseFloat(I(e).calibration[V][x]).toFixed(2))+"mV ",41,Qa)):(s(),d("span",{key:1,class:"signal-value measure-background-value empty-value",onDblclick:le=>Fe(V,x),title:"Double click to edit"}," ——— ",40,Za)),ie.value&&ie.value.vial===V&&ie.value.odValue===x?(s(),d("input",{key:2,value:pe(V,x),onInput:le=>$(le,V,x),onBlur:le=>we(V,x),onKeyup:[me(le=>we(V,x),["enter"]),me(Xe,["esc"])],type:"number",class:"calibration-signal",ref_for:!0,ref_key:"editingInput",ref:Ze},null,40,Xa)):W("",!0),l("button",{class:"measure-cell-button",onClick:le=>he(V,x),disabled:M.value,title:`Calibrate OD ${parseFloat(x).toFixed(2)} signal in vial ${V} (measure now)`},[M.value?(s(),d("span",en,t[9]||(t[9]=[l("span",{class:"loading-spinner"},null,-1)]))):(s(),d("span",tn,[m(B,null,{default:O(()=>t[10]||(t[10]=[L("mdi-camera-metering-center")])),_:1})]))],8,Ya)])):W("",!0)],6)),64)),T.value===Q.MEASURE&&parseFloat(b.value[k])!==0?(s(),d("td",an,[l("button",{class:"delete-od-row",onClick:V=>ee(k),disabled:j.value.has(b.value[k]),title:"Delete row"},[m(B,null,{default:O(()=>t[11]||(t[11]=[L("mdi-delete")])),_:1})],8,nn)])):T.value===Q.MEASURE?(s(),d("td",ln)):W("",!0)],2))),128)),T.value===Q.MEASURE?(s(),d("tr",on,[l("td",null,[l("button",{class:"add-od-probe-table",onClick:fe},[m(B,null,{default:O(()=>t[12]||(t[12]=[L("mdi-plus")])),_:1}),t[13]||(t[13]=L(" Add "))])]),(s(),d(Z,null,ae(o,x=>l("td",{key:"add-row-"+x})),64)),t[14]||(t[14]=l("td",null,null,-1))])):W("",!0)])])]),l("div",sn,[l("table",rn,[l("tbody",null,[l("tr",un,[t[15]||(t[15]=l("th",{class:"scaling-factor-label"},"Scaling Factor",-1)),(s(!0),d(Z,null,ae(f.value,(x,k)=>(s(),d("th",{key:"sf-head-"+k,class:"scaling-factor-cell",title:Se().tooltip},[y.value?_e((s(),d("input",{key:0,type:"number",step:"0.01",min:"0.1","onUpdate:modelValue":V=>f.value[k]=V,style:{width:"60px","text-align":"center",background:"#23272e",color:"#90caf9",border:"1px solid #444","border-radius":"4px"}},null,8,dn)),[[ye,f.value[k],void 0,{number:!0}]]):(s(),d("div",{key:1,class:X(["scaling-factor-value",{editable:$e(k+1),"non-editable":!$e(k+1)}]),onDblclick:V=>at(k+1),title:tt(k+1)},[D.value===k+1?_e((s(),d("input",{key:0,"onUpdate:modelValue":t[1]||(t[1]=V=>w.value=V),onBlur:V=>xe(k+1),onKeyup:[me(V=>xe(k+1),["enter"]),me(nt,["esc"])],type:"number",step:"0.01",min:"0.1",class:"scaling-factor-input",ref_for:!0,ref:"scalingFactorInput"},null,40,pn)),[[ye,w.value,void 0,{number:!0}]]):(s(),d("span",fn,[L(G(typeof x=="number"?x.toFixed(2):x)+" ",1),m(B,{color:Se().color,size:"small",style:{"margin-left":"4px"}},{default:O(()=>[L(G(Se(x,k+1).icon),1)]),_:2},1032,["color"])]))],42,vn))],8,cn))),128)),T.value===Q.MEASURE?(s(),d("th",mn)):W("",!0)])])])]),E.value?(s(),d("div",gn,[(s(),d(Z,null,ae(o,x=>m($a,{partId:x,key:x},null,8,["partId"])),64))])):W("",!0)])):W("",!0),F.value?(s(),oe(Ia,{key:1,onClose:N})):W("",!0)],64)}}},_n=se(bn,[["__scopeId","data-v-6b75e0ac"]]);const Me=ue(),{leds:yn}=re(Me);ve(()=>{yn.value||Me.fetchDeviceData()});const hn={name:"SetLEDColor",data(){return{vials:[1,2,3,4,5,6,7],ledColors:{1:{red:0,green:0,blue:0,color:"#000000"},2:{red:0,green:0,blue:0,color:"#000000"},3:{red:0,green:0,blue:0,color:"#000000"},4:{red:0,green:0,blue:0,color:"#000000"},5:{red:0,green:0,blue:0,color:"#000000"},6:{red:0,green:0,blue:0,color:"#000000"},7:{red:0,green:0,blue:0,color:"#000000"}}}},methods:{async setLEDColor(p,a){if(a.shiftKey){const{red:e,green:S,blue:g}=this.ledColors[p];for(const o of this.vials)this.ledColors[o].red=e,this.ledColors[o].green=S,this.ledColors[o].blue=g,this.ledColors[o].color=this.ledColors[p].color,await this.setIndividualLEDColor(o)}else await this.setIndividualLEDColor(p)},async setIndividualLEDColor(p){const{red:a,green:e,blue:S}=this.ledColors[p];try{console.log("Setting color for vial",p,"to",a,e,S),await Me.setLedColor(p,a,e,S)}catch(g){console.error(`Failed to set color for vial ${p}:`,g),alert(`Error setting color for vial ${p}`)}},updateColor(p){const a=this.ledColors[p].color,{r:e,g:S,b:g}=this.hexToRgb(a);this.ledColors[p].red=e/255,this.ledColors[p].green=S/255,this.ledColors[p].blue=g/255},hexToRgb(p){const a=parseInt(p.slice(1),16);return{r:a>>16&255,g:a>>8&255,b:a&255}}}},Cn={class:"rgb-control-container"},kn={class:"color-selector"},Dn=["onUpdate:modelValue","onInput"],wn=["onClick"];function Sn(p,a,e,S,g,o){return s(),d("div",Cn,[(s(!0),d(Z,null,ae(g.vials,y=>(s(),d("div",{class:"vial-container",key:y},[l("div",kn,[l("label",null,G("Vial "+y),1),_e(l("input",{type:"color","onUpdate:modelValue":E=>g.ledColors[y].color=E,onInput:E=>o.updateColor(y)},null,40,Dn),[[ye,g.ledColors[y].color]])]),l("button",{class:"set-color-button",onClick:E=>o.setLEDColor(y,E)},"Set",8,wn)]))),128))])}const $n=se(hn,[["render",Sn],["__scopeId","data-v-0f12a494"]]);const xn={class:"device-configs"},On={class:"config-actions"},Vn={key:0,class:"error-message"},In={key:1,class:"config-list mt-4"},En={key:0},Pn={key:1,class:"text-muted"},Mn={__name:"DeviceConfigs",setup(p){const a=ue(),{openDialog:e}=Pe(),S=P([]),g=P(""),o=P(!1),y=P(null),E=P(null);async function F(){g.value="",o.value=!0;try{const u=await a.listDeviceConfigs();S.value=(u||[]).sort((c,b)=>b.localeCompare(c))}catch{g.value="Failed to list device configs."}finally{o.value=!1}}async function M(u){g.value="",y.value=u;try{await a.loadDeviceConfig(u)}catch{g.value="Failed to load device config."}finally{y.value=null}}const v=async()=>{g.value="";try{await a.saveCalibrationToBackend(),te.success("Calibration checkpoint saved!")}catch{g.value="Failed to save device configs."}};function i(u){E.value=u,e({title:"Load checkpoint?",message:"Replace default config with checkpoint?"}).then(async c=>{c&&(await M(E.value),E.value=null)})}return(u,c)=>{const b=q("v-icon"),_=q("v-btn"),j=q("v-list-item"),K=q("v-list");return s(),d("div",xn,[l("div",On,[m(_,{color:"success",onClick:v},{default:O(()=>[m(b,{left:""},{default:O(()=>c[0]||(c[0]=[L("mdi-content-save")])),_:1}),c[1]||(c[1]=L(" Save Calibration "))]),_:1}),m(_,{color:"primary",onClick:F,loading:o.value,class:"mr-2"},{default:O(()=>[m(b,{left:""},{default:O(()=>c[2]||(c[2]=[L("mdi-folder-open")])),_:1}),c[3]||(c[3]=L(" Load Calibration Checkpoints "))]),_:1},8,["loading"])]),g.value?(s(),d("div",Vn,G(g.value),1)):W("",!0),S.value.length>0||o.value?(s(),d("div",In,[c[6]||(c[6]=l("h3",{class:"text-h6 mb-2"},"Available Device Calibration Checkpoints",-1)),S.value.length>0?(s(),d("div",En,[m(K,null,{default:O(()=>[(s(!0),d(Z,null,ae(S.value,f=>(s(),oe(j,{key:f,onClick:D=>i(f),class:X({"config-item":!0,loading:y.value===f})},{default:O(()=>[m(b,{left:""},{default:O(()=>c[4]||(c[4]=[L("mdi-file-document")])),_:1}),L(" "+G(f)+" ",1),y.value===f?(s(),oe(b,{key:0,right:""},{default:O(()=>c[5]||(c[5]=[L("mdi-loading")])),_:1})):W("",!0)]),_:2},1032,["onClick","class"]))),128))]),_:1})])):o.value?W("",!0):(s(),d("div",Pn,' Click "Refresh Configs" to load. '))])):W("",!0)])}}},Fn=se(Mn,[["__scopeId","data-v-ecd4ed1d"]]);const An={key:0,class:"experiment-running-overlay"},Rn={key:1,class:"experiment-running-overlay"},Tn={class:"overlay-content"},Un={class:"warning-message"},Ln={class:"calibration-switch-row"},Nn={key:3},Bn={__name:"DeviceControl",setup(p){const a=ue(),e=ut(),{deviceConnected:S,deviceControlEnabled:g,calibrationModeEnabled:o,stirrers:y,pumps:E,valves:F,ods:M}=re(a),{currentExperiment:v}=re(e),i=P(!1),u=Y(()=>g.value),c=Y({get:()=>o.value,set:f=>a.setCalibrationModeEnabled(f)}),b=Y(()=>{var f;return((f=v.value)==null?void 0:f.status)==="running"}),{openDialog:_}=Pe();function j(){i.value=!0,te.warning("Device control bypass enabled. Use caution during running experiment.",{autoClose:5e3})}async function K(){console.log("onReconnectClick"),await _({title:"Reconnect Device?",message:"Are you sure you want to reconnect the device?"})?(te.success("Reconnecting device..."),a.connectDevice()):te.error("Reconnect cancelled")}return ve(()=>{a.fetchDeviceData(),e.fetchCurrentExperiment()}),(f,D)=>{const w=q("v-icon"),h=q("v-btn"),C=q("v-switch");return s(),d("div",{class:X(["DeviceControl",{"device-disconnected":I(S)===!1,"experiment-running-bg":b.value}])},[I(g)===!1?(s(),d("div",An)):W("",!0),b.value&&!i.value?(s(),d("div",Rn,[l("div",Tn,[l("div",Un,[m(w,{color:"white",size:"48"},{default:O(()=>D[1]||(D[1]=[L("mdi-flask")])),_:1}),D[2]||(D[2]=l("h2",null,"Experiment Running",-1)),D[3]||(D[3]=l("p",null,"Device controls are locked during experiment",-1))]),m(h,{class:"bypass-button",color:"error",size:"large",onClick:j},{default:O(()=>[m(w,{left:""},{default:O(()=>D[4]||(D[4]=[L("mdi-close")])),_:1}),D[5]||(D[5]=L(" Bypass "))]),_:1})])])):W("",!0),l("div",Ln,[I(o)?(s(),oe(h,{key:0,class:"reconnect-btn",onClick:K},{default:O(()=>D[6]||(D[6]=[L("Reconnect Device")])),_:1})):W("",!0),m(C,{modelValue:c.value,"onUpdate:modelValue":D[0]||(D[0]=$=>c.value=$),label:"Calibration Mode"},null,8,["modelValue"])]),I(g)||u.value||i.value?(s(),d(Z,{key:2},[m(Wt),m(va),m(wa),m(_n),m($n),I(o)?(s(),oe(Fn,{key:0})):W("",!0)],64)):(s(),d("p",Nn,"Device Control Disabled"))],2)}}},Wn=se(Bn,[["__scopeId","data-v-f514329e"]]);export{Wn as default};
