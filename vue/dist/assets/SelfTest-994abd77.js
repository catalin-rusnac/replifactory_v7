import{u as T}from"./device-360e103d.js";import{C as w,r as j}from"./chart-48157de6.js";import{_ as O,h as C,k as D,A as E,r as v,o as k,c as I,a as y,s as m,f as n,q as c,x as L}from"./index-c21d4337.js";w.register(...j);const U={__name:"StirrerTest",setup(R,{expose:b}){const s=T(),g=C(()=>s.isFetchingCalibration),d=C(()=>{var e;return(e=s.stirrers)==null?void 0:e.speed_profiles}),u=D(null);let r=null;function t(e){r&&r.destroy();const a=[],o=["rgba(255, 99, 132, 1)","rgba(54, 162, 235, 1)","rgba(255, 206, 86, 1)","rgba(75, 192, 192, 1)","rgba(153, 102, 255, 1)","rgba(255, 159, 64, 1)","rgba(201, 203, 207, 1)"];let l=0;for(const[i,h]of Object.entries(e)){const f=[];for(const[x,S]of Object.entries(h)){const $=parseFloat(x),P=S.map(Number),N=P.reduce((B,F)=>B+F,0)/P.length;f.push({x:$,y:N})}f.sort((x,S)=>x.x-S.x),a.push({label:`Stirrer ${i}`,data:f,borderColor:o[l%o.length],backgroundColor:o[l%o.length],fill:!1,tension:.1}),l++}u.value&&(r=new w(u.value,{type:"line",data:{datasets:a},options:{responsive:!0,scales:{x:{type:"linear",position:"bottom",min:0,max:1.02,title:{display:!0,text:"Duty Cycle"}},y:{min:0,max:1e4,title:{display:!0,text:"Revolutions per Minute"}}}}}))}function p(){return r?r.toBase64Image():""}b({getChartImage:p});const _=async()=>{await s.fetchStirrerCalibrationData(),await s.fetchDeviceData(),d.value&&t(d.value)};return E(d,e=>{e&&t(e)}),(e,a)=>{const o=v("v-btn");return k(),I("div",null,[y("h2",null,[a[1]||(a[1]=m("Stirrer Speed Profiles ")),n(o,{onClick:_,disabled:g.value},{default:c(()=>a[0]||(a[0]=[m(" Remeasure (approx. 2 min) ")])),_:1},8,["disabled"])]),y("canvas",{ref_key:"chartCanvas",ref:u},null,512)])}}},V=O(U,[["__scopeId","data-v-24cd76a3"]]);const M={__name:"ODTest",setup(R,{expose:b}){const s=T(),g=C(()=>s.isFetchingCalibration),d=C(()=>{var e;return(e=s.ods)==null?void 0:e.max_signal}),u=D(null);let r=null;function t(e){const a=[],o={red:"rgba(255, 0, 0, 1)",green:"rgba(0, 255, 0, 1)",blue:"rgba(0, 0, 255, 1)",laser:"rgba(139, 0, 0, 1)"};[{key:"laser",label:"Laser (nominal power)"},{key:"red",label:"Red LED (max power)"},{key:"green",label:"Green LED (max power)"},{key:"blue",label:"Blue LED (max power)"}].forEach(({key:i,label:h})=>{if(e[i]){const f=Object.keys(e[i]).map(x=>({x:parseInt(x,10),y:e[i][x]}));a.push({label:h,data:f,backgroundColor:o[i],borderColor:o[i],borderWidth:1,type:"bar"})}}),r&&r.destroy(),u.value&&(r=new w(u.value,{type:"bar",data:{datasets:a},options:{responsive:!0,scales:{x:{type:"linear",position:"bottom",title:{display:!0,text:"Vial"}},y:{title:{display:!0,text:"Signal [mV]"}}}}}))}function p(){return r?r.toBase64Image():""}b({getChartImage:p});async function _(){console.log("Running OD test..."),await s.fetchODCalibrationData(),console.log("OD test completed. Plotting data..."),await s.fetchDeviceData(),d.value?t(d.value):console.error("No OD signal data available.")}return E(d,e=>{e&&t(e)}),(e,a)=>{const o=v("v-btn");return k(),I("div",null,[y("h2",null,[a[1]||(a[1]=m(" Transmitted Light Intensity ")),n(o,{onClick:_,disabled:g.value},{default:c(()=>a[0]||(a[0]=[m(" Remeasure (approx. 5 sec) ")])),_:1},8,["disabled"])]),y("canvas",{ref_key:"chartCanvas",ref:u},null,512)])}}},A=O(M,[["__scopeId","data-v-63e38d72"]]);const H={__name:"SelfTest",setup(R){const b=T(),s=D(null),g=D(null),d=async()=>{await b.fetchDeviceData()};function u(){var h,f;const r=((h=s.value)==null?void 0:h.getChartImage())||"",t=((f=g.value)==null?void 0:f.getChartImage())||"";if(!r||!t){alert("Please run all tests before exporting.");return}const p=`
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8" />
  <title>Self Test Report</title>
</head>
<body>
  <h1>Self Test Report</h1>

  <h2>Stirrer Speed Profiles</h2>
  ${r?`<img src="${r}" alt="Stirrer Chart" style="max-width: 100%;" />`:"<p>No stirrer chart available</p>"}

  <h2>Transmitted Light Intensity</h2>
  ${t?`<img src="${t}" alt="OD Chart" style="max-width: 100%;" />`:"<p>No OD chart available</p>"}

  <p>Exported from the interactive dashboard</p>
</body>
</html>
  `,_=b.hostname||"device",e=new Date().toISOString().split("T")[0],a=`${_}-self-test-report-${e}.html`,o=new Blob([p],{type:"text/html"}),l=URL.createObjectURL(o),i=document.createElement("a");i.href=l,i.download=a,i.click(),URL.revokeObjectURL(l)}return(r,t)=>{const p=v("v-icon"),_=v("v-btn"),e=v("v-tooltip"),a=v("v-col"),o=v("v-row");return k(),I("div",null,[n(o,null,{default:c(()=>[n(a,null,{default:c(()=>[n(e,{text:"Plot test data stored on device"},{activator:c(({props:l})=>[n(_,L(l,{onClick:d}),{default:c(()=>[n(p,null,{default:c(()=>t[0]||(t[0]=[m("mdi-chart-line")])),_:1}),t[1]||(t[1]=m("Plot Self-Test Data "))]),_:2},1040)]),_:1})]),_:1}),n(a,null,{default:c(()=>[n(e,{text:"Export the current page as an HTML file"},{activator:c(({props:l})=>[n(_,L(l,{onClick:u}),{default:c(()=>[n(p,null,{default:c(()=>t[2]||(t[2]=[m("mdi-file-download")])),_:1}),t[3]||(t[3]=m(" Download Self-Test Report "))]),_:2},1040)]),_:1})]),_:1})]),_:1}),t[4]||(t[4]=y("br",null,null,-1)),n(V,{ref_key:"stirrerRef",ref:s},null,512),n(A,{ref_key:"odRef",ref:g},null,512)])}}},Y=O(H,[["__scopeId","data-v-1d8b1d65"]]);export{Y as default};
