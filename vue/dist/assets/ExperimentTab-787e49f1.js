import{_ as I,c as b,r as E,o as l,a as m,b as x,F as h,d as N,e as K,w as M,f as w,l as B,g as $,h as F,i as f,j as p,k as y,n as U,m as D,s as T,t as O,u as P}from"./index-90ae7a18.js";import{u as C,V as L}from"./VialPlot-491e5c5e.js";/* empty css              */const R={class:"experiment-parameters"},W={class:"stock-parameters"},q={__name:"ExperimentParameters",setup(V){const e=C(),r=b(()=>e.currentExperiment||{});async function a(o,u){if(u!==""&&u!==null&&u!==void 0){r.value.parameters[o]=u;try{await e.updateCurrentExperimentParameters(r.value.parameters),B("Parameter updated",{type:"success"})}catch{B("Failed to update parameter",{type:"error"})}}}return(o,u)=>{const t=E("v-text-field");return l(),m("div",R,[x("div",W,[(l(!0),m(h,null,N(r.value.parameters,(d,s)=>(l(),m(h,{key:s},[s!=="cultures"&&s!=="growth_parameters"?(l(),K(t,{key:0,class:"stock-parameter-field",label:`${s}`,modelValue:r.value.parameters[s],"onUpdate:modelValue":n=>r.value.parameters[s]=n,readonly:r.value.status==="running",onBlur:n=>a(s,n.target.value),onKeyup:M(n=>a(s,n.target.value),["enter"])},null,8,["label","modelValue","onUpdate:modelValue","readonly","onBlur","onKeyup"])):w("",!0)],64))),128))])])}}},G=I(q,[["__scopeId","data-v-978c0c9b"]]);const H={class:"experiment-setup"},J={class:"d-flex line-container"},Q={class:"d-flex line-container"},X={key:0,class:"d-flex"},Y={key:1},Z={__name:"ExperimentSetup",setup(V){const e=C(),r=$(""),a=$(!1),o=$(null),u=b(()=>e.experiments),t=b(()=>e.currentExperiment||{}),d=b(()=>[...u.value].reverse());async function s(){t.value.status==="running"&&await e.stopExperiment(),await e.selectExperiment(o.value)}async function n(){a.value=!a.value,t.value.status==="running"&&await e.stopExperiment()}async function _(){t.value?o.value=await e.createExperiment({name:r.value,parameters:t.value.parameters}):o.value=await e.createExperiment({name:r.value}),await s(),a.value=!1,r.value=""}async function v(){await e.startExperiment(),B("Experiment started!",{type:"success"})}async function i(){await e.stopExperiment()}function k(){}return F(async()=>{await e.fetchExperiments(),await e.fetchCurrentExperiment(),e.currentExperiment&&(o.value=e.currentExperiment.id)}),(oe,c)=>{const j=E("v-select"),g=E("v-btn"),z=E("v-text-field"),A=E("v-container");return l(),K(A,null,{default:f(()=>[x("div",H,[x("div",J,[p(j,{modelValue:o.value,"onUpdate:modelValue":[c[0]||(c[0]=S=>o.value=S),s],items:d.value,"item-title":"name","item-value":"id",label:"Select Experiment",dense:"",outlined:"",class:"flex-grow-1 mt-3 experiment-select",style:{minWidth:"150px"},disabled:t.value.status==="running"},null,8,["modelValue","items","disabled"]),p(g,{color:"primary",onClick:n,class:"mt-3",style:{height:"60px"},title:"New Experiment",disabled:t.value.status==="running"},{default:f(()=>c[2]||(c[2]=[y("+")])),_:1},8,["disabled"])]),x("div",Q,[p(g,{class:U(["start-button",{active:t.value.status==="running"}]),style:D({"background-color":t.value.status==="running"?"#28a745":"transparent"}),onClick:v,color:"success",title:"Start the experiment loop - measure OD every minute and dilute the cultures as necessary, according to the parameters."},{default:f(()=>c[3]||(c[3]=[y(" Start ")])),_:1},8,["class","style"]),p(g,{class:U(["start-button",{active:t.value.status==="stopped"}]),style:D({"background-color":t.value.status==="stopped"?"#dc3545":"transparent"}),onClick:i,onDblclick:k,color:"error",title:"Stop gracefully - wait for the current dilution to finish."},{default:f(()=>c[4]||(c[4]=[y(" Stop ")])),_:1},8,["class","style"])]),a.value?(l(),m("div",X,[p(z,{modelValue:r.value,"onUpdate:modelValue":c[1]||(c[1]=S=>r.value=S),label:"New Experiment Name",outlined:"",dense:"",class:"flex-grow-1 mt-3"},null,8,["modelValue"]),p(g,{color:"success",onClick:_,class:"ml-3 mt-3"},{default:f(()=>c[5]||(c[5]=[y("Create Experiment")])),_:1})])):w("",!0),t.value?(l(),m("div",Y,[p(G)])):w("",!0)])]),_:1})}}},ee=I(Z,[["__scopeId","data-v-c4913534"]]);const te={id:"CulturePlot"},ne={class:"control-container"},ae={class:"button-row"},se={class:"button-container"},re={__name:"ExperimentChart",setup(V){const e=C(),{currentExperiment:r,selectedVials:a,plot_data:o}=T(e),u=[1,2,3,4,5,6,7],t=b(()=>u.filter(n=>a.value[n]));async function d(){if(r.value)for(let n of t.value)await e.fetchCulturePlot(n)}async function s(n,_){let v;_.altKey?v={[n]:!0}:v={...a.value,[n]:!a.value[n]},e.setSelectedVials(v),v[n]&&await e.fetchCulturePlot(n)}return F(()=>{d()}),(n,_)=>{const v=E("v-btn");return l(),m("div",te,[x("div",ne,[x("div",ae,[p(v,{class:"plot-button",color:"success",onClick:d,title:"Plot selected vials. alt-click to select single vial"},{default:f(()=>_[0]||(_[0]=[y("Plot Data")])),_:1}),x("div",se,[(l(),m(h,null,N(u,i=>x("div",{key:i,class:"button-item"},[p(v,{color:P(a)[i]?"primary":"secondary",style:D({"background-color":P(a)[i]?"#007bff":"transparent"}),onClick:k=>s(i,k),id:`vial-button-${i}`},{default:f(()=>[y(O(`Vial ${i}`),1)]),_:2},1032,["color","style","onClick","id"])])),64))])])]),(l(!0),m(h,null,N(t.value,i=>(l(),m("div",{key:i},[p(L,{vial:i,data:P(o)[i]},null,8,["vial","data"])]))),128))])}}},le=I(re,[["__scopeId","data-v-9ef9e3fb"]]),pe={__name:"ExperimentTab",setup(V){const e=C(),{experiments:r,currentExperiment:a,errorMessage:o}=T(e),u=b(()=>{var d,s,n,_;const t=Object.keys(((s=(d=a.value)==null?void 0:d.parameters)==null?void 0:s.cultures)||{}).length;return console.log("hasCultures:",t,(_=(n=a.value)==null?void 0:n.parameters)==null?void 0:_.cultures),t>0});return(t,d)=>(l(),m("div",null,[p(ee),u.value?(l(),K(le,{key:0})):w("",!0)]))}};export{pe as default};
