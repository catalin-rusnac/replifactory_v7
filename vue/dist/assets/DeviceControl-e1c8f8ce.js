import{x as Ce,C as ke,z as de,D as Ke,g as M,h as ee,E as He,B as re,G as ve,H as ze,I as we,_ as H,s as X,c as G,o,a as u,b as a,F as L,d as R,t as E,n as B,J as oe,K as le,e as W,p as $,f as T,L as me,r as K,j as V,i as q,k as N,M as Je,l as se,N as We,O as Ye,m as ne,w as he,P as fe}from"./index-cd58fbe6.js";import{C as ue,B as Ze,S as Qe,a as Xe,b as De,L as xe,p as Se,c as $e,d as Oe,u as Y,e as et,P as tt}from"./chart-e405462f.js";/* empty css              */const Ie={data:{type:Object,required:!0},options:{type:Object,default:()=>({})},plugins:{type:Array,default:()=>[]},datasetIdKey:{type:String,default:"label"},updateMode:{type:String,default:void 0}},at={ariaLabel:{type:String},ariaDescribedby:{type:String}},nt={type:{type:String,required:!0},destroyDelay:{type:Number,default:0},...Ie,...at},ot=Ke[0]==="2"?(c,n)=>Object.assign(c,{attrs:n}):(c,n)=>Object.assign(c,n);function te(c){return we(c)?ve(c):c}function lt(c){let n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:c;return we(n)?new Proxy(c,{}):c}function st(c,n){const t=c.options;t&&n&&Object.assign(t,n)}function Pe(c,n){c.labels=n}function Ae(c,n,t){const C=[];c.datasets=n.map(g=>{const d=c.datasets.find(f=>f[t]===g[t]);return!d||!g.data||C.includes(d)?{...g}:(C.push(d),Object.assign(d,g),d)})}function it(c,n){const t={labels:[],datasets:[]};return Pe(t,c.labels),Ae(t,c.datasets,n),t}const rt=Ce({props:nt,setup(c,n){let{expose:t,slots:C}=n;const g=M(null),d=ke(null);t({chart:d});const f=()=>{if(!g.value)return;const{type:h,data:y,options:p,plugins:k,datasetIdKey:s}=c,r=it(y,s),x=lt(r,y);d.value=new ue(g.value,{type:h,data:x,options:{...p},plugins:k})},w=()=>{const h=ve(d.value);h&&(c.destroyDelay>0?setTimeout(()=>{h.destroy(),d.value=null},c.destroyDelay):(h.destroy(),d.value=null))},I=h=>{h.update(c.updateMode)};return ee(f),He(w),re([()=>c.options,()=>c.data],(h,y)=>{let[p,k]=h,[s,r]=y;const x=ve(d.value);if(!x)return;let b=!1;if(p){const v=te(p),D=te(s);v&&v!==D&&(st(x,v),b=!0)}if(k){const v=te(k.labels),D=te(r.labels),P=te(k.datasets),F=te(r.datasets);v!==D&&(Pe(x.config.data,v),b=!0),P&&P!==F&&(Ae(x.config.data,P,c.datasetIdKey),b=!0)}b&&ze(()=>{I(x)})},{deep:!0}),()=>de("canvas",{role:"img",ariaLabel:c.ariaLabel,ariaDescribedby:c.ariaDescribedby,ref:g},[de("p",{},[C.default?C.default():""])])}});function Fe(c,n){return ue.register(n),Ce({props:Ie,setup(t,C){let{expose:g}=C;const d=ke(null),f=w=>{d.value=w==null?void 0:w.chart};return g({chart:d}),()=>de(rt,ot({ref:f},{type:c,...t}))}})}const ut=Fe("bar",Ze),ct=Fe("scatter",Qe);const dt={class:"pump-data"},vt={class:"iteration-rotation-wrapper"},ft={class:"iteration"},pt={class:"rotation"},bt=["onClick"],gt={key:0},mt={key:1},ht=["onUpdate:modelValue","onChange"],_t={class:"chart-container"},yt={key:0,class:"calibration-section"},Ct={__name:"PumpCalibration",props:{pumpId:{type:Number,required:!0}},setup(c){ue.register(Xe,De,xe,Se,$e,Oe);const n=c,t=Y(),{calibrationModeEnabled:C,pumps:g,valves:d}=X(t),f=M({datasets:[{data:[]}]}),w=M({responsive:!0,devicePixelRatio:4,maintainAspectRatio:!1,plugins:{legend:{display:!1}},backgroundColor:"rgba(0, 140, 186, 0.3)",layout:{padding:{top:20}},scales:{x:{title:{display:!0,text:"rotations"}},y:{title:{display:!0,text:"mL / rotation"},beginAtZero:!1,suggestedMin:.1,suggestedMax:.22}}}),I=M({}),h=M([{rotations:1,iterations:50,total_ml:NaN},{rotations:5,iterations:10,total_ml:NaN},{rotations:10,iterations:5,total_ml:NaN},{rotations:50,iterations:1,total_ml:NaN}]),y=G(()=>{var v,D;return((D=(v=g.value)==null?void 0:v.calibration)==null?void 0:D[n.pumpId])||{}});function p(){return{labels:Object.keys(y.value),datasets:[{label:null,data:Object.values(y.value),fill:!1,borderColor:"rgb(75, 192, 192)",tension:.1}]}}function k(){f.value=p()}function s(v){if(!Object.values(d.value.states).some(P=>P==="open")){alert("At least one valve must be open to start the pump");return}I.value[v]=!I.value[v],I.value[v]?b(h.value[v]):t.setPartStateAction({devicePart:"pumps",partIndex:n.pumpId,newState:"stopped"})}function r(v){I.value[v]=!1}function x(v){v.total_ml&&(t.setPartCalibrationAction({devicePart:"pumps",partIndex:n.pumpId,newCalibration:{...y.value,[v.rotations]:v.total_ml/v.rotations/v.iterations}}),I.value[v]=!1)}function b(v){alert(`Pumping ${v.rotations} rotations ${v.iterations} times. Please blank the scale`),t.startPumpCalibrationSequence({pumpId:n.pumpId,rotations:v.rotations,iterations:v.iterations}).then(()=>{r(v);const D=parseFloat(prompt("Enter total mL pumped"));isNaN(D)||(v.total_ml=D,x(v))})}return ee(()=>{y.value&&k(),h.value.forEach(v=>{v.total_ml=(y.value[v.rotations]||0)*v.rotations*v.iterations,v.total_ml=v.total_ml?v.total_ml.toFixed(2):""})}),re(y,()=>{k()},{deep:!0}),(v,D)=>(o(),u("div",dt,[a("table",null,[D[1]||(D[1]=a("thead",null,[a("tr",null,[a("th",null,"Calibration Sequence"),a("th"),a("th",null,"Volume (mL)")])],-1)),a("tbody",null,[(o(!0),u(L,null,R(h.value,(P,F)=>(o(),u("tr",{key:F},[a("td",null,[a("div",vt,[a("div",ft,E(P.iterations),1),D[0]||(D[0]=a("div",{class:"multiplier"},"x",-1)),a("div",pt,E(P.rotations)+" rots",1)])]),a("td",null,[a("button",{onClick:m=>s(F),class:B([I.value[F]?"stop-button":"",I.value[F]===!1&&h.value[F].total_ml?"restart-button":""])},[I.value[F]?(o(),u("span",gt,"Stop")):(o(),u("span",mt,"Start"))],10,bt)]),a("td",null,[oe(a("input",{"onUpdate:modelValue":m=>P.total_ml=m,onChange:m=>x(P),type:"float"},null,40,ht),[[le,P.total_ml]])])]))),128))])]),a("div",_t,[f.value.datasets[0].data.length>0?(o(),W($(ut),{key:0,id:"pump-calibration-chart",options:w.value,class:"pump-calibration-chart",data:f.value},null,8,["options","data"])):T("",!0)]),$(C)?(o(),u("div",yt)):T("",!0)]))}},kt=H(Ct,[["__scopeId","data-v-6558f4be"]]);const wt={key:0,class:"pump-controls"},Dt={key:1},xt={class:"pump-input"},St={key:1},$t={__name:"PumpControl",setup(c){const n=Y(),{pumps:t,valves:C,calibrationModeEnabled:g}=X(n),d={1:"MAIN",2:"DRUG",3:"MISSING!!!",4:"WASTE"},f=me({1:null,2:null,3:null,4:null}),w=me({1:null,2:null,3:null,4:null});ee(()=>{t.value||n.fetchDeviceData()});async function I(s){if(t.value.states[s]==="running"){await n.setPartStateAction({devicePart:"pumps",partIndex:s,newState:"stopped"});return}if(!Object.values(C.value.states).some(b=>b==="open")){alert("At least one valve must be open to start the pump");return}const x=parseFloat(w[s]);if(!x){alert("Please set the volume before starting the pump");return}try{await n.setPartStateAction({devicePart:"pumps",partIndex:s,newState:"running",input:{volume:x}})}catch(b){console.error(b)}finally{await n.setPartStateAction({devicePart:"pumps",partIndex:s,newState:"stopped"})}}function h(s,r){w[r]=s;const x=parseFloat(w[r]);isNaN(x)?f[r]="":f[r]=p(x,r).toFixed(2)}function y(s,r){f[r]=s;const x=parseFloat(f[r]);isNaN(x)?w[r]="":w[r]=k(x,r)}function p(s,r){const x=t.value.calibration[r],b=Object.entries(x).map(([U,ae])=>[parseInt(U),ae]).sort((U,ae)=>U[0]-ae[0]);if(s>=b[b.length-1][0]*b[b.length-1][1])return s/b[b.length-1][1];let v=b[0],D=b[b.length-1];for(let U=0;U<b.length-1;U++)if(s>=b[U][0]*b[U][1]&&s<=b[U+1][0]*b[U+1][1]){v=b[U],D=b[U+1];break}const P=v[0]*v[1],F=D[0]*D[1],m=(s-P)/(F-P),A=v[1]+(D[1]-v[1])*m;return s/A}function k(s,r){const x=t.value.calibration[r],b=Object.entries(x).map(([m,A])=>[parseInt(m),A]).sort((m,A)=>m[0]-A[0]);if(s>=b[b.length-1][0])return(s*b[b.length-1][1]).toFixed(2);let v=b[0],D=b[b.length-1];for(let m=0;m<b.length-1;m++)if(s>=b[m][0]&&s<=b[m+1][0]){v=b[m],D=b[m+1];break}const P=(s-v[0])/(D[0]-v[0]),F=v[1]+(D[1]-v[1])*P;return(s*F).toFixed(2)}return(s,r)=>{const x=K("v-progress-circular"),b=K("v-btn"),v=K("v-text-field");return $(t)&&$(t).states?(o(),u("div",wt,[(o(),u(L,null,R([1,2,4],D=>a("div",{class:"pump",key:D},[V(b,{class:B(["pump-button",{"stop-button":$(t).states[D]==="running"}]),onClick:P=>I(D)},{default:q(()=>[$(t).states[D]==="running"?(o(),W(x,{key:0,indeterminate:"",color:"white",class:"spinner-custom"})):(o(),u("span",Dt,[N(E(d[D]),1),r[0]||(r[0]=a("br",null,null,-1)),r[1]||(r[1]=N("pump"))]))]),_:2},1032,["class","onClick"]),a("div",xt,[V(v,{label:"Volume (mL)",type:"number",dense:"",modelValue:w[D],"onUpdate:modelValue":[P=>w[D]=P,P=>h(P,D)]},null,8,["modelValue","onUpdate:modelValue"]),$(g)?(o(),W(v,{key:0,label:"Rotations",type:"number",dense:"",modelValue:f[D],"onUpdate:modelValue":[P=>f[D]=P,P=>y(P,D)]},null,8,["modelValue","onUpdate:modelValue"])):T("",!0),$(g)?(o(),W(kt,{key:1,pumpId:D},null,8,["pumpId"])):T("",!0)])])),64))])):(o(),u("div",St," Loading pump data... "))}}},Ot=H($t,[["__scopeId","data-v-dc27ed63"]]);const It={class:"valve-controls"},Pt=["onClick","disabled"],At={key:0,class:"spinner-border spinner-custom",role:"status"},Ft={key:1},Mt={__name:"ValveControl",setup(c){const n=Y(),{valves:t}=X(n),C=M({}),g=new(window.AudioContext||window.webkitAudioContext);function d(w){const I=w==="open"?500:300,h=w==="open"?300:500,y=g.createOscillator();y.type="sine";const p=g.createGain();return p.gain.setValueAtTime(.1,g.currentTime),y.connect(p),p.connect(g.destination),y.frequency.setValueAtTime(I,g.currentTime),y.frequency.linearRampToValueAtTime(h,g.currentTime+.3),y.start(),y.stop(g.currentTime+.3),y}async function f(w){const I=t.value.states[w];if(C.value[w])return;C.value={...C.value,[w]:!0};const h=d(I);try{await n.setPartStateAction({devicePart:"valves",partIndex:w,newState:I==="open"?"closed":"open"}),h.stop()}catch(y){console.error(y)}finally{C.value={...C.value,[w]:!1}}}return(w,I)=>(o(),u("div",It,[(o(),u(L,null,R(7,h=>a("button",{class:B(["btn",{"btn-danger":$(t).states[h]==="closed"&&!C.value[h],"btn-success":$(t).states[h]==="open"&&!C.value[h],"btn-warning":C.value[h]}]),key:h,onClick:y=>f(h),disabled:C.value[h]},[C.value[h]?(o(),u("div",At)):(o(),u("span",Ft,"Valve "+E(h),1))],10,Pt)),64))]))}},Tt=H(Mt,[["__scopeId","data-v-9591560c"]]);const Vt={class:"elements-container"},Lt={class:"stirrer-name"},Nt={key:0},Et={style:{position:"relative",display:"inline-block"}},Rt={style:{position:"relative",display:"inline-block"}},Bt={class:"buttons-container"},_e=0,ye=1,qt={__name:"StirrerCalibration",props:{stirrerId:{type:Number,required:!0}},setup(c){const n=c,t=M(null),C=M(null),g=M(null),d=new(window.AudioContext||window.webkitAudioContext);let f=null,w=null,I=null;const h=Y(),{calibrationModeEnabled:y,stirrers:p}=X(h),k=G(()=>p.value&&p.value.states?p.value.states[n.stirrerId]:void 0);function s(F){h.setPartStateAction({devicePart:"stirrers",partIndex:n.stirrerId,newState:F})}function r(F){if(p.value&&p.value.states)for(let m=1;m<=7;m++)p.value.states[m]=F;h.setAllStirrersStateAction&&h.setAllStirrersStateAction(F)}function x(F,m){v(m.target.value)}function b(F,m){!p.value||!p.value.calibration||!p.value.calibration[n.stirrerId]||h.setPartCalibrationAction({devicePart:"stirrers",partIndex:n.stirrerId,newCalibration:{low:p.value.calibration[n.stirrerId].low,high:p.value.calibration[n.stirrerId].high}}).catch(A=>{console.error("Error updating stirrer calibration:",A)})}function v(F){f||(f=d.createOscillator(),w=d.createGain(),f.type="sine",w.gain.setValueAtTime(.1,d.currentTime),f.connect(w),w.connect(d.destination),f.start());const m=300+F*500;f.frequency.setValueAtTime(m,d.currentTime),I&&clearTimeout(I),I=setTimeout(D,200)}function D(){f&&(w.gain.exponentialRampToValueAtTime(.001,d.currentTime+.01),w.gain.setValueAtTime(.1,d.currentTime+.02),f.stop(d.currentTime+.02),f=null,w=null)}function P(F,m){(F==="high"&&k.value!=="high"||F==="low"&&k.value!=="low")&&(m.preventDefault(),se("Enable stirrer to adjust speed",{type:"info"}))}return ee(()=>{window.addEventListener("resize",()=>{})}),Je(()=>{window.removeEventListener("resize",()=>{})}),(F,m)=>(o(),u("div",{class:"stirrer-calibrator",ref_key:"container",ref:t},[a("div",Vt,[a("div",Lt,[a("header",null,"Stirrer "+E(c.stirrerId),1)]),$(y)&&$(p)&&$(p).calibration&&$(p).calibration[c.stirrerId]?(o(),u("div",Nt,[a("div",Et,[oe(a("input",{type:"range",class:B(["slider slider-high",[{active:k.value==="high"},{"slider-disabled":k.value!=="high"}]]),min:_e,max:ye,step:.01,"onUpdate:modelValue":m[0]||(m[0]=A=>$(p).calibration[c.stirrerId].high=A),onInput:m[1]||(m[1]=A=>x("high",A)),onChange:m[2]||(m[2]=A=>b())},null,34),[[le,$(p).calibration[c.stirrerId].high,void 0,{number:!0}]]),k.value!=="high"?(o(),u("div",{key:0,class:"slider-overlay",onClick:m[3]||(m[3]=A=>P("high",A))})):T("",!0)]),a("div",Rt,[oe(a("input",{type:"range",class:B(["slider slider-low",[{active:k.value==="low"},{"slider-disabled":k.value!=="low"}]]),min:_e,max:ye,step:.01,"onUpdate:modelValue":m[4]||(m[4]=A=>$(p).calibration[c.stirrerId].low=A),onInput:m[5]||(m[5]=A=>x("low",A)),onChange:m[6]||(m[6]=A=>b())},null,34),[[le,$(p).calibration[c.stirrerId].low,void 0,{number:!0}]]),k.value!=="low"?(o(),u("div",{key:0,class:"slider-overlay",onClick:m[7]||(m[7]=A=>P("low",A))})):T("",!0)])])):T("",!0),a("div",Bt,[a("button",{class:B(["button button-high",{active:k.value==="high"}]),ref_key:"buttonHigh",ref:C,onClick:m[8]||(m[8]=A=>s("high")),onDblclick:m[9]||(m[9]=A=>r("high"))},"High",34),a("button",{class:B(["button button-low",{active:k.value==="low"}]),ref_key:"buttonLow",ref:g,onClick:m[10]||(m[10]=A=>s("low")),onDblclick:m[11]||(m[11]=A=>r("low"))},"Low",34),a("button",{class:B(["button button-off",{active:k.value==="stopped"}]),ref:"buttonOff",onClick:m[12]||(m[12]=A=>s("stopped")),onDblclick:m[13]||(m[13]=A=>r("stopped"))},"OFF",34)])])],512))}},Ut=H(qt,[["__scopeId","data-v-d01f6391"]]);const jt={name:"StirrerControl",components:{StirrerCalibration:Ut}},Gt={class:"stirrer-controls"};function Kt(c,n,t,C,g,d){const f=K("StirrerCalibration");return o(),u("div",Gt,[(o(),u(L,null,R(7,w=>V(f,{key:w,stirrerId:w},null,8,["stirrerId"])),64))])}const Ht=H(jt,[["render",Kt],["__scopeId","data-v-6cada7fd"]]),zt={className:"single-chart-container"},Jt={__name:"ODChart",props:{partId:{type:Number,required:!0}},setup(c){ue.register(Se,$e,Oe,et,De,xe,tt);const n=c,t=Y(),{ods:C}=X(t),g=G(()=>{var y,p;return(p=(y=C.value)==null?void 0:y.calibration)==null?void 0:p[n.partId]}),d=G(()=>{var y,p;return(p=(y=C.value)==null?void 0:y.calibration_coefs)==null?void 0:p[n.partId]}),f=G(()=>{var y,p,k,s;return{od:(p=(y=C.value)==null?void 0:y.states)==null?void 0:p[n.partId],signal:(s=(k=C.value)==null?void 0:k.odsignals)==null?void 0:s[n.partId]}});function w(y,p,k){return-Math.log10(y/p)*k}const I=G(()=>{if(g.value&&typeof g.value=="object"&&d.value){const y=Object.entries(g.value).map(([r,x])=>({x:Number(x),y:Number(r)})).sort((r,x)=>r.x-x.x);let p=Math.min(...y.map(r=>r.x)),k=Math.max(...y.map(r=>r.x));const s=[];p===k&&(p=0,k=50);for(let r=p;r<=k;r+=.1){const x=w(r,...d.value);s.push({x:r,y:x})}return{datasets:[{label:`Vial ${n.partId} Calibration OD`,data:y,borderColor:"#607ecb",backgroundColor:"rgba(83,158,255,0.64)"},{label:`Vial ${n.partId} Current OD`,data:[{x:f.value.signal,y:f.value.od}],pointRadius:5,backgroundColor:"rgba(255,1,60,0.64)"},{label:`Vial ${n.partId} Fit`,data:s,pointRadius:0,borderColor:"rgba(0,70,220,0.38)",borderWidth:2,showLine:!0,fill:!1,borderDash:[2,2]}]}}return{}}),h=G(()=>{var y,p;return{devicePixelRatio:4,responsive:!0,maintainAspectRatio:!1,plugins:{legend:{display:!1},title:{display:!0,text:`Vial ${n.partId}`+(d.value?`
blank: ${(y=d.value[0])==null?void 0:y.toFixed(2)}, scaling: ${(p=d.value[1])==null?void 0:p.toFixed(2)}`:"")}},scales:{x:{title:{display:!0,text:"Signal (mV)"},suggestedMin:0},y:{title:{display:!0,text:"OD"},suggestedMax:1.5,suggestedMin:0}}}});return(y,p)=>(o(),u("div",zt,[V($(ct),{data:I.value,options:h.value},null,8,["data","options"])]))}};M({show:!1,title:"",content:"",resolve:null});const Wt={class:"guide-popup"},Yt={class:"guide-header"},Zt={__name:"ODGuide",setup(c){return(n,t)=>{const C=K("v-icon");return o(),u("div",{class:"guide-overlay",onClick:t[1]||(t[1]=Ye(g=>n.$emit("close"),["self"]))},[a("div",Wt,[a("div",Yt,[t[3]||(t[3]=a("span",{class:"guide-title"},"OD Calibration Guide",-1)),a("button",{class:"guide-close",onClick:t[0]||(t[0]=g=>n.$emit("close"))},[V(C,null,{default:q(()=>t[2]||(t[2]=[N("mdi-close")])),_:1})])]),t[4]||(t[4]=We('<div class="guide-content" data-v-172fa8bf><div class="guide-section" data-v-172fa8bf><b class="section-title" data-v-172fa8bf>What is Optical Density (OD)?</b><br data-v-172fa8bf><span class="guide-text" data-v-172fa8bf> Optical Density (OD) measures how much light is absorbed by a sample. The higher the OD, the more cells or particles are in the solution. </span></div><div class="guide-section" data-v-172fa8bf><b class="section-title" data-v-172fa8bf>Beer-Lambert Law</b><br data-v-172fa8bf><span class="guide-text" data-v-172fa8bf> The Beer-Lambert Law relates OD to the transmitted light signal: </span><br data-v-172fa8bf><span class="formula" data-v-172fa8bf> OD = -log₁₀(signal / blank_signal) </span><br data-v-172fa8bf><span class="guide-text" data-v-172fa8bf> That means if 90% of light is blocked - the OD is 1, and if 99% of light is blocked the OD is 2. But, this is assuming light passes through a square cuvette with path length of 1cm. For non-standard containers, the formula can be corrected with a scaling factor. </span><br data-v-172fa8bf><span class="formula" data-v-172fa8bf> OD = -log₁₀(signal / blank_signal) * scaling </span><br data-v-172fa8bf><span class="guide-text" data-v-172fa8bf> The sensors in Replifactory devices typically have a scaling factor between 1.5 and 1.7. You can measure it more precisely, or use 1.6 as a default. It is accurate enough for the purpose of measuring changes in growth rate over long evolution experiments. </span><br data-v-172fa8bf></div><div class="guide-section" data-v-172fa8bf><b class="section-title" data-v-172fa8bf>Calibration Methods</b><div class="method-panel" data-v-172fa8bf><div class="method-heading" data-v-172fa8bf>Method A: Serial Dilution</div><i data-v-172fa8bf>(most accurate, but time-consuming)</i><ol class="guide-ol" data-v-172fa8bf><li data-v-172fa8bf>Prepare 7 vials with a serial dilution, measure their OD in a spectrophotometer, and enter these values as the row names in the calibration table.<br data-v-172fa8bf><i data-v-172fa8bf>Tip: Start with OD &gt;2 but measure only OD &lt;0.8, and extrapolate for higher values.</i></li><li data-v-172fa8bf>Insert each vial into its matching device slot and measure a diagonal in the table (vial 1 in slot 1, vial 2 in slot 2, etc.).</li><li data-v-172fa8bf>Shift all vials by one slot, measure the next diagonal, and repeat until the table is filled with correct signals. The calibration curve is automatically generated.</li></ol></div><div class="method-panel" data-v-172fa8bf><div class="method-heading" data-v-172fa8bf>Method B: Semitransparent Sheets</div><ol class="guide-ol" data-v-172fa8bf> Use sheets with known equivalent ODs to cover all sensors at once, filling one row per measurement. </ol><i data-v-172fa8bf>This method is faster, but sheets may interact with each sensor differently than liquid-filled vials.</i></div><div class="method-panel" data-v-172fa8bf><div class="method-heading" data-v-172fa8bf>Method C: Autofill (fastest)</div><ol class="guide-ol" data-v-172fa8bf><li data-v-172fa8bf>Measure <b data-v-172fa8bf>OD₀</b> (blank signal).</li><li data-v-172fa8bf>Set the scaling factor to 1.6 in each vial.</li><li data-v-172fa8bf>Click <b data-v-172fa8bf>Autofill</b> to automatically calculate the expected signal for each OD value using the Beer-Lambert law.</li></ol><div class="autofill-note" data-v-172fa8bf><i data-v-172fa8bf>This method is accurate enough to measure changes in growth rate for adaptive evolution experiments.</i></div><div class="autofill-info-note" data-v-172fa8bf><i data-v-172fa8bf>Autofilling uses the Beer-Lambert equation, while the calibration curves are fit with a different five-parameter equation. For optimal consistency between these methods, do not use OD values above 3 when autofilling.</i></div></div></div><div class="autofill-explanation" data-v-172fa8bf><b data-v-172fa8bf>Tips</b><br data-v-172fa8bf><div class="od-warning-box" data-v-172fa8bf><b data-v-172fa8bf>Always remeasure OD₀ (the blank) immediately before starting the experiment!</b><div class="od-warning-details" data-v-172fa8bf> The walls of the vials are not perfectly round, so rotating them changes the light deflection and affects the signal. After you install the sterilized vials and fill them with growth medium - it is the perfect time to measure OD₀. </div></div><span class="guide-text" data-v-172fa8bf><ul class="guide-list" data-v-172fa8bf><li data-v-172fa8bf>After starting the experiment, in the first 10-15 minutes, check the plots. If the OD is not between -0.01 and 0.01, consider remeasuring or adjusting the blank signal (and autofilling the rest of the table if using method C).</li></ul><br data-v-172fa8bf></span></div><div class="scaling-info-note" data-v-172fa8bf><i data-v-172fa8bf>The scaling factor is calculated by fitting the Beer-Lambert equation to the calibration data, which includes the OD₀ (blank) signal. If you remeasure OD₀, the scaling factor will change slightly reflecting a fit to new data.</i></div></div>',1))])])}}},Qt=H(Zt,[["__scopeId","data-v-172fa8bf"]]);const Xt={class:"od-control-container"},ea=["onClick"],ta={key:0,class:"od-output-value"},aa={key:1,class:"signal-output-value"},na={key:0,class:"calibration-section"},oa={class:"probe-table-outer-container",style:{"margin-bottom":"18px"}},la={class:"state-table-container"},sa={class:"state-table"},ia={class:"state-row-label",style:{position:"relative"}},ra=["disabled"],ua={key:0},ca={key:1},da={class:"signal-value-text"},va={class:"table-controls"},fa={class:"segmented-toggle"},pa={class:"autofill-group"},ba=["disabled"],ga={key:0},ma={key:1},ha={class:"calibration-table-wrapper"},_a={class:"calibration-table"},ya={class:"scaling-factor-row"},Ca=["onUpdate:modelValue"],ka={key:0,style:{width:"36px"}},wa={key:0,style:{width:"36px"}},Da=["value","onInput","onBlur","onKeyup"],xa=["value","onChange"],Sa=["value","onInput","onBlur","onKeyup"],$a={key:0,class:"signal-value"},Oa={key:1},Ia={key:0,style:{"text-align":"center",width:"36px",padding:"4px"}},Pa=["onClick","disabled"],Aa={key:0},Fa={key:0,class:"chart-container"},Ma={__name:"ODControl",setup(c){const n=Y(),{ods:t,calibrationModeEnabled:C}=X(n),{openDialog:g}=fe(),d=[1,2,3,4,5,6,7],f=M(!1),w=M(!0),I=M("row"),h=M(0),y=M(!1),p=M(!1),k=M({}),s=M({}),r=G(()=>{let l=new Set;if(t.value.calibration)for(let _ in t.value.calibration)for(let i in t.value.calibration[_])l.add(i);return Array.from(l).sort((_,i)=>parseFloat(_)-parseFloat(i))}),x=M(!1),b=G(()=>{if(!t.value.calibration)return[];const l=new Set;for(const e in t.value.calibration)for(const _ in t.value.calibration[e])l.add(parseFloat(_));return Array.from(l).sort((e,_)=>e-_)}),v=M(new Set),D=G(()=>{const l=t.value.calibration_coefs||{};return d.map(e=>{var _;return((_=l[e])==null?void 0:_[1])??"—"})}),P=M([]);re(D,l=>{P.value=[...l]},{immediate:!0}),re([h,I,()=>t.value.calibration_coefs],()=>{var e,_;const l=I.value==="diagonal"?d[h.value%d.length]:d[h.value];(_=(e=t.value.calibration_coefs)==null?void 0:e[l])==null||_[1]},{immediate:!0}),ee(()=>{n.fetchDeviceData()});async function F(l){await n.measureDevicePart({devicePart:"ods",partIndex:l}),await n.fetchDeviceData()}function m(l,e,_){s.value[e]||(s.value[e]={}),s.value[e][_]=parseFloat(l.target.value)}function A(l,e){if(s.value[l]&&s.value[l][e]!==void 0){t.value.calibration[l]||(t.value.calibration[l]={});const _=s.value[l][e];isNaN(s.value[l][e])&&delete t.value.calibration[l][e],n.updateODCalibrationValueAction({od:e,vial:l,newValue:_}).catch(i=>{console.error(`Error updating calibration for vial ${l}:`,i)}),delete s.value[l][e]}}async function U(){y.value=!0;try{const l={};d.forEach((e,_)=>{l[e]=Z(e)}),console.log(l),await n.measureAllODSignalsAction({vial_ods:l}),await n.fetchDeviceData()}catch{}finally{y.value=!1}}function ae(l,e){return s.value[l]&&s.value[l][e]!==void 0?s.value[l][e]:t.value.calibration&&t.value.calibration[l]&&t.value.calibration[l][e]!==void 0?t.value.calibration[l][e]:""}function Z(l){if(I.value==="diagonal"){const e=(l-1-h.value+r.value.length)%r.value.length;return r.value[e]||"-"}else return r.value[h.value]||"-"}function Me(l){let e="";for(l=Math.floor(l);l>=0;)e=String.fromCharCode(65+l%26)+e,l=Math.floor(l/26)-1;return e}function Te(l){let e;return I.value==="diagonal"?e=(l-1-h.value+r.value.length)%r.value.length:e=h.value,Me(e)}function be(l,e){if(!t.value.calibration||!t.value.calibration[l]||t.value.calibration[l][e]===void 0)return{background:""};const _=parseFloat(t.value.calibration[l][e]),i=5,S=40;let O;if(_<=0)O=i;else{const j=Math.log(10),z=Math.log(1e3),Q=(Math.log(Math.max(10,Math.min(1e3,_)))-j)/(z-j);O=i+Q*(S-i)}return{background:`rgba(255, 100, 100, ${O/100})`}}function ce(l){if(l==null)return"";const e=parseFloat(l);if(isNaN(e))return"";const _=.02,i=.25,S=Math.max(0,Math.min(4,e)),O=Math.log(S+1)/Math.log(5),j=_+O*(i-_);return`background: linear-gradient(to right, rgba(255, 235, 156, ${j}), rgba(255, 235, 156, ${j*.6}))`}function Ve(l){const e=Z(l);return e==="-"?"-":t.value.calibration&&t.value.calibration[l]&&t.value.calibration[l][e]!==void 0?parseFloat(t.value.calibration[l][e]).toFixed(2)+" mV":"-"}function ie(l,e){const _=r.value.indexOf(l);return _===-1?!1:I.value==="diagonal"?(e-1-h.value+r.value.length)%r.value.length===_:_===h.value}function Le(){r.value.length!==0&&(h.value=(h.value+1)%r.value.length)}async function Ne(){if(!await g({title:"Autofill Calibration Table?",message:"Use blank and scaling factor to autofill the rest of the table."}))return;p.value=!0;const e={};d.forEach((_,i)=>{let S=null;t.value.calibration&&t.value.calibration[_]&&(t.value.calibration[_][0]!==void 0?S=parseFloat(t.value.calibration[_][0]):t.value.calibration[_]["0.0"]!==void 0?S=parseFloat(t.value.calibration[_]["0.0"]):t.value.calibration[_][0]!==void 0&&(S=parseFloat(t.value.calibration[_][0]))),S===null&&(S=500),e[_]={},e[_][0]=S,b.value.forEach(O=>{if(parseFloat(O)===0)return;const j=parseFloat(P.value[i])||1.6,z=S*Math.pow(10,-parseFloat(O/j));e[_][O.toString()]=z}),n.setPartCalibrationAction({devicePart:"ods",partIndex:_,newCalibration:e[_]})}),p.value=!1,await n.fetchDeviceData(),p.value=!1}async function ge(l,e,_){if(k.value[e]!==void 0){const i=k.value[e],S=b.value.some((z,J)=>J!==e&&parseFloat(z)===parseFloat(i));let O=!0;if(S&&(O=await g({title:"Duplicate OD Value",message:`An OD probe value of ${i} already exists. Are you sure you want to overwrite?`,showCancel:!0})),!O){delete k.value[e],_&&_.target&&setTimeout(()=>{_.target.focus()},0);return}const j=i;b.value[e]=i,delete k.value[e];for(let z in t.value.calibration){const J=t.value.calibration[z],Q=JSON.parse(JSON.stringify(J));delete Q[l],Q[b.value[e]]=J[l],await n.setPartCalibrationAction({devicePart:"ods",partIndex:z,newCalibration:Q})}setTimeout(()=>{const J="probeInput"+b.value.findIndex(Ge=>parseFloat(Ge)===parseFloat(j)),Q=refs[J]||(Array.isArray(refs[J])?refs[J][0]:null);Q&&Q.focus()},0)}}function Ee(l,e){console.log("handleProbeValueInput",l.target.value),k.value[e]=parseFloat(l.target.value)}function Re(){x.value=!0}function Be(){x.value=!1}function qe(){if(!b.value.length)return .1;const l=Math.max(...b.value);return parseFloat((l+.1).toFixed(2))}async function Ue(){const l=qe();for(const e of d)t.value.calibration[e]||(t.value.calibration[e]={}),t.value.calibration[e][l]=0,await n.setPartCalibrationAction({devicePart:"ods",partIndex:e,newCalibration:t.value.calibration[e]});await n.fetchDeviceData()}async function je(l){const e=r.value[l];v.value.add(e);for(const _ of d)t.value.calibration[_]&&(delete t.value.calibration[_][e],await n.setPartCalibrationAction({devicePart:"ods",partIndex:_,newCalibration:t.value.calibration[_]}));await n.fetchDeviceData(),v.value.delete(e)}return(l,e)=>{const _=K("v-icon");return o(),u(L,null,[a("div",Xt,[(o(!0),u(L,null,R($(t).states,(i,S)=>(o(),u("div",{class:"elements-container",key:S},[a("button",{class:"od-button",onClick:O=>F(S)},[a("span",null,"OD "+E(S),1)],8,ea),$(t).states&&$(t).states[S]!==void 0?(o(),u("span",ta,E(parseFloat($(t).states[S].toFixed(2))),1)):T("",!0),e[5]||(e[5]=a("div",{style:{height:"0.5px"}},null,-1)),$(t).odsignals&&$(t).odsignals[S]!==void 0?(o(),u("span",aa,"("+E(parseFloat($(t).odsignals[S].toFixed(2)))+"mV)",1)):T("",!0)]))),128))]),$(C)?(o(),u("div",na,[a("div",oa,[e[15]||(e[15]=a("div",{style:{display:"flex","align-items":"center","margin-bottom":"8px"}},null,-1)),a("div",la,[a("table",sa,[a("thead",null,[a("tr",null,[e[6]||(e[6]=a("th",{class:"state-header-empty"},null,-1)),(o(),u(L,null,R(d,(i,S)=>a("th",{key:"vial-header-"+i,class:"state-vial-header"}," Vial "+E(i),1)),64))])]),a("tbody",null,[a("tr",null,[e[7]||(e[7]=a("th",{class:"state-row-label"},"Probe",-1)),(o(),u(L,null,R(d,(i,S)=>a("td",{key:"probe-"+i,class:"state-probe-cell",style:ne(ce(Z(i)))},E(Te(i)),5)),64))]),a("tr",null,[e[8]||(e[8]=a("th",{class:"state-row-label state-od-label"},"OD Value",-1)),(o(),u(L,null,R(d,(i,S)=>a("td",{key:"od-"+i,class:"state-od-cell",style:ne(ce(Z(i)))},[a("span",null,E(Z(i)),1)],4)),64))]),a("tr",null,[a("th",ia,[a("button",{class:B(["control-button measure-inline",{"disabled-measure":!f.value}]),onClick:U,disabled:!f.value||y.value},[y.value?(o(),u("span",ua,e[9]||(e[9]=[a("span",{class:"loading-spinner"},null,-1),N(" Measuring... ")]))):(o(),u("span",ca,[V(_,null,{default:q(()=>e[10]||(e[10]=[N("mdi-camera-metering-center")])),_:1}),N(" "+E(I.value==="diagonal"?"Measure Diagonal "+(h.value+1):"Measure OD "+r.value[h.value]+" signals"),1)]))],10,ra),f.value?T("",!0):(o(),u("div",{key:0,class:"measure-overlay",onClick:e[0]||(e[0]=i=>$(se).error("Enable edit mode to measure calibration signals"))}))]),(o(),u(L,null,R(d,(i,S)=>a("td",{key:"signal-"+i,class:B(["state-signal-cell",{highlighted:ie(Z(i),i)}]),style:ne({background:ie(Z(i),i)?"rgba(100, 149, 237, 0.15)":be(i,Z(i)).background})},[a("span",da,E(Ve(i)),1)],6)),64))])])])]),a("div",va,[a("button",{class:"control-button next-button",onClick:Le}," Select Next "),a("div",fa,[a("button",{class:B(["toggle-segment",{active:I.value==="diagonal"}]),onClick:e[1]||(e[1]=i=>I.value="diagonal"),type:"button"}," Diagonal ",2),a("button",{class:B(["toggle-segment",{active:I.value==="row"}]),onClick:e[2]||(e[2]=i=>I.value="row"),type:"button"}," Row ",2)]),a("div",pa,[a("button",{class:"control-button auto-round",onClick:e[3]||(e[3]=i=>Ne()),disabled:p.value.value},[p.value.value?(o(),u("span",ga,e[11]||(e[11]=[a("span",{class:"loading-spinner"},null,-1)]))):(o(),u("span",ma," Auto "))],8,ba)]),e[14]||(e[14]=a("div",{style:{flex:"1"}},null,-1)),a("button",{class:B(["control-button mode-toggle",{"edit-on":f.value}]),onClick:e[4]||(e[4]=i=>f.value=!f.value)},[V(_,null,{default:q(()=>[N(E(f.value?"mdi-pencil":"mdi-pencil-outline"),1)]),_:1}),e[12]||(e[12]=N(" Edit "))],2),a("button",{class:"control-button help-button",onClick:Re},[V(_,null,{default:q(()=>e[13]||(e[13]=[N("mdi-help-circle-outline")])),_:1})])])]),e[22]||(e[22]=a("div",{class:"calibration-controls"},null,-1)),a("div",ha,[a("table",_a,[a("thead",null,[a("tr",ya,[e[16]||(e[16]=a("th",{class:"scaling-factor-label"},"Scaling Factor",-1)),(o(!0),u(L,null,R(P.value,(i,S)=>(o(),u("th",{key:"sf-head-"+S,class:"scaling-factor-cell"},[f.value?oe((o(),u("input",{key:0,type:"number",step:"0.01",min:"0.1","onUpdate:modelValue":O=>P.value[S]=O,style:{width:"60px","text-align":"center",background:"#23272e",color:"#90caf9",border:"1px solid #444","border-radius":"4px"}},null,8,Ca)),[[le,P.value[S],void 0,{number:!0}]]):(o(),u(L,{key:1},[N(E(typeof i=="number"?i.toFixed(2):i),1)],64))]))),128)),f.value?(o(),u("th",ka)):T("",!0)]),a("tr",null,[e[17]||(e[17]=a("th",{style:{width:"110px"}},"OD Value",-1)),(o(),u(L,null,R(d,i=>a("th",{key:i,style:{width:"90px"}},"Vial "+E(i),1)),64)),f.value?(o(),u("th",wa)):T("",!0)])]),a("tbody",null,[(o(!0),u(L,null,R(r.value,(i,S)=>(o(),u("tr",{key:i,class:B({"od-zero-row":parseFloat(i)===0})},[a("td",{style:ne([{width:"110px"},ce(i)])},[S<b.value.length?(o(),u("input",{key:0,value:k.value[S]!==void 0?k.value[S]:b.value[S],onInput:O=>Ee(O,S),onBlur:O=>ge(i,S,O),onKeyup:he(O=>{O.preventDefault(),ge(i,S,O)},["enter"]),type:"number",step:"0.1",class:"property-value",style:{"text-align":"center"},ref_for:!0,ref:"probeInput"+S},null,40,Da)):(o(),u("input",{key:1,value:i,onChange:O=>l.updateODCalibrationKeyAction({oldOD:i,newOD:O.target.value}),type:"number",step:"0.1",class:"property-value",style:{"text-align":"center"}},null,40,xa))],4),(o(),u(L,null,R(d,O=>a("td",{key:O,class:B({"has-data":$(t).calibration&&$(t).calibration[O]&&$(t).calibration[O][i]!==void 0,"diagonal-cell":ie(i,O)}),style:ne({background:ie(i,O)?"rgba(100, 149, 237, 0.15)":be(O,i).background})},[f.value?(o(),u("input",{key:0,value:ae(O,i),onInput:j=>m(j,O,i),onBlur:j=>A(O,i),onKeyup:he(j=>A(O,i),["enter"]),type:"number",class:"calibration-signal"},null,40,Sa)):(o(),u(L,{key:1},[$(t).calibration&&$(t).calibration[O]&&$(t).calibration[O][i]!==void 0?(o(),u("span",$a,E(parseFloat($(t).calibration[O][i]).toFixed(2))+"mV ",1)):(o(),u("span",Oa))],64))],6)),64)),f.value?(o(),u("td",Ia,[a("button",{class:"delete-od-row",onClick:O=>je(S),disabled:v.value.has(r.value[S])},[V(_,null,{default:q(()=>e[18]||(e[18]=[N("mdi-delete")])),_:1})],8,Pa)])):T("",!0)],2))),128)),f.value?(o(),u("tr",Aa,[a("td",null,[a("button",{class:"add-od-probe-table",onClick:Ue},[V(_,null,{default:q(()=>e[19]||(e[19]=[N("mdi-plus")])),_:1}),e[20]||(e[20]=N(" Add "))])]),(o(),u(L,null,R(d,i=>a("td",{key:"add-row-"+i})),64)),e[21]||(e[21]=a("td",null,null,-1))])):T("",!0)])])]),w.value?(o(),u("div",Fa,[(o(),u(L,null,R(d,i=>V(Jt,{partId:i,key:i},null,8,["partId"])),64))])):T("",!0)])):T("",!0),x.value?(o(),W(Qt,{key:1,onClose:Be})):T("",!0)],64)}}},Ta=H(Ma,[["__scopeId","data-v-c8449834"]]);const pe=Y(),{leds:Va}=X(pe);ee(()=>{Va.value||pe.fetchDeviceData()});const La={name:"SetLEDColor",data(){return{vials:[1,2,3,4,5,6,7],ledColors:{1:{red:0,green:0,blue:0,color:"#000000"},2:{red:0,green:0,blue:0,color:"#000000"},3:{red:0,green:0,blue:0,color:"#000000"},4:{red:0,green:0,blue:0,color:"#000000"},5:{red:0,green:0,blue:0,color:"#000000"},6:{red:0,green:0,blue:0,color:"#000000"},7:{red:0,green:0,blue:0,color:"#000000"}}}},methods:{async setLEDColor(c,n){if(n.shiftKey){const{red:t,green:C,blue:g}=this.ledColors[c];for(const d of this.vials)this.ledColors[d].red=t,this.ledColors[d].green=C,this.ledColors[d].blue=g,this.ledColors[d].color=this.ledColors[c].color,await this.setIndividualLEDColor(d)}else await this.setIndividualLEDColor(c)},async setIndividualLEDColor(c){const{red:n,green:t,blue:C}=this.ledColors[c];try{console.log("Setting color for vial",c,"to",n,t,C),await pe.setLedColor(c,n,t,C)}catch(g){console.error(`Failed to set color for vial ${c}:`,g),alert(`Error setting color for vial ${c}`)}},updateColor(c){const n=this.ledColors[c].color,{r:t,g:C,b:g}=this.hexToRgb(n);this.ledColors[c].red=t/255,this.ledColors[c].green=C/255,this.ledColors[c].blue=g/255},hexToRgb(c){const n=parseInt(c.slice(1),16);return{r:n>>16&255,g:n>>8&255,b:n&255}}}},Na={class:"rgb-control-container"},Ea={class:"color-selector"},Ra=["onUpdate:modelValue","onInput"],Ba=["onClick"];function qa(c,n,t,C,g,d){return o(),u("div",Na,[(o(!0),u(L,null,R(g.vials,f=>(o(),u("div",{class:"vial-container",key:f},[a("div",Ea,[a("label",null,E("Vial "+f),1),oe(a("input",{type:"color","onUpdate:modelValue":w=>g.ledColors[f].color=w,onInput:w=>d.updateColor(f)},null,40,Ra),[[le,g.ledColors[f].color]])]),a("button",{class:"set-color-button",onClick:w=>d.setLEDColor(f,w)},"Set",8,Ba)]))),128))])}const Ua=H(La,[["render",qa],["__scopeId","data-v-0f12a494"]]);const ja={class:"device-configs"},Ga={class:"config-actions"},Ka={key:0,class:"error-message"},Ha={key:1,class:"config-list mt-4"},za={key:0},Ja={key:1,class:"text-muted"},Wa={__name:"DeviceConfigs",setup(c){const n=Y(),{openDialog:t}=fe(),C=M([]),g=M(""),d=M(!1),f=M(null),w=M(null);async function I(){g.value="",d.value=!0;try{const k=await n.listDeviceConfigs();C.value=(k||[]).sort((s,r)=>r.localeCompare(s))}catch{g.value="Failed to list device configs."}finally{d.value=!1}}async function h(k){g.value="",f.value=k;try{await n.loadDeviceConfig(k)}catch{g.value="Failed to load device config."}finally{f.value=null}}const y=async()=>{g.value="";try{await n.saveCalibrationToBackend(),se.success("Calibration checkpoint saved!")}catch{g.value="Failed to save device configs."}};function p(k){w.value=k,t({title:"Load checkpoint?",message:"Replace default config with checkpoint?"}).then(async s=>{s&&(await h(w.value),w.value=null)})}return(k,s)=>{const r=K("v-icon"),x=K("v-btn"),b=K("v-list-item"),v=K("v-list");return o(),u("div",ja,[a("div",Ga,[V(x,{color:"success",onClick:y},{default:q(()=>[V(r,{left:""},{default:q(()=>s[0]||(s[0]=[N("mdi-content-save")])),_:1}),s[1]||(s[1]=N(" Save Calibration "))]),_:1}),V(x,{color:"primary",onClick:I,loading:d.value,class:"mr-2"},{default:q(()=>[V(r,{left:""},{default:q(()=>s[2]||(s[2]=[N("mdi-folder-open")])),_:1}),s[3]||(s[3]=N(" Load Calibration Checkpoints "))]),_:1},8,["loading"])]),g.value?(o(),u("div",Ka,E(g.value),1)):T("",!0),C.value.length>0||d.value?(o(),u("div",Ha,[s[6]||(s[6]=a("h3",{class:"text-h6 mb-2"},"Available Device Calibration Checkpoints",-1)),C.value.length>0?(o(),u("div",za,[V(v,null,{default:q(()=>[(o(!0),u(L,null,R(C.value,D=>(o(),W(b,{key:D,onClick:P=>p(D),class:B({"config-item":!0,loading:f.value===D})},{default:q(()=>[V(r,{left:""},{default:q(()=>s[4]||(s[4]=[N("mdi-file-document")])),_:1}),N(" "+E(D)+" ",1),f.value===D?(o(),W(r,{key:0,right:""},{default:q(()=>s[5]||(s[5]=[N("mdi-loading")])),_:1})):T("",!0)]),_:2},1032,["onClick","class"]))),128))]),_:1})])):d.value?T("",!0):(o(),u("div",Ja,' Click "Refresh Configs" to load. '))])):T("",!0)])}}},Ya=H(Wa,[["__scopeId","data-v-ecd4ed1d"]]);const Za={key:0,class:"experiment-running-overlay"},Qa={class:"calibration-switch-row"},Xa={key:2},en={__name:"DeviceControl",setup(c){const n=Y(),{deviceConnected:t,deviceControlEnabled:C,calibrationModeEnabled:g,stirrers:d,pumps:f,valves:w,ods:I}=X(n),h=G(()=>C.value),y=G({get:()=>g.value,set:s=>n.setCalibrationModeEnabled(s)}),{openDialog:p}=fe();async function k(){console.log("onReconnectClick"),await p({title:"Reconnect Device?",message:"Are you sure you want to reconnect the device?"})?(se.success("Reconnecting device..."),n.connectDevice()):se.error("Reconnect cancelled")}return ee(()=>{n.fetchDeviceData()}),(s,r)=>{const x=K("v-btn"),b=K("v-switch");return o(),u("div",{class:B(["DeviceControl",{"device-disconnected":$(t)===!1}])},[$(C)===!1?(o(),u("div",Za)):T("",!0),a("div",Qa,[$(g)?(o(),W(x,{key:0,class:"reconnect-btn",onClick:k},{default:q(()=>r[1]||(r[1]=[N("Reconnect Device")])),_:1})):T("",!0),V(b,{modelValue:y.value,"onUpdate:modelValue":r[0]||(r[0]=v=>y.value=v),label:"Calibration Mode"},null,8,["modelValue"])]),$(C)||h.value?(o(),u(L,{key:1},[V(Ot),V(Tt),V(Ht),V(Ta),V(Ua),$(g)?(o(),W(Ya,{key:0})):T("",!0)],64)):(o(),u("p",Xa,"Device Control Disabled"))],2)}}},on=H(en,[["__scopeId","data-v-12bbe645"]]);export{on as default};
