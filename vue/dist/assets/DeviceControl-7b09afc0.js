import{x as we,C as De,z as ve,D as He,g as M,h as ae,E as Se,B as be,G as pe,H as fe,I as xe,_ as Y,s as X,c as G,o,a as i,b as l,F as U,d as j,t as N,n as K,J as le,K as se,e as Z,p as C,f as L,L as he,r as W,j as F,i as R,k as T,M as Je,l as te,N as Ye,O as Ze,m as ye,w as ie,P as ge}from"./index-a4f0009f.js";import{C as re,B as Qe,S as Xe,a as et,b as $e,L as Oe,p as Ie,c as Pe,d as Ee,u as Q,e as tt,P as at}from"./chart-33a7a842.js";/* empty css              */const Ae={data:{type:Object,required:!0},options:{type:Object,default:()=>({})},plugins:{type:Array,default:()=>[]},datasetIdKey:{type:String,default:"label"},updateMode:{type:String,default:void 0}},nt={ariaLabel:{type:String},ariaDescribedby:{type:String}},ot={type:{type:String,required:!0},destroyDelay:{type:Number,default:0},...Ae,...nt},lt=He[0]==="2"?(c,a)=>Object.assign(c,{attrs:a}):(c,a)=>Object.assign(c,a);function ne(c){return xe(c)?pe(c):c}function st(c){let a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:c;return xe(a)?new Proxy(c,{}):c}function it(c,a){const e=c.options;e&&a&&Object.assign(e,a)}function Me(c,a){c.labels=a}function Fe(c,a,e){const _=[];c.datasets=a.map(g=>{const f=c.datasets.find(w=>w[e]===g[e]);return!f||!g.data||_.includes(f)?{...g}:(_.push(f),Object.assign(f,g),f)})}function rt(c,a){const e={labels:[],datasets:[]};return Me(e,c.labels),Fe(e,c.datasets,a),e}const ct=we({props:ot,setup(c,a){let{expose:e,slots:_}=a;const g=M(null),f=De(null);e({chart:f});const w=()=>{if(!g.value)return;const{type:x,data:v,options:u,plugins:D,datasetIdKey:s}=c,p=rt(v,s),$=st(p,v);f.value=new re(g.value,{type:x,data:$,options:{...u},plugins:D})},k=()=>{const x=pe(f.value);x&&(c.destroyDelay>0?setTimeout(()=>{x.destroy(),f.value=null},c.destroyDelay):(x.destroy(),f.value=null))},I=x=>{x.update(c.updateMode)};return ae(w),Se(k),be([()=>c.options,()=>c.data],(x,v)=>{let[u,D]=x,[s,p]=v;const $=pe(f.value);if(!$)return;let m=!1;if(u){const d=ne(u),S=ne(s);d&&d!==S&&(it($,d),m=!0)}if(D){const d=ne(D.labels),S=ne(p.labels),P=ne(D.datasets),A=ne(p.datasets);d!==S&&(Me($.config.data,d),m=!0),P&&P!==A&&(Fe($.config.data,P,c.datasetIdKey),m=!0)}m&&fe(()=>{I($)})},{deep:!0}),()=>ve("canvas",{role:"img",ariaLabel:c.ariaLabel,ariaDescribedby:c.ariaDescribedby,ref:g},[ve("p",{},[_.default?_.default():""])])}});function Le(c,a){return re.register(a),we({props:Ae,setup(e,_){let{expose:g}=_;const f=De(null),w=k=>{f.value=k==null?void 0:k.chart};return g({chart:f}),()=>ve(ct,lt({ref:w},{type:c,...e}))}})}const ut=Le("bar",Qe),dt=Le("scatter",Xe);const vt={class:"pump-data"},pt={class:"iteration-rotation-wrapper"},ft={class:"iteration"},bt={class:"rotation"},gt=["onClick"],mt={key:0},_t={key:1},ht=["onUpdate:modelValue","onChange"],yt={class:"chart-container"},Ct={key:0,class:"calibration-section"},kt={__name:"PumpCalibration",props:{pumpId:{type:Number,required:!0}},setup(c){re.register(et,$e,Oe,Ie,Pe,Ee);const a=c,e=Q(),{calibrationModeEnabled:_,pumps:g,valves:f}=X(e),w=M({datasets:[{data:[]}]}),k=M({responsive:!0,devicePixelRatio:4,maintainAspectRatio:!1,plugins:{legend:{display:!1}},backgroundColor:"rgba(0, 140, 186, 0.3)",layout:{padding:{top:20}},scales:{x:{title:{display:!0,text:"rotations"}},y:{title:{display:!0,text:"mL / rotation"},beginAtZero:!1,suggestedMin:.1,suggestedMax:.22}}}),I=M({}),x=M([{rotations:1,iterations:50,total_ml:NaN},{rotations:5,iterations:10,total_ml:NaN},{rotations:10,iterations:5,total_ml:NaN},{rotations:50,iterations:1,total_ml:NaN}]),v=G(()=>{var d,S;return((S=(d=g.value)==null?void 0:d.calibration)==null?void 0:S[a.pumpId])||{}});function u(){return{labels:Object.keys(v.value),datasets:[{label:null,data:Object.values(v.value),fill:!1,borderColor:"rgb(75, 192, 192)",tension:.1}]}}function D(){w.value=u()}function s(d){if(!Object.values(f.value.states).some(P=>P==="open")){alert("At least one valve must be open to start the pump");return}I.value[d]=!I.value[d],I.value[d]?m(x.value[d]):e.setPartStateAction({devicePart:"pumps",partIndex:a.pumpId,newState:"stopped"})}function p(d){I.value[d]=!1}function $(d){d.total_ml&&(e.setPartCalibrationAction({devicePart:"pumps",partIndex:a.pumpId,newCalibration:{...v.value,[d.rotations]:d.total_ml/d.rotations/d.iterations}}),I.value[d]=!1)}function m(d){alert(`Pumping ${d.rotations} rotations ${d.iterations} times. Please blank the scale`),e.startPumpCalibrationSequence({pumpId:a.pumpId,rotations:d.rotations,iterations:d.iterations}).then(()=>{p(d);const S=parseFloat(prompt("Enter total mL pumped"));isNaN(S)||(d.total_ml=S,$(d))})}return ae(()=>{v.value&&D(),x.value.forEach(d=>{d.total_ml=(v.value[d.rotations]||0)*d.rotations*d.iterations,d.total_ml=d.total_ml?d.total_ml.toFixed(2):""})}),be(v,()=>{D()},{deep:!0}),(d,S)=>(o(),i("div",vt,[l("table",null,[S[1]||(S[1]=l("thead",null,[l("tr",null,[l("th",null,"Calibration Sequence"),l("th"),l("th",null,"Volume (mL)")])],-1)),l("tbody",null,[(o(!0),i(U,null,j(x.value,(P,A)=>(o(),i("tr",{key:A},[l("td",null,[l("div",pt,[l("div",ft,N(P.iterations),1),S[0]||(S[0]=l("div",{class:"multiplier"},"x",-1)),l("div",bt,N(P.rotations)+" rots",1)])]),l("td",null,[l("button",{onClick:b=>s(A),class:K([I.value[A]?"stop-button":"",I.value[A]===!1&&x.value[A].total_ml?"restart-button":""])},[I.value[A]?(o(),i("span",mt,"Stop")):(o(),i("span",_t,"Start"))],10,gt)]),l("td",null,[le(l("input",{"onUpdate:modelValue":b=>P.total_ml=b,onChange:b=>$(P),type:"float"},null,40,ht),[[se,P.total_ml]])])]))),128))])]),l("div",yt,[w.value.datasets[0].data.length>0?(o(),Z(C(ut),{key:0,id:"pump-calibration-chart",options:k.value,class:"pump-calibration-chart",data:w.value},null,8,["options","data"])):L("",!0)]),C(_)?(o(),i("div",Ct)):L("",!0)]))}},wt=Y(kt,[["__scopeId","data-v-6558f4be"]]);const Dt={key:0,class:"pump-controls"},St={key:1},xt={class:"pump-input"},$t={key:1},Ot={__name:"PumpControl",setup(c){const a=Q(),{pumps:e,valves:_,calibrationModeEnabled:g}=X(a),f={1:"MAIN",2:"DRUG",3:"MISSING!!!",4:"WASTE"},w=he({1:null,2:null,3:null,4:null}),k=he({1:null,2:null,3:null,4:null});ae(()=>{e.value||a.fetchDeviceData()});async function I(s){if(e.value.states[s]==="running"){await a.setPartStateAction({devicePart:"pumps",partIndex:s,newState:"stopped"});return}if(!Object.values(_.value.states).some(m=>m==="open")){alert("At least one valve must be open to start the pump");return}const $=parseFloat(k[s]);if(!$){alert("Please set the volume before starting the pump");return}try{await a.setPartStateAction({devicePart:"pumps",partIndex:s,newState:"running",input:{volume:$}})}catch(m){console.error(m)}finally{await a.setPartStateAction({devicePart:"pumps",partIndex:s,newState:"stopped"})}}function x(s,p){k[p]=s;const $=parseFloat(k[p]);isNaN($)?w[p]="":w[p]=u($,p).toFixed(2)}function v(s,p){w[p]=s;const $=parseFloat(w[p]);isNaN($)?k[p]="":k[p]=D($,p)}function u(s,p){const $=e.value.calibration[p],m=Object.entries($).map(([B,ee])=>[parseInt(B),ee]).sort((B,ee)=>B[0]-ee[0]);if(s>=m[m.length-1][0]*m[m.length-1][1])return s/m[m.length-1][1];let d=m[0],S=m[m.length-1];for(let B=0;B<m.length-1;B++)if(s>=m[B][0]*m[B][1]&&s<=m[B+1][0]*m[B+1][1]){d=m[B],S=m[B+1];break}const P=d[0]*d[1],A=S[0]*S[1],b=(s-P)/(A-P),E=d[1]+(S[1]-d[1])*b;return s/E}function D(s,p){const $=e.value.calibration[p],m=Object.entries($).map(([b,E])=>[parseInt(b),E]).sort((b,E)=>b[0]-E[0]);if(s>=m[m.length-1][0])return(s*m[m.length-1][1]).toFixed(2);let d=m[0],S=m[m.length-1];for(let b=0;b<m.length-1;b++)if(s>=m[b][0]&&s<=m[b+1][0]){d=m[b],S=m[b+1];break}const P=(s-d[0])/(S[0]-d[0]),A=d[1]+(S[1]-d[1])*P;return(s*A).toFixed(2)}return(s,p)=>{const $=W("v-progress-circular"),m=W("v-btn"),d=W("v-text-field");return C(e)&&C(e).states?(o(),i("div",Dt,[(o(),i(U,null,j([1,2,4],S=>l("div",{class:"pump",key:S},[F(m,{class:K(["pump-button",{"stop-button":C(e).states[S]==="running"}]),onClick:P=>I(S)},{default:R(()=>[C(e).states[S]==="running"?(o(),Z($,{key:0,indeterminate:"",color:"white",class:"spinner-custom"})):(o(),i("span",St,[T(N(f[S]),1),p[0]||(p[0]=l("br",null,null,-1)),p[1]||(p[1]=T("pump"))]))]),_:2},1032,["class","onClick"]),l("div",xt,[F(d,{label:"Volume (mL)",type:"number",dense:"",modelValue:k[S],"onUpdate:modelValue":[P=>k[S]=P,P=>x(P,S)]},null,8,["modelValue","onUpdate:modelValue"]),C(g)?(o(),Z(d,{key:0,label:"Rotations",type:"number",dense:"",modelValue:w[S],"onUpdate:modelValue":[P=>w[S]=P,P=>v(P,S)]},null,8,["modelValue","onUpdate:modelValue"])):L("",!0),C(g)?(o(),Z(wt,{key:1,pumpId:S},null,8,["pumpId"])):L("",!0)])])),64))])):(o(),i("div",$t," Loading pump data... "))}}},It=Y(Ot,[["__scopeId","data-v-dc27ed63"]]);const Pt={class:"valve-controls"},Et=["onClick","disabled"],At={key:0,class:"spinner-border spinner-custom",role:"status"},Mt={key:1},Ft={__name:"ValveControl",setup(c){const a=Q(),{valves:e}=X(a),_=M({}),g=new(window.AudioContext||window.webkitAudioContext);function f(k){const I=k==="open"?500:300,x=k==="open"?300:500,v=g.createOscillator();v.type="sine";const u=g.createGain();return u.gain.setValueAtTime(.1,g.currentTime),v.connect(u),u.connect(g.destination),v.frequency.setValueAtTime(I,g.currentTime),v.frequency.linearRampToValueAtTime(x,g.currentTime+.3),v.start(),v.stop(g.currentTime+.3),v}async function w(k){const I=e.value.states[k];if(_.value[k])return;_.value={..._.value,[k]:!0};const x=f(I);try{await a.setPartStateAction({devicePart:"valves",partIndex:k,newState:I==="open"?"closed":"open"}),x.stop()}catch(v){console.error(v)}finally{_.value={..._.value,[k]:!1}}}return(k,I)=>(o(),i("div",Pt,[(o(),i(U,null,j(7,x=>l("button",{class:K(["btn",{"btn-danger":C(e).states[x]==="closed"&&!_.value[x],"btn-success":C(e).states[x]==="open"&&!_.value[x],"btn-warning":_.value[x]}]),key:x,onClick:v=>w(x),disabled:_.value[x]},[_.value[x]?(o(),i("div",At)):(o(),i("span",Mt,"Valve "+N(x),1))],10,Et)),64))]))}},Lt=Y(Ft,[["__scopeId","data-v-9591560c"]]);const Tt={class:"elements-container"},Nt={class:"stirrer-name"},Vt={key:0},Rt={style:{position:"relative",display:"inline-block"}},Ut={style:{position:"relative",display:"inline-block"}},Bt={class:"buttons-container"},Ce=0,ke=1,qt={__name:"StirrerCalibration",props:{stirrerId:{type:Number,required:!0}},setup(c){const a=c,e=M(null),_=M(null),g=M(null),f=new(window.AudioContext||window.webkitAudioContext);let w=null,k=null,I=null;const x=Q(),{calibrationModeEnabled:v,stirrers:u}=X(x),D=G(()=>u.value&&u.value.states?u.value.states[a.stirrerId]:void 0);function s(A){x.setPartStateAction({devicePart:"stirrers",partIndex:a.stirrerId,newState:A})}function p(A){if(u.value&&u.value.states)for(let b=1;b<=7;b++)u.value.states[b]=A;x.setAllStirrersStateAction&&x.setAllStirrersStateAction(A)}function $(A,b){d(b.target.value)}function m(A,b){!u.value||!u.value.calibration||!u.value.calibration[a.stirrerId]||x.setPartCalibrationAction({devicePart:"stirrers",partIndex:a.stirrerId,newCalibration:{low:u.value.calibration[a.stirrerId].low,high:u.value.calibration[a.stirrerId].high}}).catch(E=>{console.error("Error updating stirrer calibration:",E)})}function d(A){w||(w=f.createOscillator(),k=f.createGain(),w.type="sine",k.gain.setValueAtTime(.1,f.currentTime),w.connect(k),k.connect(f.destination),w.start());const b=300+A*500;w.frequency.setValueAtTime(b,f.currentTime),I&&clearTimeout(I),I=setTimeout(S,200)}function S(){w&&(k.gain.exponentialRampToValueAtTime(.001,f.currentTime+.01),k.gain.setValueAtTime(.1,f.currentTime+.02),w.stop(f.currentTime+.02),w=null,k=null)}function P(A,b){(A==="high"&&D.value!=="high"||A==="low"&&D.value!=="low")&&(b.preventDefault(),te("Enable stirrer to adjust speed",{type:"info"}))}return ae(()=>{window.addEventListener("resize",()=>{})}),Je(()=>{window.removeEventListener("resize",()=>{})}),(A,b)=>(o(),i("div",{class:"stirrer-calibrator",ref_key:"container",ref:e},[l("div",Tt,[l("div",Nt,[l("header",null,"Stirrer "+N(c.stirrerId),1)]),C(v)&&C(u)&&C(u).calibration&&C(u).calibration[c.stirrerId]?(o(),i("div",Vt,[l("div",Rt,[le(l("input",{type:"range",class:K(["slider slider-high",[{active:D.value==="high"},{"slider-disabled":D.value!=="high"}]]),min:Ce,max:ke,step:.01,"onUpdate:modelValue":b[0]||(b[0]=E=>C(u).calibration[c.stirrerId].high=E),onInput:b[1]||(b[1]=E=>$("high",E)),onChange:b[2]||(b[2]=E=>m())},null,34),[[se,C(u).calibration[c.stirrerId].high,void 0,{number:!0}]]),D.value!=="high"?(o(),i("div",{key:0,class:"slider-overlay",onClick:b[3]||(b[3]=E=>P("high",E))})):L("",!0)]),l("div",Ut,[le(l("input",{type:"range",class:K(["slider slider-low",[{active:D.value==="low"},{"slider-disabled":D.value!=="low"}]]),min:Ce,max:ke,step:.01,"onUpdate:modelValue":b[4]||(b[4]=E=>C(u).calibration[c.stirrerId].low=E),onInput:b[5]||(b[5]=E=>$("low",E)),onChange:b[6]||(b[6]=E=>m())},null,34),[[se,C(u).calibration[c.stirrerId].low,void 0,{number:!0}]]),D.value!=="low"?(o(),i("div",{key:0,class:"slider-overlay",onClick:b[7]||(b[7]=E=>P("low",E))})):L("",!0)])])):L("",!0),l("div",Bt,[l("button",{class:K(["button button-high",{active:D.value==="high"}]),ref_key:"buttonHigh",ref:_,onClick:b[8]||(b[8]=E=>s("high")),onDblclick:b[9]||(b[9]=E=>p("high"))},"High",34),l("button",{class:K(["button button-low",{active:D.value==="low"}]),ref_key:"buttonLow",ref:g,onClick:b[10]||(b[10]=E=>s("low")),onDblclick:b[11]||(b[11]=E=>p("low"))},"Low",34),l("button",{class:K(["button button-off",{active:D.value==="stopped"}]),ref:"buttonOff",onClick:b[12]||(b[12]=E=>s("stopped")),onDblclick:b[13]||(b[13]=E=>p("stopped"))},"OFF",34)])])],512))}},jt=Y(qt,[["__scopeId","data-v-d01f6391"]]);const Gt={name:"StirrerControl",components:{StirrerCalibration:jt}},Kt={class:"stirrer-controls"};function zt(c,a,e,_,g,f){const w=W("StirrerCalibration");return o(),i("div",Kt,[(o(),i(U,null,j(7,k=>F(w,{key:k,stirrerId:k},null,8,["stirrerId"])),64))])}const Wt=Y(Gt,[["render",zt],["__scopeId","data-v-6cada7fd"]]),Ht={className:"single-chart-container"},Jt={__name:"ODChart",props:{partId:{type:Number,required:!0}},setup(c){re.register(Ie,Pe,Ee,tt,$e,Oe,at);const a=c,e=Q(),{ods:_}=X(e),g=G(()=>{var v,u;return(u=(v=_.value)==null?void 0:v.calibration)==null?void 0:u[a.partId]}),f=G(()=>{var v,u;return(u=(v=_.value)==null?void 0:v.calibration_coefs)==null?void 0:u[a.partId]}),w=G(()=>{var v,u,D,s;return{od:(u=(v=_.value)==null?void 0:v.states)==null?void 0:u[a.partId],signal:(s=(D=_.value)==null?void 0:D.odsignals)==null?void 0:s[a.partId]}});function k(v,u,D){return-Math.log10(v/u)*D}const I=G(()=>{if(g.value&&typeof g.value=="object"&&f.value){const v=Object.entries(g.value).filter(([p,$])=>$!==null).map(([p,$])=>({x:Number($),y:Number(p)})).sort((p,$)=>p.x-$.x);let u=Math.min(...v.map(p=>p.x)),D=Math.max(...v.map(p=>p.x));const s=[];u===D&&(u=0,D=50);for(let p=u;p<=D;p+=.1){const $=k(p,...f.value);s.push({x:p,y:$})}return{datasets:[{label:`Vial ${a.partId} Calibration OD`,data:v,borderColor:"#607ecb",backgroundColor:"rgba(83,158,255,0.64)"},{label:`Vial ${a.partId} Current OD`,data:[{x:w.value.signal,y:w.value.od}],pointRadius:5,backgroundColor:"rgba(255,1,60,0.64)"},{label:`Vial ${a.partId} Fit`,data:s,pointRadius:0,borderColor:"rgba(0,70,220,0.38)",borderWidth:2,showLine:!0,fill:!1,borderDash:[2,2]}]}}return{}}),x=G(()=>{var v,u;return{devicePixelRatio:4,responsive:!0,maintainAspectRatio:!1,plugins:{legend:{display:!1},title:{display:!0,text:`Vial ${a.partId}`+(f.value?`
blank: ${(v=f.value[0])==null?void 0:v.toFixed(2)}, scaling: ${(u=f.value[1])==null?void 0:u.toFixed(2)}`:"")}},scales:{x:{title:{display:!0,text:"Signal (mV)"},suggestedMin:0},y:{title:{display:!0,text:"OD"},suggestedMax:1.5,suggestedMin:0}}}});return(v,u)=>(o(),i("div",Ht,[F(C(dt),{data:I.value,options:x.value},null,8,["data","options"])]))}};M({show:!1,title:"",content:"",resolve:null});const Yt={class:"guide-popup"},Zt={class:"guide-header"},Qt={__name:"ODGuide",setup(c){return(a,e)=>{const _=W("v-icon");return o(),i("div",{class:"guide-overlay",onClick:e[1]||(e[1]=Ze(g=>a.$emit("close"),["self"]))},[l("div",Yt,[l("div",Zt,[e[3]||(e[3]=l("span",{class:"guide-title"},"OD Calibration Guide",-1)),l("button",{class:"guide-close",onClick:e[0]||(e[0]=g=>a.$emit("close"))},[F(_,null,{default:R(()=>e[2]||(e[2]=[T("mdi-close")])),_:1})])]),e[4]||(e[4]=Ye('<div class="guide-content" data-v-7d4f6e01><div class="guide-section" data-v-7d4f6e01><b class="section-title" data-v-7d4f6e01>What is Optical Density (OD)?</b><br data-v-7d4f6e01><span class="guide-text" data-v-7d4f6e01> Optical Density (OD) measures how much light is absorbed by a sample. The higher the OD, the more cells or particles are in the solution. </span></div><div class="guide-section" data-v-7d4f6e01><b class="section-title" data-v-7d4f6e01>Beer-Lambert Law and Scaling Factor</b><br data-v-7d4f6e01><span class="guide-text" data-v-7d4f6e01> The Beer-Lambert Law relates OD to the transmitted light signal: </span><br data-v-7d4f6e01><span class="formula" data-v-7d4f6e01> OD = -log₁₀(signal / blank_signal) </span><br data-v-7d4f6e01><span class="guide-text" data-v-7d4f6e01> In our devices, the light path is not a standard 1cm cuvette. The curved shape of the vial and the sensor design affect how light travels through the sample. This is corrected using a scaling factor: </span><br data-v-7d4f6e01><span class="formula" data-v-7d4f6e01> OD = -log₁₀(signal / blank_signal) * scaling </span><br data-v-7d4f6e01><span class="guide-text" data-v-7d4f6e01> Due to our specific vial and sensor design, the scaling factor typically falls between 1.5 and 1.7. This range is determined by the geometry of the light path from the laser through the vial and to the sensor. </span><br data-v-7d4f6e01></div><div class="guide-section" data-v-7d4f6e01><b class="section-title" data-v-7d4f6e01>Calibration Process</b><div class="method-panel" data-v-7d4f6e01><div class="method-heading" data-v-7d4f6e01>Step 1: Measure OD₀ (Blank Signal)</div><div class="od-warning-box" data-v-7d4f6e01><b data-v-7d4f6e01>Important: OD₀ must be measured with a vial containing growth medium!</b><div class="od-warning-details" data-v-7d4f6e01> - Use the same growth medium that will be used in your experiment<br data-v-7d4f6e01> - The vial must be filled with liquid<br data-v-7d4f6e01> - A good blank signal should be above 20mV<br data-v-7d4f6e01> - If the signal is below 20mV, check for:<br data-v-7d4f6e01>   • Proper vial alignment<br data-v-7d4f6e01>   • Clean sensors and vials<br data-v-7d4f6e01>   • No obstructions in the light path </div></div></div><div class="method-panel" data-v-7d4f6e01><div class="method-heading" data-v-7d4f6e01>Step 2 (Optional): Measure additional OD values to calibrate the scaling factor</div><div class="option-container" data-v-7d4f6e01><div class="option-box" data-v-7d4f6e01><div class="method-subheading" data-v-7d4f6e01>Option A: Using Liquid Samples (Recommended)</div><ol class="guide-ol" data-v-7d4f6e01><li data-v-7d4f6e01>Prepare a vial with a known OD between 0.1 and 2.0: <ul class="guide-list" data-v-7d4f6e01><li data-v-7d4f6e01>You can use coffee or milk diluted in growth medium</li><li data-v-7d4f6e01>Or measure the OD of a cell culture in a spectrophotometer</li></ul></li><li data-v-7d4f6e01>Insert this vial into each slot and measure its signal</li><li data-v-7d4f6e01>The scaling factor will be automatically calculated from these measurements</li></ol></div><div class="option-box" data-v-7d4f6e01><div class="method-subheading" data-v-7d4f6e01>Option B: Using Semitransparent Sheets</div><ol class="guide-ol" data-v-7d4f6e01><li data-v-7d4f6e01>Obtain a sheet with known equivalent OD (usually provided with the device)</li><li data-v-7d4f6e01>Place the sheet over all sensors at once</li><li data-v-7d4f6e01>Measure the signals and the scaling factor will be calculated automatically</li><li data-v-7d4f6e01><i data-v-7d4f6e01>Note: This method is less accurate than using liquid samples</i></li></ol></div></div></div><div class="method-panel" data-v-7d4f6e01><div class="method-heading" data-v-7d4f6e01>Step 3: Final Check</div><div class="guide-text" data-v-7d4f6e01> Ideally, remeasure OD₀ just before starting the experiment. Small changes in the position of the vial and media composition can affect the signal. </div></div></div></div>',1))])])}}},Xt=Y(Qt,[["__scopeId","data-v-7d4f6e01"]]);const ea={class:"od-control-container"},ta=["onClick"],aa={key:0,class:"od-output-value"},na={key:1,class:"od-output-value"},oa={key:2,class:"signal-output-value"},la={key:3,class:"signal-output-value"},sa={key:0,class:"calibration-section"},ia={class:"probe-table-outer-container",style:{"margin-bottom":"18px"}},ra={class:"table-controls"},ca={class:"mode-controls"},ua={class:"calibration-table-wrapper"},da={class:"calibration-table"},va={key:0,style:{width:"36px"}},pa={class:"od-value-container"},fa=["onDblclick"],ba=["value","onInput","onBlur","onKeyup"],ga=["title"],ma={key:1,class:"signal-value"},_a={key:1,class:"signal-value"},ha={key:1,class:"measure-cell-container"},ya=["onDblclick"],Ca=["onDblclick"],ka=["value","onInput","onBlur","onKeyup"],wa=["onClick","disabled","title"],Da={key:0,class:"measure-button-content"},Sa={key:1,class:"measure-button-content"},xa={key:0,style:{"text-align":"center",width:"36px",padding:"4px"}},$a=["onClick","disabled"],Oa={key:1,style:{width:"36px"}},Ia={key:0},Pa={class:"scaling-factor-container"},Ea={class:"calibration-table"},Aa={class:"scaling-factor-row"},Ma=["title"],Fa=["onUpdate:modelValue"],La={key:1,class:"scaling-factor-value"},Ta={key:0,style:{width:"40px"}},Na={key:0,class:"chart-container"},Va={__name:"ODControl",setup(c){const a=Q(),{ods:e,calibrationModeEnabled:_}=X(a),{openDialog:g}=ge(),f=[1,2,3,4,5,6,7],w=M(!1),k=M(!0),I=M(!1),x=M(!1),v=M({}),u=M({}),D=G(()=>{let n=new Set;if(e.value.calibration)for(let h in e.value.calibration)for(let r in e.value.calibration[h])n.add(r);return Array.from(n).sort((h,r)=>parseFloat(h)-parseFloat(r))}),s=G(()=>{if(!e.value.calibration)return[];const n=new Set;for(const t in e.value.calibration)for(const h in e.value.calibration[t])n.add(parseFloat(h));return Array.from(n).sort((t,h)=>t-h)}),p=M(new Set),$=G(()=>{const n=e.value.calibration_coefs||{};return f.map(t=>{var h;return((h=n[t])==null?void 0:h[1])??"—"})}),m=M([]);be($,n=>{m.value=[...n]},{immediate:!0}),ae(()=>{a.fetchDeviceData(),document.addEventListener("click",d)}),Se(()=>{document.removeEventListener("click",d)});function d(n){if(H.value&&!n.target.closest(".calibration-signal")&&ce(H.value.vial,H.value.odValue),J.value&&!n.target.closest(".od-value-input")){const t=s.value.indexOf(J.value);t!==-1&&ee(J.value,t),J.value=null}}async function S(n){try{const t=await a.measureDevicePart({devicePart:"ods",partIndex:n});if(!t||t.error)throw new Error((t==null?void 0:t.error)||"Measurement failed");await a.fetchDeviceData()}catch(t){throw console.error("Error measuring OD:",t),te.error(t.message||"Failed to measure OD. Please try again."),t}}function P(n,t,h){u.value[t]||(u.value[t]={}),u.value[t][h]=parseFloat(n.target.value)}function A(n,t){if(u.value[n]&&u.value[n][t]!==void 0){e.value.calibration[n]||(e.value.calibration[n]={});const h=u.value[n][t];isNaN(u.value[n][t])&&delete e.value.calibration[n][t],a.updateODCalibrationValueAction({od:t,vial:n,newValue:h}).catch(r=>{console.error(`Error updating calibration for vial ${n}:`,r)}),delete u.value[n][t]}}function b(n,t){return u.value[n]&&u.value[n][t]!==void 0?u.value[n][t]:e.value.calibration&&e.value.calibration[n]&&e.value.calibration[n][t]!==void 0?e.value.calibration[n][t]:""}function E(n,t){if(!e.value.calibration||!e.value.calibration[n]||e.value.calibration[n][t]===void 0)return{background:""};const h=parseFloat(e.value.calibration[n][t]),r=5,O=40;let y;if(h<=0)y=r;else{const V=Math.log(10),oe=Math.log(1e3),We=(Math.log(Math.max(10,Math.min(1e3,h)))-V)/(oe-V);y=r+We*(O-r)}return{background:`rgba(255, 100, 100, ${y/100})`}}function B(n){if(n==null)return"";const t=parseFloat(n);if(isNaN(t))return"";const h=.02,r=.25,O=Math.max(0,Math.min(4,t)),y=Math.log(O+1)/Math.log(5),V=h+y*(r-h);return`background: linear-gradient(to right, rgba(255, 235, 156, ${V}), rgba(255, 235, 156, ${V*.6}))`}async function ee(n,t,h){if(v.value[t]!==void 0){const r=v.value[t];if(s.value.some((y,V)=>V!==t&&parseFloat(y)===parseFloat(r))&&!await g({title:"Duplicate OD Value",message:`An OD probe value of ${r} already exists. Are you sure you want to overwrite?`,showCancel:!0})){delete v.value[t];return}s.value[t]=r,delete v.value[t];try{for(let y in e.value.calibration){const V=e.value.calibration[y],oe=JSON.parse(JSON.stringify(V));V[n]!==void 0&&(delete oe[n],oe[r]=V[n],await a.setPartCalibrationAction({devicePart:"ods",partIndex:y,newCalibration:oe}))}await a.fetchDeviceData()}catch(y){console.error("Error updating calibration:",y),te.error("Failed to update calibration values")}}}function Te(n,t){console.log("handleProbeValueInput",n.target.value),v.value[t]=parseFloat(n.target.value)}function Ne(){I.value=!0}function Ve(){I.value=!1}function Re(){if(!s.value.length)return .1;const n=Math.max(...s.value);return parseFloat((n+.1).toFixed(2))}async function Ue(){const n=Re();for(const t of f)e.value.calibration[t]||(e.value.calibration[t]={}),e.value.calibration[t][n]=null,await a.setPartCalibrationAction({devicePart:"ods",partIndex:t,newCalibration:e.value.calibration[t]});await a.fetchDeviceData()}async function Be(n){const t=D.value[n];p.value.add(t);for(const h of f)e.value.calibration[h]&&(delete e.value.calibration[h][t],await a.setPartCalibrationAction({devicePart:"ods",partIndex:h,newCalibration:e.value.calibration[h]}));await a.fetchDeviceData(),p.value.delete(t)}const q={VIEW:"view",MEASURE:"measure"},z=M(q.VIEW);G(()=>({"view-mode":z.value===q.VIEW,"measure-mode":z.value===q.MEASURE}));async function qe(n,t){if(z.value===q.MEASURE)try{const h=await a.measureDevicePart({devicePart:"ods",partIndex:n-1});if(!h||h.error)throw new Error((h==null?void 0:h.error)||"Measurement failed");e.value.calibration[n]||(e.value.calibration[n]={});const r=e.value.odsignals[n-1];r!==void 0&&await a.updateODCalibrationValueAction({od:t,vial:n,newValue:r}),await a.fetchDeviceData()}catch(h){throw console.error("Error measuring cell:",h),te.error(h.message||"Failed to measure signal. Please try again."),h}}const H=M(null),je=M(null);function _e(n,t){H.value={vial:n,odValue:t},fe(()=>{const h=document.querySelector(".calibration-signal");h&&h.focus()})}function ce(n,t){u.value[n]&&u.value[n][t]!==void 0&&A(n,t),H.value=null}function Ge(){if(H.value=null,H.value){const{vial:n,odValue:t}=H.value;u.value[n]&&delete u.value[n][t]}}const J=M(null);function Ke(n,t){J.value=n,fe(()=>{const h=document.querySelector(".od-value-input");h&&h.focus()})}function ze(){if(J.value=null,J.value){const n=s.value.indexOf(J.value);n!==-1&&v.value[n]&&delete v.value[n]}}const ue=(n,t)=>{var O;const r=Object.values(((O=e.value.calibration)==null?void 0:O[t])||{}).filter(y=>y!=null).length>=2;return n>=1.45&&n<=1.75?{icon:r?"mdi-check-circle":"mdi-check-circle-outline",color:r?"#4caf50":"rgba(76, 175, 80, 0.5)",tooltip:r?"Scaling factor within expected range":"Using default scaling factor value. Add calibration points to recalculate"}:n>=1.3&&n<1.45||n>1.75&&n<=1.9?{icon:"mdi-alert-circle",color:"#ffc107",tooltip:"Scaling factor slightly outside expected range"}:{icon:"mdi-close-circle",color:"#f44336",tooltip:"Scaling factor outside expected range. Double check your measurements"}},de=n=>typeof n!="number"?{icon:"mdi-help-circle-outline",color:"grey",tooltip:"No signal value available"}:n>=20?{icon:"mdi-check-circle",color:"#4caf50",tooltip:"Signal value within expected range"}:n>=12?{icon:"mdi-alert-circle",color:"#ffc107",tooltip:"Signal value slightly low. Consider recalibrating"}:{icon:"mdi-close-circle",color:"#f44336",tooltip:"Signal value too low. Check OD sensor"};return(n,t)=>{const h=W("v-icon");return o(),i(U,null,[l("div",ea,[(o(!0),i(U,null,j(C(e).states,(r,O)=>(o(),i("div",{class:"elements-container",key:O},[l("button",{class:"od-button",onClick:y=>S(O)},[l("span",null,"OD "+N(O),1)],8,ta),C(e).states&&C(e).states[O]!==void 0&&C(e).states[O]!==0?(o(),i("span",aa,N(parseFloat(C(e).states[O].toFixed(2))),1)):(o(),i("span",na,"---")),t[1]||(t[1]=l("div",{style:{height:"0.5px"}},null,-1)),C(e).odsignals&&C(e).odsignals[O]!==void 0&&C(e).odsignals[O]!==0?(o(),i("span",oa,"("+N(parseFloat(C(e).odsignals[O].toFixed(2)))+"mV)",1)):(o(),i("span",la,"(---)"))]))),128))]),C(_)?(o(),i("div",sa,[l("div",ia,[t[6]||(t[6]=l("div",{style:{display:"flex","align-items":"center","margin-bottom":"8px"}},null,-1)),l("div",ra,[t[5]||(t[5]=l("div",{style:{flex:"1"}},null,-1)),l("div",ca,[l("button",{class:K(["control-button mode-toggle",{active:z.value===q.MEASURE}]),onClick:t[0]||(t[0]=r=>z.value=z.value===q.MEASURE?q.VIEW:q.MEASURE)},[F(h,null,{default:R(()=>t[2]||(t[2]=[T("mdi-pencil")])),_:1}),t[3]||(t[3]=T(" Edit "))],2)]),l("button",{class:"control-button help-button",onClick:Ne},[F(h,null,{default:R(()=>t[4]||(t[4]=[T("mdi-help-circle-outline")])),_:1})])])]),t[15]||(t[15]=l("div",{class:"calibration-controls"},null,-1)),l("div",ua,[l("table",da,[l("thead",null,[l("tr",null,[t[7]||(t[7]=l("th",{style:{width:"110px"}},"OD Value",-1)),(o(),i(U,null,j(f,r=>l("th",{key:r,style:{width:"90px"}},"Vial "+N(r),1)),64)),w.value?(o(),i("th",va)):L("",!0)])]),l("tbody",null,[(o(!0),i(U,null,j(D.value,(r,O)=>(o(),i("tr",{key:r,class:K({"od-zero-row":parseFloat(r)===0})},[l("td",{style:ye([{width:"110px"},B(r)])},[l("div",pa,[!J.value||J.value!==r?(o(),i("span",{key:0,class:"od-value-display",onDblclick:y=>Ke(r),title:"Double click to edit"},N(O<s.value.length?v.value[O]!==void 0?v.value[O]:s.value[O]:r),41,fa)):(o(),i("input",{key:1,value:v.value[O]!==void 0?v.value[O]:s.value[O],onInput:y=>Te(y,O),onBlur:y=>ee(r,O),onKeyup:[ie(y=>ee(r,O),["enter"]),ie(ze,["esc"])],type:"number",step:"0.1",class:"od-value-input",ref_for:!0,ref:"odValueInput"},null,40,ba))])],4),(o(),i(U,null,j(f,y=>l("td",{key:y,class:K({"has-data":C(e).calibration&&C(e).calibration[y]&&C(e).calibration[y][r]!==void 0}),style:ye({background:E(y,r).background})},[z.value===q.VIEW?(o(),i(U,{key:0},[C(e).calibration&&C(e).calibration[y]&&C(e).calibration[y][r]!==void 0&&C(e).calibration[y][r]!==null?(o(),i(U,{key:0},[parseFloat(r)===0?(o(),i("div",{key:0,class:"signal-value-with-status",title:de(C(e).calibration[y][r]).tooltip},[T(N(C(e).calibration[y][r].toFixed(2))+" ",1),F(h,{color:de(C(e).calibration[y][r]).color,size:"small",style:{"margin-left":"4px"}},{default:R(()=>[T(N(de(C(e).calibration[y][r]).icon),1)]),_:2},1032,["color"])],8,ga)):(o(),i("div",ma,N(C(e).calibration[y][r].toFixed(2)),1))],64)):(o(),i("div",_a,"---"))],64)):z.value===q.MEASURE?(o(),i("div",ha,[C(e).calibration&&C(e).calibration[y]&&C(e).calibration[y][r]!==void 0&&C(e).calibration[y][r]!==null?(o(),i("span",{key:0,class:"signal-value measure-background-value",onDblclick:V=>_e(y,r),title:"Double click to edit"},N(parseFloat(C(e).calibration[y][r]).toFixed(2))+"mV ",41,ya)):(o(),i("span",{key:1,class:"signal-value measure-background-value empty-value",onDblclick:V=>_e(y,r),title:"Double click to edit"}," ——— ",40,Ca)),H.value&&H.value.vial===y&&H.value.odValue===r?(o(),i("input",{key:2,value:b(y,r),onInput:V=>P(V,y,r),onBlur:V=>ce(y,r),onKeyup:[ie(V=>ce(y,r),["enter"]),ie(Ge,["esc"])],type:"number",class:"calibration-signal",ref_for:!0,ref_key:"editingInput",ref:je},null,40,ka)):L("",!0),l("button",{class:"measure-cell-button",onClick:V=>qe(y,r),disabled:x.value,title:`Calibrate OD ${parseFloat(r).toFixed(2)} signal in vial ${y} (measure now)`},[x.value?(o(),i("span",Da,t[8]||(t[8]=[l("span",{class:"loading-spinner"},null,-1)]))):(o(),i("span",Sa,[F(h,null,{default:R(()=>t[9]||(t[9]=[T("mdi-camera-metering-center")])),_:1})]))],8,wa)])):L("",!0)],6)),64)),z.value===q.MEASURE&&parseFloat(D.value[O])!==0?(o(),i("td",xa,[l("button",{class:"delete-od-row",onClick:y=>Be(O),disabled:p.value.has(D.value[O])},[F(h,null,{default:R(()=>t[10]||(t[10]=[T("mdi-delete")])),_:1})],8,$a)])):z.value===q.MEASURE?(o(),i("td",Oa)):L("",!0)],2))),128)),z.value===q.MEASURE?(o(),i("tr",Ia,[l("td",null,[l("button",{class:"add-od-probe-table",onClick:Ue},[F(h,null,{default:R(()=>t[11]||(t[11]=[T("mdi-plus")])),_:1}),t[12]||(t[12]=T(" Add "))])]),(o(),i(U,null,j(f,r=>l("td",{key:"add-row-"+r})),64)),t[13]||(t[13]=l("td",null,null,-1))])):L("",!0)])])]),l("div",Pa,[l("table",Ea,[l("tbody",null,[l("tr",Aa,[t[14]||(t[14]=l("th",{class:"scaling-factor-label"},"Scaling Factor",-1)),(o(!0),i(U,null,j(m.value,(r,O)=>(o(),i("th",{key:"sf-head-"+O,class:"scaling-factor-cell",title:ue(r,O+1).tooltip},[w.value?le((o(),i("input",{key:0,type:"number",step:"0.01",min:"0.1","onUpdate:modelValue":y=>m.value[O]=y,style:{width:"60px","text-align":"center",background:"#23272e",color:"#90caf9",border:"1px solid #444","border-radius":"4px"}},null,8,Fa)),[[se,m.value[O],void 0,{number:!0}]]):(o(),i("div",La,[T(N(typeof r=="number"?r.toFixed(2):r)+" ",1),F(h,{color:ue(r,O+1).color,size:"small",style:{"margin-left":"4px"}},{default:R(()=>[T(N(ue(r,O+1).icon),1)]),_:2},1032,["color"])]))],8,Ma))),128)),z.value===q.MEASURE?(o(),i("th",Ta)):L("",!0)])])])]),k.value?(o(),i("div",Na,[(o(),i(U,null,j(f,r=>F(Jt,{partId:r,key:r},null,8,["partId"])),64))])):L("",!0)])):L("",!0),I.value?(o(),Z(Xt,{key:1,onClose:Ve})):L("",!0)],64)}}},Ra=Y(Va,[["__scopeId","data-v-57972332"]]);const me=Q(),{leds:Ua}=X(me);ae(()=>{Ua.value||me.fetchDeviceData()});const Ba={name:"SetLEDColor",data(){return{vials:[1,2,3,4,5,6,7],ledColors:{1:{red:0,green:0,blue:0,color:"#000000"},2:{red:0,green:0,blue:0,color:"#000000"},3:{red:0,green:0,blue:0,color:"#000000"},4:{red:0,green:0,blue:0,color:"#000000"},5:{red:0,green:0,blue:0,color:"#000000"},6:{red:0,green:0,blue:0,color:"#000000"},7:{red:0,green:0,blue:0,color:"#000000"}}}},methods:{async setLEDColor(c,a){if(a.shiftKey){const{red:e,green:_,blue:g}=this.ledColors[c];for(const f of this.vials)this.ledColors[f].red=e,this.ledColors[f].green=_,this.ledColors[f].blue=g,this.ledColors[f].color=this.ledColors[c].color,await this.setIndividualLEDColor(f)}else await this.setIndividualLEDColor(c)},async setIndividualLEDColor(c){const{red:a,green:e,blue:_}=this.ledColors[c];try{console.log("Setting color for vial",c,"to",a,e,_),await me.setLedColor(c,a,e,_)}catch(g){console.error(`Failed to set color for vial ${c}:`,g),alert(`Error setting color for vial ${c}`)}},updateColor(c){const a=this.ledColors[c].color,{r:e,g:_,b:g}=this.hexToRgb(a);this.ledColors[c].red=e/255,this.ledColors[c].green=_/255,this.ledColors[c].blue=g/255},hexToRgb(c){const a=parseInt(c.slice(1),16);return{r:a>>16&255,g:a>>8&255,b:a&255}}}},qa={class:"rgb-control-container"},ja={class:"color-selector"},Ga=["onUpdate:modelValue","onInput"],Ka=["onClick"];function za(c,a,e,_,g,f){return o(),i("div",qa,[(o(!0),i(U,null,j(g.vials,w=>(o(),i("div",{class:"vial-container",key:w},[l("div",ja,[l("label",null,N("Vial "+w),1),le(l("input",{type:"color","onUpdate:modelValue":k=>g.ledColors[w].color=k,onInput:k=>f.updateColor(w)},null,40,Ga),[[se,g.ledColors[w].color]])]),l("button",{class:"set-color-button",onClick:k=>f.setLEDColor(w,k)},"Set",8,Ka)]))),128))])}const Wa=Y(Ba,[["render",za],["__scopeId","data-v-0f12a494"]]);const Ha={class:"device-configs"},Ja={class:"config-actions"},Ya={key:0,class:"error-message"},Za={key:1,class:"config-list mt-4"},Qa={key:0},Xa={key:1,class:"text-muted"},en={__name:"DeviceConfigs",setup(c){const a=Q(),{openDialog:e}=ge(),_=M([]),g=M(""),f=M(!1),w=M(null),k=M(null);async function I(){g.value="",f.value=!0;try{const D=await a.listDeviceConfigs();_.value=(D||[]).sort((s,p)=>p.localeCompare(s))}catch{g.value="Failed to list device configs."}finally{f.value=!1}}async function x(D){g.value="",w.value=D;try{await a.loadDeviceConfig(D)}catch{g.value="Failed to load device config."}finally{w.value=null}}const v=async()=>{g.value="";try{await a.saveCalibrationToBackend(),te.success("Calibration checkpoint saved!")}catch{g.value="Failed to save device configs."}};function u(D){k.value=D,e({title:"Load checkpoint?",message:"Replace default config with checkpoint?"}).then(async s=>{s&&(await x(k.value),k.value=null)})}return(D,s)=>{const p=W("v-icon"),$=W("v-btn"),m=W("v-list-item"),d=W("v-list");return o(),i("div",Ha,[l("div",Ja,[F($,{color:"success",onClick:v},{default:R(()=>[F(p,{left:""},{default:R(()=>s[0]||(s[0]=[T("mdi-content-save")])),_:1}),s[1]||(s[1]=T(" Save Calibration "))]),_:1}),F($,{color:"primary",onClick:I,loading:f.value,class:"mr-2"},{default:R(()=>[F(p,{left:""},{default:R(()=>s[2]||(s[2]=[T("mdi-folder-open")])),_:1}),s[3]||(s[3]=T(" Load Calibration Checkpoints "))]),_:1},8,["loading"])]),g.value?(o(),i("div",Ya,N(g.value),1)):L("",!0),_.value.length>0||f.value?(o(),i("div",Za,[s[6]||(s[6]=l("h3",{class:"text-h6 mb-2"},"Available Device Calibration Checkpoints",-1)),_.value.length>0?(o(),i("div",Qa,[F(d,null,{default:R(()=>[(o(!0),i(U,null,j(_.value,S=>(o(),Z(m,{key:S,onClick:P=>u(S),class:K({"config-item":!0,loading:w.value===S})},{default:R(()=>[F(p,{left:""},{default:R(()=>s[4]||(s[4]=[T("mdi-file-document")])),_:1}),T(" "+N(S)+" ",1),w.value===S?(o(),Z(p,{key:0,right:""},{default:R(()=>s[5]||(s[5]=[T("mdi-loading")])),_:1})):L("",!0)]),_:2},1032,["onClick","class"]))),128))]),_:1})])):f.value?L("",!0):(o(),i("div",Xa,' Click "Refresh Configs" to load. '))])):L("",!0)])}}},tn=Y(en,[["__scopeId","data-v-ecd4ed1d"]]);const an={key:0,class:"experiment-running-overlay"},nn={class:"calibration-switch-row"},on={key:2},ln={__name:"DeviceControl",setup(c){const a=Q(),{deviceConnected:e,deviceControlEnabled:_,calibrationModeEnabled:g,stirrers:f,pumps:w,valves:k,ods:I}=X(a),x=G(()=>_.value),v=G({get:()=>g.value,set:s=>a.setCalibrationModeEnabled(s)}),{openDialog:u}=ge();async function D(){console.log("onReconnectClick"),await u({title:"Reconnect Device?",message:"Are you sure you want to reconnect the device?"})?(te.success("Reconnecting device..."),a.connectDevice()):te.error("Reconnect cancelled")}return ae(()=>{a.fetchDeviceData()}),(s,p)=>{const $=W("v-btn"),m=W("v-switch");return o(),i("div",{class:K(["DeviceControl",{"device-disconnected":C(e)===!1}])},[C(_)===!1?(o(),i("div",an)):L("",!0),l("div",nn,[C(g)?(o(),Z($,{key:0,class:"reconnect-btn",onClick:D},{default:R(()=>p[1]||(p[1]=[T("Reconnect Device")])),_:1})):L("",!0),F(m,{modelValue:v.value,"onUpdate:modelValue":p[0]||(p[0]=d=>v.value=d),label:"Calibration Mode"},null,8,["modelValue"])]),C(_)||x.value?(o(),i(U,{key:1},[F(It),F(Lt),F(Wt),F(Ra),F(Wa),C(g)?(o(),Z(tn,{key:0})):L("",!0)],64)):(o(),i("p",on,"Device Control Disabled"))],2)}}},dn=Y(ln,[["__scopeId","data-v-12bbe645"]]);export{dn as default};
