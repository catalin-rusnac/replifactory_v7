import{z as Le,N as Ne,J as Ve,O as ot,k as I,m as pe,p as Ie,A as ve,P as Ee,L as Ce,Q as Be,_ as ie,B as ce,h as Y,o as u,c as v,a as s,F as Z,i as le,t as z,e as X,w as _e,v as ye,j as se,C as V,d as G,R as ke,S as be,r as B,q as $,f as b,s as U,l as te,M as st,T as it,U as rt,n as Re,b as me,y as Pe,g as ut}from"./index-13bfb768.js";import{u as de}from"./device-5ab34053.js";import{C as De,B as ct,S as dt,a as vt,b as qe,L as je,p as Ke,c as ze,d as Ge,e as pt,P as ft}from"./chart-48157de6.js";/* empty css              */const We={data:{type:Object,required:!0},options:{type:Object,default:()=>({})},plugins:{type:Array,default:()=>[]},datasetIdKey:{type:String,default:"label"},updateMode:{type:String,default:void 0}},mt={ariaLabel:{type:String},ariaDescribedby:{type:String}},gt={type:{type:String,required:!0},destroyDelay:{type:Number,default:0},...We,...mt},bt=ot[0]==="2"?(f,a)=>Object.assign(f,{attrs:a}):(f,a)=>Object.assign(f,a);function ge(f){return Be(f)?Ee(f):f}function _t(f){let a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:f;return Be(a)?new Proxy(f,{}):f}function yt(f,a){const e=f.options;e&&a&&Object.assign(e,a)}function He(f,a){f.labels=a}function Je(f,a,e){const w=[];f.datasets=a.map(g=>{const i=f.datasets.find(C=>C[e]===g[e]);return!i||!g.data||w.includes(i)?{...g}:(w.push(i),Object.assign(i,g),i)})}function ht(f,a){const e={labels:[],datasets:[]};return He(e,f.labels),Je(e,f.datasets,a),e}const Ct=Le({props:gt,setup(f,a){let{expose:e,slots:w}=a;const g=I(null),i=Ne(null);e({chart:i});const C=()=>{if(!g.value)return;const{type:P,data:o,options:r,plugins:h,datasetIdKey:d}=f,_=ht(o,d),y=_t(_,o);i.value=new De(g.value,{type:P,data:y,options:{...r},plugins:h})},x=()=>{const P=Ee(i.value);P&&(f.destroyDelay>0?setTimeout(()=>{P.destroy(),i.value=null},f.destroyDelay):(P.destroy(),i.value=null))},E=P=>{P.update(f.updateMode)};return pe(C),Ie(x),ve([()=>f.options,()=>f.data],(P,o)=>{let[r,h]=P,[d,_]=o;const y=Ee(i.value);if(!y)return;let q=!1;if(r){const j=ge(r),m=ge(d);j&&j!==m&&(yt(y,j),q=!0)}if(h){const j=ge(h.labels),m=ge(_.labels),D=ge(h.datasets),p=ge(_.datasets);j!==m&&(He(y.config.data,j),q=!0),D&&D!==p&&(Je(y.config.data,D,f.datasetIdKey),q=!0)}q&&Ce(()=>{E(y)})},{deep:!0}),()=>Ve("canvas",{role:"img",ariaLabel:f.ariaLabel,ariaDescribedby:f.ariaDescribedby,ref:g},[Ve("p",{},[w.default?w.default():""])])}});function Qe(f,a){return De.register(a),Le({props:We,setup(e,w){let{expose:g}=w;const i=Ne(null),C=x=>{i.value=x==null?void 0:x.chart};return g({chart:i}),()=>Ve(Ct,bt({ref:C},{type:f,...e}))}})}const kt=Qe("bar",ct),Dt=Qe("scatter",dt);const wt={class:"pump-data"},St={class:"iteration-rotation-wrapper"},$t={class:"iteration"},xt={class:"rotation"},Ot=["onClick"],Vt={key:0},Et={key:1},It=["onUpdate:modelValue","onChange"],Pt={class:"chart-container"},Mt={key:0,class:"calibration-section"},Ft={__name:"PumpCalibration",props:{pumpId:{type:Number,required:!0}},setup(f){De.register(vt,qe,je,Ke,ze,Ge);const a=f,e=de(),{calibrationModeEnabled:w,pumps:g,valves:i}=ce(e),C=I({datasets:[{data:[]}]}),x=I({responsive:!0,devicePixelRatio:4,maintainAspectRatio:!1,plugins:{legend:{display:!1}},backgroundColor:"rgba(0, 140, 186, 0.3)",layout:{padding:{top:20}},scales:{x:{title:{display:!0,text:"rotations"}},y:{title:{display:!0,text:"mL / rotation"},beginAtZero:!1,suggestedMin:.1,suggestedMax:.22}}}),E=I({}),P=I(null),o=I([{rotations:1,iterations:50,total_ml:NaN},{rotations:5,iterations:10,total_ml:NaN},{rotations:10,iterations:5,total_ml:NaN},{rotations:50,iterations:1,total_ml:NaN}]),r=Y(()=>{var m,D;return((D=(m=g.value)==null?void 0:m.calibration)==null?void 0:D[a.pumpId])||{}});function h(){return{labels:Object.keys(r.value),datasets:[{label:null,data:Object.values(r.value),fill:!1,borderColor:"rgb(75, 192, 192)",tension:.1}]}}function d(){C.value=h()}function _(m){if(!Object.values(i.value.states).some(p=>p==="open")){alert("At least one valve must be open to start the pump");return}E.value[m]=!E.value[m],E.value[m]?j(o.value[m]):e.setPartStateAction({devicePart:"pumps",partIndex:a.pumpId,newState:"stopped"})}function y(m){E.value[m]=!1}function q(m){m.total_ml&&(e.setPartCalibrationAction({devicePart:"pumps",partIndex:a.pumpId,newCalibration:{...r.value,[m.rotations]:m.total_ml/m.rotations/m.iterations}}),E.value[m]=!1)}async function j(m){if(!confirm(`Pumping ${m.rotations} rotations ${m.iterations} times. Please blank the scale. Continue?`)){const p=o.value.findIndex(l=>l===m);y(p);return}try{const p=Date.now()+Math.random();P.value=p;const l=e.startPumpCalibrationSequence({pumpId:a.pumpId,rotations:m.rotations,iterations:m.iterations});await new Promise(ee=>setTimeout(ee,100)),await e.fetchDeviceData(),await l;const F=o.value.findIndex(ee=>ee===m);if(y(F),P.value===p){const ee=parseFloat(prompt("Enter total mL pumped"));isNaN(ee)||(m.total_ml=ee,q(m))}P.value===p&&(P.value=null)}catch(p){console.error("Calibration failed:",p);const l=o.value.findIndex(F=>F===m);y(l),P.value=null}}return pe(()=>{r.value&&d(),o.value.forEach(m=>{m.total_ml=(r.value[m.rotations]||0)*m.rotations*m.iterations,m.total_ml=m.total_ml?m.total_ml.toFixed(2):""})}),ve(r,()=>{d()},{deep:!0}),ve(()=>{var m,D;return(D=(m=g.value)==null?void 0:m.states)==null?void 0:D[a.pumpId]},(m,D)=>{m==="stopped"&&D==="running"&&(Object.values(E.value).some(Boolean)&&P.value&&(P.value=null),Object.keys(E.value).forEach(l=>{E.value[l]&&(E.value[l]=!1)}))}),(m,D)=>(u(),v("div",wt,[s("table",null,[D[1]||(D[1]=s("thead",null,[s("tr",null,[s("th",null,"Calibration Sequence"),s("th"),s("th",null,"Volume (mL)")])],-1)),s("tbody",null,[(u(!0),v(Z,null,le(o.value,(p,l)=>(u(),v("tr",{key:l},[s("td",null,[s("div",St,[s("div",$t,z(p.iterations),1),D[0]||(D[0]=s("div",{class:"multiplier"},"x",-1)),s("div",xt,z(p.rotations)+" rots",1)])]),s("td",null,[s("button",{onClick:F=>_(l),class:X([E.value[l]?"stop-button":"",E.value[l]===!1&&o.value[l].total_ml?"restart-button":""])},[E.value[l]?(u(),v("span",Vt,"Stop")):(u(),v("span",Et,"Start"))],10,Ot)]),s("td",null,[_e(s("input",{"onUpdate:modelValue":F=>p.total_ml=F,onChange:F=>q(p),type:"float"},null,40,It),[[ye,p.total_ml]])])]))),128))])]),s("div",Pt,[C.value.datasets[0].data.length>0?(u(),se(V(kt),{key:0,id:"pump-calibration-chart",options:x.value,class:"pump-calibration-chart",data:C.value},null,8,["options","data"])):G("",!0)]),V(w)?(u(),v("div",Mt)):G("",!0)]))}},At=ie(Ft,[["__scopeId","data-v-23032033"]]);const Rt={class:"dialog-title"},Tt={class:"d-flex align-center"},Ut={class:"flex-grow-1 mr-3"},Lt={__name:"PumpSettingsDialog",props:{modelValue:{type:Boolean,default:!1},pumpId:{type:Number,required:!0},pumpName:{type:String,required:!0}},emits:["update:modelValue","settingsUpdated"],setup(f,{emit:a}){const e=f,w=a,g=I(e.modelValue),i=I(!1),C=I(!1),x=I(!1),E=I(1),P={max_speed_rps:4,min_speed_rps:.01,acceleration:.01,deceleration:.01,kval_run:.8,kval_acc:.57,kval_dec:.3,stall_threshold:2.03,supply_voltage:12},o=ke({...P}),r=I(12),h=Y(()=>(o.kval_run*r.value).toFixed(1)),d=Y(()=>(o.kval_acc*r.value).toFixed(1)),_=Y(()=>(o.kval_dec*r.value).toFixed(1));ve(()=>e.modelValue,p=>{g.value=p,p&&(x.value=!1,y())}),ve(g,p=>{w("update:modelValue",p)});async function y(){try{const p=await be.get(`/pump/${e.pumpId}/stepper-params`);p.data.success&&(Object.assign(o,p.data.params),p.data.params.supply_voltage&&(r.value=p.data.params.supply_voltage))}catch(p){console.error("Error loading pump settings:",p),Object.assign(o,P),r.value=P.supply_voltage}}async function q(){i.value=!0;try{const p=await be.post(`/pump/${e.pumpId}/stepper-params`,{params:o});p.data.success?(w("settingsUpdated",{pumpId:e.pumpId,params:{...o}}),m()):alert("Error saving settings: "+(p.data.error||"Unknown error"))}catch(p){console.error("Error saving pump settings:",p),alert("Error saving settings: "+p.message)}finally{i.value=!1}}function j(){Object.assign(o,P),r.value=P.supply_voltage}function m(){g.value=!1}async function D(){C.value=!0;try{const p=x.value?"stop":"start",l={action:p};if(p==="start"){if(!E.value||E.value<.01||E.value>10){alert("Speed must be between 0.01 and 10 RPS"),C.value=!1;return}l.speed=E.value}const F=await be.post(`/pump/${e.pumpId}/continuous-run`,l);if(F.data.success){x.value=F.data.running||!1;const ee=x.value?`Continuous run started for ${e.pumpName} at ${E.value} RPS`:`Continuous run stopped for ${e.pumpName}`;alert(ee)}else alert("Error: "+(F.data.error||"Unknown error"))}catch(p){console.error("Error toggling continuous run:",p),alert("Error: "+p.message)}finally{C.value=!1}}return(p,l)=>{const F=B("v-card-title"),ee=B("v-alert"),ae=B("v-text-field"),ne=B("v-col"),c=B("v-row"),A=B("v-btn"),J=B("v-card"),R=B("v-container"),H=B("v-card-text"),L=B("v-spacer"),K=B("v-card-actions"),fe=B("v-dialog");return u(),se(fe,{modelValue:g.value,"onUpdate:modelValue":l[9]||(l[9]=T=>g.value=T),"max-width":"600px"},{default:$(()=>[b(J,null,{default:$(()=>[b(F,{class:"text-h5"},{default:$(()=>[s("span",Rt,z(f.pumpName)+" Pump Stepper Settings",1)]),_:1}),b(H,null,{default:$(()=>[b(ee,{type:"warning",class:"mb-4"},{default:$(()=>l[10]||(l[10]=[U(" These settings are temporary and will reset to defaults when the device reconnects. ")])),_:1}),b(R,null,{default:$(()=>[b(c,null,{default:$(()=>[b(ne,{cols:"12",md:"6"},{default:$(()=>[b(ae,{modelValue:o.max_speed_rps,"onUpdate:modelValue":l[0]||(l[0]=T=>o.max_speed_rps=T),modelModifiers:{number:!0},label:"Max Speed (RPS)",type:"number",step:"0.1",min:"0.1",max:"10",hint:"Maximum speed in rotations per second","persistent-hint":""},null,8,["modelValue"])]),_:1}),b(ne,{cols:"12",md:"6"},{default:$(()=>[b(ae,{modelValue:o.min_speed_rps,"onUpdate:modelValue":l[1]||(l[1]=T=>o.min_speed_rps=T),modelModifiers:{number:!0},label:"Min Speed (RPS)",type:"number",step:"0.01",min:"0.01",max:"1",hint:"Minimum speed in rotations per second","persistent-hint":""},null,8,["modelValue"])]),_:1})]),_:1}),b(c,null,{default:$(()=>[b(ne,{cols:"12",md:"6"},{default:$(()=>[b(ae,{modelValue:o.acceleration,"onUpdate:modelValue":l[2]||(l[2]=T=>o.acceleration=T),modelModifiers:{number:!0},label:"Acceleration",type:"number",step:"0.001",min:"0.001",max:"1",hint:"Rate of speed increase (step/tick²)","persistent-hint":""},null,8,["modelValue"])]),_:1}),b(ne,{cols:"12",md:"6"},{default:$(()=>[b(ae,{modelValue:o.deceleration,"onUpdate:modelValue":l[3]||(l[3]=T=>o.deceleration=T),modelModifiers:{number:!0},label:"Deceleration",type:"number",step:"0.001",min:"0.001",max:"1",hint:"Rate of speed decrease (step/tick²)","persistent-hint":""},null,8,["modelValue"])]),_:1})]),_:1}),b(c,null,{default:$(()=>[b(ne,{cols:"12",md:"4"},{default:$(()=>[b(ae,{modelValue:o.kval_run,"onUpdate:modelValue":l[4]||(l[4]=T=>o.kval_run=T),modelModifiers:{number:!0},label:"KVAL Run",type:"number",step:"0.01",min:"0",max:"0.996",hint:`Run voltage: ${(o.kval_run*100).toFixed(1)}% = ${h.value}V`,"persistent-hint":""},null,8,["modelValue","hint"])]),_:1}),b(ne,{cols:"12",md:"4"},{default:$(()=>[b(ae,{modelValue:o.kval_acc,"onUpdate:modelValue":l[5]||(l[5]=T=>o.kval_acc=T),modelModifiers:{number:!0},label:"KVAL Acceleration",type:"number",step:"0.01",min:"0",max:"0.996",hint:`Acceleration voltage: ${(o.kval_acc*100).toFixed(1)}% = ${d.value}V`,"persistent-hint":""},null,8,["modelValue","hint"])]),_:1}),b(ne,{cols:"12",md:"4"},{default:$(()=>[b(ae,{modelValue:o.kval_dec,"onUpdate:modelValue":l[6]||(l[6]=T=>o.kval_dec=T),modelModifiers:{number:!0},label:"KVAL Deceleration",type:"number",step:"0.01",min:"0",max:"0.996",hint:`Deceleration voltage: ${(o.kval_dec*100).toFixed(1)}% = ${_.value}V`,"persistent-hint":""},null,8,["modelValue","hint"])]),_:1})]),_:1}),b(c,null,{default:$(()=>[b(ne,{cols:"12",md:"6"},{default:$(()=>[b(ae,{modelValue:o.stall_threshold,"onUpdate:modelValue":l[7]||(l[7]=T=>o.stall_threshold=T),modelModifiers:{number:!0},label:"Stall Threshold",type:"number",step:"0.03125",min:"0.03125",max:"4",hint:"Current threshold for motor stall detection (31.25mA to 4A)","persistent-hint":""},null,8,["modelValue"])]),_:1})]),_:1}),b(c,{class:"mt-4"},{default:$(()=>[b(ne,{cols:"12"},{default:$(()=>[b(J,{variant:"outlined",class:"pa-4 continuous-run-card"},{default:$(()=>[s("div",Tt,[s("div",Ut,[l[11]||(l[11]=s("div",{class:"text-subtitle2 mb-2",style:{color:"white"}},"∞ Continuous Run",-1)),b(ae,{modelValue:E.value,"onUpdate:modelValue":l[8]||(l[8]=T=>E.value=T),modelModifiers:{number:!0},label:"Speed (RPS)",type:"number",step:"0.01",min:"0.01",max:"10",density:"compact","hide-details":"",theme:"dark",style:{"max-width":"140px"}},null,8,["modelValue"])]),b(A,{class:X(["continuous-run-button-compact",{"continuous-run-stop-compact":x.value}]),onClick:D,loading:C.value},{default:$(()=>[l[12]||(l[12]=s("span",{style:{"font-size":"16px","margin-right":"4px"}},"∞",-1)),U(" "+z(x.value?"STOP":"RUN"),1)]),_:1},8,["class","loading"])])]),_:1})]),_:1})]),_:1})]),_:1})]),_:1}),b(K,null,{default:$(()=>[b(A,{color:"grey",onClick:j},{default:$(()=>l[13]||(l[13]=[U(" Reset to Defaults ")])),_:1}),b(L),b(A,{color:"grey",onClick:m},{default:$(()=>l[14]||(l[14]=[U(" Cancel ")])),_:1}),b(A,{color:"primary",onClick:q,loading:i.value},{default:$(()=>l[15]||(l[15]=[U(" Apply Settings ")])),_:1},8,["loading"])]),_:1})]),_:1})]),_:1},8,["modelValue"])}}},Nt=ie(Lt,[["__scopeId","data-v-18814cd1"]]);const Bt={key:0,class:"pump-controls"},qt={key:1},jt={class:"pump-input"},Kt={key:1},zt=2e3,Gt={__name:"PumpControl",setup(f){const a=de(),{pumps:e,valves:w,calibrationModeEnabled:g}=ce(a),i=I({}),C=ke({show:!1,pumpId:null,pumpName:""}),x=I({}),E=I({});ve(()=>{var c;return(c=e.value)==null?void 0:c.states},c=>{},{immediate:!1});const P={1:"MAIN",2:"DRUG",3:"MISSING!!!",4:"WASTE"},o=ke({1:null,2:null,3:null,4:null}),r=ke({1:null,2:null,3:null,4:null});pe(()=>{e.value||a.fetchDeviceData()}),Ie(()=>{Object.keys(x.value).forEach(c=>{D(parseInt(c))}),Object.keys(i.value).forEach(c=>{clearInterval(i.value[c])})});async function h(c,A){if(A.ctrlKey&&A.shiftKey){p(c);return}if(E.value[c]){E.value[c]=!1;return}if(i.value[c]&&(clearInterval(i.value[c]),delete i.value[c]),e.value.states[c]==="running"){await a.setPartStateAction({devicePart:"pumps",partIndex:c,newState:"stopped"}),await a.fetchDeviceData();return}if(!Object.values(w.value.states).some(H=>H==="open")){alert("At least one valve must be open to start the pump");return}const R=parseFloat(r[c]);if(!R){alert("Please set the volume before starting the pump");return}try{i.value[c]=setInterval(async()=>{await a.fetchDeviceData(),e.value.states[c]!=="running"&&(clearInterval(i.value[c]),delete i.value[c])},500),await a.setPartStateAction({devicePart:"pumps",partIndex:c,newState:"running",input:{volume:R}}),setTimeout(()=>{i.value[c]&&(clearInterval(i.value[c]),delete i.value[c],a.fetchDeviceData())},3e4)}catch(H){console.error(`Error starting pump ${c}:`,H),e.value.states[c]="stopped",i.value[c]&&(clearInterval(i.value[c]),delete i.value[c])}}function d(c,A){r[A]=c;const J=parseFloat(r[A]);isNaN(J)?o[A]="":o[A]=y(J,A).toFixed(2)}function _(c,A){o[A]=c;const J=parseFloat(o[A]);isNaN(J)?r[A]="":r[A]=q(J,A)}function y(c,A){const J=e.value.calibration[A],R=Object.entries(J).map(([W,he])=>[parseInt(W),he]).sort((W,he)=>W[0]-he[0]);if(c>=R[R.length-1][0]*R[R.length-1][1])return c/R[R.length-1][1];let H=R[0],L=R[R.length-1];for(let W=0;W<R.length-1;W++)if(c>=R[W][0]*R[W][1]&&c<=R[W+1][0]*R[W+1][1]){H=R[W],L=R[W+1];break}const K=H[0]*H[1],fe=L[0]*L[1],T=(c-K)/(fe-K),Q=H[1]+(L[1]-H[1])*T;return c/Q}function q(c,A){const J=e.value.calibration[A],R=Object.entries(J).map(([T,Q])=>[parseInt(T),Q]).sort((T,Q)=>T[0]-Q[0]);if(c>=R[R.length-1][0])return(c*R[R.length-1][1]).toFixed(2);let H=R[0],L=R[R.length-1];for(let T=0;T<R.length-1;T++)if(c>=R[T][0]&&c<=R[T+1][0]){H=R[T],L=R[T+1];break}const K=(c-H[0])/(L[0]-H[0]),fe=H[1]+(L[1]-H[1])*K;return(c*fe).toFixed(2)}function j(c){console.log(`Pump ${c.pumpId} settings updated:`,c.params)}function m(c){D(c),x.value[c]=setTimeout(()=>{E.value[c]=!0,p(c)},zt)}function D(c){x.value[c]&&(clearTimeout(x.value[c]),delete x.value[c])}function p(c){C.pumpId=c,C.pumpName=P[c],C.show=!0}function l(c,A){A.preventDefault(),E.value[c]=!1,m(c)}function F(c,A){D(c),setTimeout(()=>{E.value[c]=!1},50)}function ee(c,A){!A.ctrlKey&&!A.shiftKey&&(E.value[c]=!1,m(c))}function ae(c,A){D(c),setTimeout(()=>{E.value[c]=!1},50)}function ne(c){D(c),E.value[c]=!1}return(c,A)=>{const J=B("v-progress-circular"),R=B("v-btn"),H=B("v-text-field");return u(),v(Z,null,[V(e)&&V(e).states?(u(),v("div",Bt,[(u(),v(Z,null,le([1,2,4],L=>s("div",{class:"pump",key:L},[b(R,{class:X(["pump-button",{"stop-button":V(e).states[L]==="running"}]),onClick:K=>h(L,K),onTouchstart:K=>l(L,K),onTouchend:K=>F(L),onMousedown:K=>ee(L,K),onMouseup:K=>ae(L),onMouseleave:K=>ne(L),title:`Start ${P[L]} Pump (hold or Ctrl+Shift+Click to open advanced settings)`},{default:$(()=>[V(e).states[L]==="running"?(u(),se(J,{key:0,indeterminate:"",color:"white",class:"spinner-custom",size:"64"})):(u(),v("span",qt,[U(z(P[L]),1),A[1]||(A[1]=s("br",null,null,-1)),A[2]||(A[2]=U("pump"))]))]),_:2},1032,["class","onClick","onTouchstart","onTouchend","onMousedown","onMouseup","onMouseleave","title"]),s("div",jt,[b(H,{label:"Volume (mL)",type:"number",dense:"",modelValue:r[L],"onUpdate:modelValue":[K=>r[L]=K,K=>d(K,L)]},null,8,["modelValue","onUpdate:modelValue"]),V(g)?(u(),se(H,{key:0,label:"Rotations",type:"number",dense:"",modelValue:o[L],"onUpdate:modelValue":[K=>o[L]=K,K=>_(K,L)]},null,8,["modelValue","onUpdate:modelValue"])):G("",!0),V(g)?(u(),se(At,{key:1,pumpId:L},null,8,["pumpId"])):G("",!0)])])),64))])):(u(),v("div",Kt," Loading pump data... ")),b(Nt,{modelValue:C.show,"onUpdate:modelValue":A[0]||(A[0]=L=>C.show=L),"pump-id":C.pumpId,"pump-name":C.pumpName,onSettingsUpdated:j},null,8,["modelValue","pump-id","pump-name"])],64)}}},Wt=ie(Gt,[["__scopeId","data-v-e363be9c"]]);const Ht={class:"valve-calibration"},Jt={class:"warning-header"},Qt={key:0,class:"loading-state"},Zt={key:1,class:"calibration-controls"},Xt={class:"slider-container"},Yt={class:"slider-label"},ea={class:"value"},ta={class:"slider-container"},aa={class:"slider-label"},na={class:"value"},la={class:"valve-controls"},oa={__name:"ValveCalibration",props:{valveId:{type:Number,required:!0}},setup(f){const a=f,e=de(),{valves:w}=ce(e),g=I(.03),i=I(.12),C=I(!1),x=I(!0);ve(w,_=>{var y,q;_&&(g.value=((y=_.duty_cycle_open)==null?void 0:y[a.valveId])??.03,i.value=((q=_.duty_cycle_closed)==null?void 0:q[a.valveId])??.12),x.value=!1},{immediate:!0}),pe(async()=>{try{await e.fetchDeviceData()}catch(_){console.error("Error initializing valve calibration:",_),x.value=!1}});async function E(_){var y,q;C.value=!0;try{await e.setPartStateAction({devicePart:"valves",partIndex:a.valveId,newState:_?"open":"closed",input:{dutyCycle:_?g.value:i.value}}),te.success(`Valve ${a.valveId} ${_?"opened":"closed"} successfully`)}catch(j){if(console.error("Error operating valve:",j),!j.response)te.error("Server connection error. Please check if the backend server is running.");else{const m=((q=(y=j.response)==null?void 0:y.data)==null?void 0:q.message)||j.message||"Operation failed";te.error(`Failed to ${_?"open":"close"} valve ${a.valveId}: ${m}`)}}finally{C.value=!1}}async function P(){try{await be.post("/set-valve-duty-cycle-open",{valve:a.valveId,duty_cycle:g.value}),te.success(`Valve ${a.valveId} open duty cycle set to ${g.value.toFixed(3)}`)}catch(_){console.error("Error updating open duty cycle:",_),te.error(`Failed to update valve ${a.valveId} open duty cycle`)}}async function o(){try{await be.post("/set-valve-duty-cycle-closed",{valve:a.valveId,duty_cycle:i.value}),te.success(`Valve ${a.valveId} closed duty cycle set to ${i.value.toFixed(3)}`)}catch(_){console.error("Error updating closed duty cycle:",_),te.error(`Failed to update valve ${a.valveId} closed duty cycle`)}}async function r(){g.value=.03,i.value=.12;try{await Promise.all([P(),o()]),te.success(`Valve ${a.valveId} duty cycles reset to defaults`)}catch{te.error(`Failed to reset valve ${a.valveId} duty cycles`)}}function h(_){g.value=_}function d(_){i.value=_}return(_,y)=>{const q=B("v-icon"),j=B("v-progress-circular"),m=B("v-slider"),D=B("v-btn");return u(),v("div",Ht,[s("div",Jt,[b(q,{color:"error",size:"large"},{default:$(()=>y[4]||(y[4]=[U("warning")])),_:1}),s("h2",null,"Warning! Valve "+z(f.valveId)+" Calibration Mode",1)]),x.value?(u(),v("div",Qt,[b(j,{indeterminate:"",color:"primary"}),y[5]||(y[5]=s("span",null,"Loading valve data...",-1))])):(u(),v("div",Zt,[s("div",Xt,[s("div",Yt,[y[6]||(y[6]=s("span",null,"Open Duty Cycle",-1)),s("span",ea,z(g.value.toFixed(3)),1)]),b(m,{modelValue:g.value,"onUpdate:modelValue":[y[0]||(y[0]=p=>g.value=p),h],min:.02,max:.04,step:.001,color:"primary","track-color":"grey","thumb-label":"",onMouseup:P},null,8,["modelValue"])]),s("div",ta,[s("div",aa,[y[7]||(y[7]=s("span",null,"Closed Duty Cycle",-1)),s("span",na,z(i.value.toFixed(3)),1)]),b(m,{modelValue:i.value,"onUpdate:modelValue":[y[1]||(y[1]=p=>i.value=p),d],min:.11,max:.13,step:.001,color:"primary","track-color":"grey","thumb-label":"",onMouseup:o},null,8,["modelValue"])]),s("div",la,[b(D,{color:"success",onClick:y[2]||(y[2]=p=>E(!0)),loading:C.value,disabled:C.value},{default:$(()=>y[8]||(y[8]=[U(" Open Valve ")])),_:1},8,["loading","disabled"]),b(D,{color:"error",onClick:y[3]||(y[3]=p=>E(!1)),loading:C.value,disabled:C.value},{default:$(()=>y[9]||(y[9]=[U(" Close Valve ")])),_:1},8,["loading","disabled"]),b(D,{color:"primary",onClick:r},{default:$(()=>y[10]||(y[10]=[U(" Reset Defaults ")])),_:1})])]))])}}},sa=ie(oa,[["__scopeId","data-v-2b40de6c"]]);const ia={class:"valve-controls"},ra=["onClick","disabled"],ua={key:0,class:"spinner-border spinner-custom",role:"status"},ca={key:1},da={__name:"ValveControl",setup(f){const a=de(),{valves:e}=ce(a),w=I({}),g=new(window.AudioContext||window.webkitAudioContext),i=I(!1),C=I(null);function x(o){const r=o==="open"?500:300,h=o==="open"?300:500,d=g.createOscillator();d.type="sine";const _=g.createGain();return _.gain.setValueAtTime(.1,g.currentTime),d.connect(_),_.connect(g.destination),d.frequency.setValueAtTime(r,g.currentTime),d.frequency.linearRampToValueAtTime(h,g.currentTime+.3),d.start(),d.stop(g.currentTime+.3),d}async function E(o){const r=e.value.states[o];if(w.value[o])return;w.value={...w.value,[o]:!0};const h=x(r);try{await a.setPartStateAction({devicePart:"valves",partIndex:o,newState:r==="open"?"closed":"open"}),h.stop()}catch(d){console.error(d)}finally{w.value={...w.value,[o]:!1}}}function P(o,r){if(r.ctrlKey&&r.shiftKey){C.value=o,i.value=!0;return}E(o)}return(o,r)=>{const h=B("v-dialog");return u(),v(Z,null,[s("div",ia,[(u(),v(Z,null,le(7,d=>s("button",{class:X(["btn",{"btn-danger":V(e).states[d]==="closed"&&!w.value[d],"btn-success":V(e).states[d]==="open"&&!w.value[d],"btn-warning":w.value[d]}]),key:d,onClick:_=>P(d,_),disabled:w.value[d]},[w.value[d]?(u(),v("div",ua)):(u(),v("span",ca,"Valve "+z(d),1))],10,ra)),64))]),b(h,{modelValue:i.value,"onUpdate:modelValue":r[1]||(r[1]=d=>i.value=d),"max-width":"600"},{default:$(()=>[i.value?(u(),se(sa,{key:0,valveId:C.value,onClose:r[0]||(r[0]=d=>i.value=!1)},null,8,["valveId"])):G("",!0)]),_:1},8,["modelValue"])],64)}}},va=ie(da,[["__scopeId","data-v-a341c808"]]);const pa={class:"elements-container"},fa={class:"stirrer-name"},ma={key:0},ga={style:{position:"relative",display:"inline-block"}},ba={style:{position:"relative",display:"inline-block"}},_a={class:"buttons-container"},Te=0,Ue=1,ya={__name:"StirrerCalibration",props:{stirrerId:{type:Number,required:!0}},setup(f){const a=f,e=I(null),w=I(null),g=I(null),i=new(window.AudioContext||window.webkitAudioContext);let C=null,x=null,E=null;const P=de(),{calibrationModeEnabled:o,stirrers:r}=ce(P),h=Y(()=>r.value&&r.value.states?r.value.states[a.stirrerId]:void 0);function d(p){P.setPartStateAction({devicePart:"stirrers",partIndex:a.stirrerId,newState:p})}function _(p){if(r.value&&r.value.states)for(let l=1;l<=7;l++)r.value.states[l]=p;P.setAllStirrersStateAction&&P.setAllStirrersStateAction(p)}function y(p,l){j(l.target.value)}function q(p,l){!r.value||!r.value.calibration||!r.value.calibration[a.stirrerId]||P.setPartCalibrationAction({devicePart:"stirrers",partIndex:a.stirrerId,newCalibration:{low:r.value.calibration[a.stirrerId].low,high:r.value.calibration[a.stirrerId].high}}).catch(F=>{console.error("Error updating stirrer calibration:",F)})}function j(p){C||(C=i.createOscillator(),x=i.createGain(),C.type="sine",x.gain.setValueAtTime(.1,i.currentTime),C.connect(x),x.connect(i.destination),C.start());const l=300+p*500;C.frequency.setValueAtTime(l,i.currentTime),E&&clearTimeout(E),E=setTimeout(m,200)}function m(){C&&(x.gain.exponentialRampToValueAtTime(.001,i.currentTime+.01),x.gain.setValueAtTime(.1,i.currentTime+.02),C.stop(i.currentTime+.02),C=null,x=null)}function D(p,l){(p==="high"&&h.value!=="high"||p==="low"&&h.value!=="low")&&(l.preventDefault(),te("Enable stirrer to adjust speed",{type:"info"}))}return pe(()=>{window.addEventListener("resize",()=>{})}),st(()=>{window.removeEventListener("resize",()=>{})}),(p,l)=>(u(),v("div",{class:"stirrer-calibrator",ref_key:"container",ref:e},[s("div",pa,[s("div",fa,[s("header",null,"Stirrer "+z(f.stirrerId),1)]),V(o)&&V(r)&&V(r).calibration&&V(r).calibration[f.stirrerId]?(u(),v("div",ma,[s("div",ga,[_e(s("input",{type:"range",class:X(["slider slider-high",[{active:h.value==="high"},{"slider-disabled":h.value!=="high"}]]),min:Te,max:Ue,step:.01,"onUpdate:modelValue":l[0]||(l[0]=F=>V(r).calibration[f.stirrerId].high=F),onInput:l[1]||(l[1]=F=>y("high",F)),onChange:l[2]||(l[2]=F=>q())},null,34),[[ye,V(r).calibration[f.stirrerId].high,void 0,{number:!0}]]),h.value!=="high"?(u(),v("div",{key:0,class:"slider-overlay",onClick:l[3]||(l[3]=F=>D("high",F))})):G("",!0)]),s("div",ba,[_e(s("input",{type:"range",class:X(["slider slider-low",[{active:h.value==="low"},{"slider-disabled":h.value!=="low"}]]),min:Te,max:Ue,step:.01,"onUpdate:modelValue":l[4]||(l[4]=F=>V(r).calibration[f.stirrerId].low=F),onInput:l[5]||(l[5]=F=>y("low",F)),onChange:l[6]||(l[6]=F=>q())},null,34),[[ye,V(r).calibration[f.stirrerId].low,void 0,{number:!0}]]),h.value!=="low"?(u(),v("div",{key:0,class:"slider-overlay",onClick:l[7]||(l[7]=F=>D("low",F))})):G("",!0)])])):G("",!0),s("div",_a,[s("button",{class:X(["button button-high",{active:h.value==="high"}]),ref_key:"buttonHigh",ref:w,onClick:l[8]||(l[8]=F=>d("high")),onDblclick:l[9]||(l[9]=F=>_("high"))},"High",34),s("button",{class:X(["button button-low",{active:h.value==="low"}]),ref_key:"buttonLow",ref:g,onClick:l[10]||(l[10]=F=>d("low")),onDblclick:l[11]||(l[11]=F=>_("low"))},"Low",34),s("button",{class:X(["button button-off",{active:h.value==="stopped"}]),ref:"buttonOff",onClick:l[12]||(l[12]=F=>d("stopped")),onDblclick:l[13]||(l[13]=F=>_("stopped"))},"OFF",34)])])],512))}},ha=ie(ya,[["__scopeId","data-v-d01f6391"]]);const Ca={name:"StirrerControl",components:{StirrerCalibration:ha}},ka={class:"stirrer-controls"};function Da(f,a,e,w,g,i){const C=B("StirrerCalibration");return u(),v("div",ka,[(u(),v(Z,null,le(7,x=>b(C,{key:x,stirrerId:x},null,8,["stirrerId"])),64))])}const wa=ie(Ca,[["render",Da],["__scopeId","data-v-6cada7fd"]]),Sa={className:"single-chart-container"},$a={__name:"ODChart",props:{partId:{type:Number,required:!0}},setup(f){De.register(Ke,ze,Ge,pt,qe,je,ft);const a=f,e=de(),{ods:w}=ce(e),g=Y(()=>{var o,r;return(r=(o=w.value)==null?void 0:o.calibration)==null?void 0:r[a.partId]}),i=Y(()=>{var o,r;return(r=(o=w.value)==null?void 0:o.calibration_coefs)==null?void 0:r[a.partId]}),C=Y(()=>{var o,r,h,d;return{od:(r=(o=w.value)==null?void 0:o.states)==null?void 0:r[a.partId],signal:(d=(h=w.value)==null?void 0:h.odsignals)==null?void 0:d[a.partId]}});function x(o,r,h){return-Math.log10(o/r)*h}const E=Y(()=>{if(g.value&&typeof g.value=="object"&&i.value){const o=Object.entries(g.value).filter(([_,y])=>y!==null).map(([_,y])=>({x:Number(y),y:Number(_)})).sort((_,y)=>_.x-y.x);let r=Math.min(...o.map(_=>_.x)),h=Math.max(...o.map(_=>_.x));const d=[];r===h&&(r=0,h=50);for(let _=r;_<=h;_+=.1){const y=x(_,...i.value);d.push({x:_,y})}return{datasets:[{label:`Vial ${a.partId} Calibration OD`,data:o,borderColor:"#607ecb",backgroundColor:"rgba(83,158,255,0.64)"},{label:`Vial ${a.partId} Current OD`,data:[{x:C.value.signal,y:C.value.od}],pointRadius:5,backgroundColor:"rgba(255,1,60,0.64)"},{label:`Vial ${a.partId} Fit`,data:d,pointRadius:0,borderColor:"rgba(0,70,220,0.38)",borderWidth:2,showLine:!0,fill:!1,borderDash:[2,2]}]}}return{}}),P=Y(()=>{var o,r;return{devicePixelRatio:4,responsive:!0,maintainAspectRatio:!1,plugins:{legend:{display:!1},title:{display:!0,text:`Vial ${a.partId}`+(i.value?`
blank: ${(o=i.value[0])==null?void 0:o.toFixed(2)}, scaling: ${(r=i.value[1])==null?void 0:r.toFixed(2)}`:"")}},scales:{x:{title:{display:!0,text:"Signal (mV)"},suggestedMin:0},y:{title:{display:!0,text:"OD"},suggestedMax:1.5,suggestedMin:0}}}});return(o,r)=>(u(),v("div",Sa,[b(V(Dt),{data:E.value,options:P.value},null,8,["data","options"])]))}};I({show:!1,title:"",content:"",resolve:null});const xa={class:"guide-popup"},Oa={class:"guide-header"},Va={__name:"ODGuide",setup(f){return(a,e)=>{const w=B("v-icon");return u(),v("div",{class:"guide-overlay",onClick:e[1]||(e[1]=rt(g=>a.$emit("close"),["self"]))},[s("div",xa,[s("div",Oa,[e[3]||(e[3]=s("span",{class:"guide-title"},"OD Calibration Guide",-1)),s("button",{class:"guide-close",onClick:e[0]||(e[0]=g=>a.$emit("close"))},[b(w,null,{default:$(()=>e[2]||(e[2]=[U("mdi-close")])),_:1})])]),e[4]||(e[4]=it('<div class="guide-content" data-v-8d7af6ce><div class="guide-section" data-v-8d7af6ce><b class="section-title" data-v-8d7af6ce>What is Optical Density (OD)?</b><br data-v-8d7af6ce><span class="guide-text" data-v-8d7af6ce> Optical Density (OD) measures how much light is absorbed by a sample. The higher the OD, the more cells or particles are in the solution. </span></div><div class="guide-section" data-v-8d7af6ce><b class="section-title" data-v-8d7af6ce>Beer-Lambert Law and Scaling Factor</b><br data-v-8d7af6ce><span class="guide-text" data-v-8d7af6ce> The Beer-Lambert Law relates OD to the transmitted light signal: </span><br data-v-8d7af6ce><span class="formula" data-v-8d7af6ce> OD = -log₁₀(signal / blank_signal) </span><br data-v-8d7af6ce><span class="guide-text" data-v-8d7af6ce> In our devices, the light path is not a standard 1cm cuvette. The curved shape of the vial and the sensor design affect how light travels through the sample. This is corrected using a scaling factor: </span><br data-v-8d7af6ce><span class="formula" data-v-8d7af6ce> OD = -log₁₀(signal / blank_signal) * scaling </span><br data-v-8d7af6ce></div><div class="guide-section" data-v-8d7af6ce><b class="section-title" data-v-8d7af6ce>Calibration Process</b><div class="method-panel" data-v-8d7af6ce><div class="method-heading" data-v-8d7af6ce>Step 1: Measure OD₀ (Blank Signal)</div><div class="od-warning-box" data-v-8d7af6ce><b data-v-8d7af6ce>Important: OD₀ must be measured with a vial containing growth medium!</b><div class="od-warning-details" data-v-8d7af6ce> - Use the same growth medium that will be used in your experiment<br data-v-8d7af6ce> - The vial must be filled with liquid<br data-v-8d7af6ce> - A good blank signal should be above 20mV<br data-v-8d7af6ce> - If the signal is below 20mV, check for:<br data-v-8d7af6ce>   • Proper vial alignment<br data-v-8d7af6ce>   • Clean sensors and vials<br data-v-8d7af6ce>   • No obstructions in the light path </div></div></div><div class="method-panel" data-v-8d7af6ce><div class="method-heading" data-v-8d7af6ce>Step 2 (Optional): Measure additional OD values to calibrate the scaling factor</div><div class="option-container" data-v-8d7af6ce><div class="option-box" data-v-8d7af6ce><div class="method-subheading" data-v-8d7af6ce>Option A: Using Liquid Samples (Recommended)</div><ol class="guide-ol" data-v-8d7af6ce><li data-v-8d7af6ce>Prepare a vial with a known OD between 0.1 and 2.0: </li><li data-v-8d7af6ce>Insert this vial into each slot and measure its signal using the calibration table.</li><li data-v-8d7af6ce>The scaling factor will be automatically calculated from these measurements.</li><i data-v-8d7af6ce>Repeat with different OD values for increased accuracy.</i></ol></div><div class="option-box" data-v-8d7af6ce><div class="method-subheading" data-v-8d7af6ce>Option B: Using Semitransparent Sheets</div><ol class="guide-ol" data-v-8d7af6ce><li data-v-8d7af6ce>Determine the equivalent OD of one or more semitransparent sheets (using a solution which creates the same signal as the sheet inserted in the sensor)</li><li data-v-8d7af6ce>Place the sheet over all sensors at once</li><li data-v-8d7af6ce>Measure the signals and the scaling factor will be calculated automatically</li><i data-v-8d7af6ce>Note: This method is less accurate than using liquid samples</i></ol></div></div></div><div class="method-panel" data-v-8d7af6ce><div class="method-heading" data-v-8d7af6ce>Step 3: Final Check</div><div class="guide-text" data-v-8d7af6ce> Ideally, remeasure OD₀ just before starting the experiment. Small changes in the position of the vial and media composition can affect the signal. </div></div></div></div>',1))])])}}},Ea=ie(Va,[["__scopeId","data-v-8d7af6ce"]]);const Ia={class:"od-control-container"},Pa=["onClick","disabled"],Ma={key:1},Fa={key:0,class:"od-output-value error-message"},Aa={key:3,class:"signal-output-value error-message"},Ra={key:0,class:"calibration-section"},Ta={class:"probe-table-outer-container",style:{"margin-bottom":"18px"}},Ua={class:"table-controls"},La={class:"mode-controls"},Na={class:"calibration-table-wrapper"},Ba={class:"calibration-table"},qa={key:0,style:{width:"36px"}},ja={class:"od-value-container"},Ka=["onDblclick"],za=["value","onInput","onBlur","onKeyup"],Ga=["title"],Wa={key:1,class:"signal-value"},Ha={key:1,class:"signal-value"},Ja={key:1,class:"measure-cell-container"},Qa=["onDblclick"],Za=["onDblclick"],Xa=["value","onInput","onBlur","onKeyup"],Ya=["onClick","disabled","title"],en={key:0,class:"measure-button-content"},tn={key:1,class:"measure-button-content"},an={key:0,style:{"text-align":"center",width:"36px",padding:"4px"}},nn=["onClick","disabled"],ln={key:1,style:{width:"36px"}},on={key:0},sn={class:"scaling-factor-container"},rn={class:"calibration-table"},un={class:"scaling-factor-row"},cn=["title"],dn=["onUpdate:modelValue"],vn=["onDblclick","title"],pn=["onBlur","onKeyup"],fn={key:1},mn={key:0,style:{width:"40px"}},gn={key:0,class:"chart-container"},bn={__name:"ODControl",setup(f){const a=de(),{ods:e,calibrationModeEnabled:w}=ce(a),{openDialog:g}=Pe(),i=[1,2,3,4,5,6,7],C=I(!1),x=I(!0),E=I(!1),P=I(!1),o=I(null),r=I({}),h=I({}),d=I({}),_=Y(()=>{let n=new Set;if(e.value.calibration)for(let M in e.value.calibration)for(let N in e.value.calibration[M])n.add(N);return Array.from(n).sort((M,N)=>parseFloat(M)-parseFloat(N))}),y=Y(()=>{if(!e.value.calibration)return[];const n=new Set;for(const t in e.value.calibration)for(const M in e.value.calibration[t])n.add(parseFloat(M));return Array.from(n).sort((t,M)=>t-M)}),q=I(new Set),j=Y(()=>{const n=e.value.calibration_coefs||{};return i.map(t=>{var M;return((M=n[t])==null?void 0:M[1])??"—"})}),m=I([]),D=I(null),p=I(null);ve(j,n=>{m.value=[...n]},{immediate:!0}),pe(()=>{a.fetchDeviceData(),document.addEventListener("click",l)}),Ie(()=>{document.removeEventListener("click",l)});function l(n){if(re.value&&!n.target.closest(".calibration-signal")&&we(re.value.vial,re.value.odValue),ue.value&&!n.target.closest(".od-value-input")){const t=y.value.indexOf(ue.value);t!==-1&&J(ue.value,t),ue.value=null}D.value&&!n.target.closest(".scaling-factor-input")&&xe(D.value)}async function F(n){var t,M;if(console.log("handleOdClick called with odIndex:",n,typeof n),o.value===null){o.value=n,delete r.value[n];try{console.log("Starting OD measurement for index:",n);const N=await be.post("/measure-ods",{partIndex:n});if(console.log("Raw API response:",N),N.data.success)console.log("OD measurement successful for index:",n),await a.fetchDeviceData(),delete r.value[n];else throw console.log("API returned failure for index:",n),new Error(N.data.message||"Measurement failed")}catch(N){console.error("Error measuring OD:",N),console.log("Setting error for OD index:",n);const S=((M=(t=N.response)==null?void 0:t.data)==null?void 0:M.message)||N.message||"Measurement failed";r.value={...r.value,[n]:S},console.log("Error set for odIndex:",n,"error:",S),console.log("Full odErrors object:",r.value)}finally{o.value=null}}}function ee(n,t,M){d.value[t]||(d.value[t]={}),d.value[t][M]=parseFloat(n.target.value)}function ae(n,t){if(d.value[n]&&d.value[n][t]!==void 0){e.value.calibration[n]||(e.value.calibration[n]={});const M=d.value[n][t];isNaN(d.value[n][t])&&delete e.value.calibration[n][t],a.updateODCalibrationValueAction({od:t,vial:n,newValue:M}).catch(N=>{console.error(`Error updating calibration for vial ${n}:`,N)}),delete d.value[n][t]}}function ne(n,t){return d.value[n]&&d.value[n][t]!==void 0?d.value[n][t]:e.value.calibration&&e.value.calibration[n]&&e.value.calibration[n][t]!==void 0?e.value.calibration[n][t]:""}function c(n,t){if(!e.value.calibration||!e.value.calibration[n]||e.value.calibration[n][t]===void 0)return{background:""};const M=parseFloat(e.value.calibration[n][t]),N=5,S=40;let k;if(M<=0)k=N;else{const O=Math.log(10),oe=Math.log(1e3),lt=(Math.log(Math.max(10,Math.min(1e3,M)))-O)/(oe-O);k=N+lt*(S-N)}return{background:`rgba(255, 100, 100, ${k/100})`}}function A(n){if(n==null)return"";const t=parseFloat(n);if(isNaN(t))return"";const M=.02,N=.25,S=Math.max(0,Math.min(4,t)),k=Math.log(S+1)/Math.log(5),O=M+k*(N-M);return`background: linear-gradient(to right, rgba(255, 235, 156, ${O}), rgba(255, 235, 156, ${O*.6}))`}async function J(n,t,M){if(h.value[t]!==void 0){const N=h.value[t];if(y.value.some((k,O)=>O!==t&&parseFloat(k)===parseFloat(N))&&!await g({title:"Duplicate OD Value",message:`An OD probe value of ${N} already exists. Are you sure you want to overwrite?`,showCancel:!0})){delete h.value[t];return}y.value[t]=N,delete h.value[t];try{for(let k in e.value.calibration){const O=e.value.calibration[k],oe=JSON.parse(JSON.stringify(O));O[n]!==void 0&&(delete oe[n],oe[N]=O[n],await a.setPartCalibrationAction({devicePart:"ods",partIndex:k,newCalibration:oe}))}await a.fetchDeviceData()}catch(k){console.error("Error updating calibration:",k),te.error("Failed to update calibration values")}}}function R(n,t){console.log("handleProbeValueInput",n.target.value),h.value[t]=parseFloat(n.target.value)}function H(){E.value=!0}function L(){E.value=!1}function K(){if(!y.value.length)return .1;const n=Math.max(...y.value);return parseFloat((n+.1).toFixed(2))}async function fe(){const n=K();for(const t of i)e.value.calibration[t]||(e.value.calibration[t]={}),e.value.calibration[t][n]=null,await a.setPartCalibrationAction({devicePart:"ods",partIndex:t,newCalibration:e.value.calibration[t]});await a.fetchDeviceData()}async function T(n){const t=_.value[n];q.value.add(t);for(const M of i)e.value.calibration[M]&&(delete e.value.calibration[M][t],await a.setPartCalibrationAction({devicePart:"ods",partIndex:M,newCalibration:e.value.calibration[M]}));await a.fetchDeviceData(),q.value.delete(t)}const Q={VIEW:"view",MEASURE:"measure"},W=I(Q.VIEW);Y(()=>({"view-mode":W.value===Q.VIEW,"measure-mode":W.value===Q.MEASURE}));async function he(n,t){try{await a.measureDevicePart({devicePart:"ods",partIndex:n});const M=e.value.odsignals[n];await a.updateODCalibrationValueAction({od:t,vial:n,newValue:M}),await a.fetchDeviceData()}catch(M){console.error("Error measuring cell:",M)}}const re=I(null),Ze=I(null);function Fe(n,t){re.value={vial:n,odValue:t},Ce(()=>{const M=document.querySelector(".calibration-signal");M&&M.focus()})}function we(n,t){d.value[n]&&d.value[n][t]!==void 0&&ae(n,t),re.value=null}function Xe(){if(re.value=null,re.value){const{vial:n,odValue:t}=re.value;d.value[n]&&delete d.value[n][t]}}const ue=I(null);function Ye(n,t){ue.value=n,Ce(()=>{const M=document.querySelector(".od-value-input");M&&M.focus()})}function et(){if(ue.value=null,ue.value){const n=y.value.indexOf(ue.value);n!==-1&&h.value[n]&&delete h.value[n]}}const Se=(n,t)=>({icon:"",color:"#90caf9",tooltip:"Scaling factor"});function Ae(n){return!e.value.calibration||!e.value.calibration[n]?0:Object.values(e.value.calibration[n]).filter(t=>t!=null).length}function $e(n){return Ae(n)===1}function tt(n){const t=Ae(n);return t>=2?"Scaling factor is automatically calculated from multiple calibration points. Cannot be edited.":t===1?"Double-click to edit scaling factor.":"No calibration points available for this vial."}function at(n){if(!$e(n))return;D.value=n;const t=m.value[n-1];p.value=typeof t=="number"?t:2,Ce(()=>{const M=document.querySelector(".scaling-factor-input");M&&(M.focus(),M.select())})}async function xe(n){if(D.value===n)try{p.value&&p.value>0&&await a.setODScalingFactorAction({vial:n,scalingFactor:p.value})}catch(t){console.error("Error setting scaling factor:",t)}finally{D.value=null,p.value=null}}function nt(){D.value=null,p.value=null}const Oe=n=>typeof n!="number"?{icon:"mdi-help-circle-outline",color:"grey",tooltip:"No signal value available"}:n>=20?{icon:"mdi-check-circle",color:"#4caf50",tooltip:"Signal value within expected range"}:n>=12?{icon:"mdi-alert-circle",color:"#ffc107",tooltip:"Signal value slightly low. Consider recalibrating"}:{icon:"mdi-close-circle",color:"#f44336",tooltip:"Signal value too low. Check OD sensor"};return(n,t)=>{const M=B("v-progress-circular"),N=B("v-icon");return u(),v(Z,null,[s("div",Ia,[(u(!0),v(Z,null,le(V(e).states,(S,k)=>(u(),v("div",{class:"elements-container",key:k},[s("button",{class:"od-button",onClick:O=>F(k),disabled:o.value===k},[o.value===k?(u(),se(M,{key:0,indeterminate:"",color:"white",size:"24"})):(u(),v("span",Ma,"OD "+z(k),1))],8,Pa),r.value[k]?(u(),v("span",Fa,z(r.value[k]),1)):V(e).states&&V(e).states[k]!==void 0&&V(e).states[k]!==0?(u(),v("span",{key:1,class:X(["od-output-value",{"value-being-replaced":o.value===k}])},z(parseFloat(V(e).states[k].toFixed(2))),3)):(u(),v("span",{key:2,class:X(["od-output-value",{"value-being-replaced":o.value===k}])},"---",2)),t[2]||(t[2]=s("div",{style:{height:"0.5px"}},null,-1)),r.value[k]?(u(),v("span",Aa)):V(e).odsignals&&V(e).odsignals[k]!==void 0&&V(e).odsignals[k]!==0?(u(),v("span",{key:4,class:X(["signal-output-value",{"value-being-replaced":o.value===k}])},"("+z(parseFloat(V(e).odsignals[k].toFixed(2)))+"mV)",3)):(u(),v("span",{key:5,class:X(["signal-output-value",{"value-being-replaced":o.value===k}])},"(---)",2))]))),128))]),V(w)?(u(),v("div",Ra,[s("div",Ta,[t[7]||(t[7]=s("div",{style:{display:"flex","align-items":"center","margin-bottom":"8px"}},null,-1)),s("div",Ua,[t[6]||(t[6]=s("div",{style:{flex:"1"}},null,-1)),s("div",La,[s("button",{class:X(["control-button mode-toggle",{active:W.value===Q.MEASURE}]),onClick:t[0]||(t[0]=S=>W.value=W.value===Q.MEASURE?Q.VIEW:Q.MEASURE)},[b(N,null,{default:$(()=>t[3]||(t[3]=[U("mdi-pencil")])),_:1}),t[4]||(t[4]=U(" Edit "))],2)]),s("button",{class:"control-button help-button",onClick:H},[b(N,null,{default:$(()=>t[5]||(t[5]=[U("mdi-help-circle-outline")])),_:1})])])]),t[16]||(t[16]=s("div",{class:"calibration-controls"},null,-1)),s("div",Na,[s("table",Ba,[s("thead",null,[s("tr",null,[t[8]||(t[8]=s("th",{style:{width:"110px"}},"OD Value",-1)),(u(),v(Z,null,le(i,S=>s("th",{key:S,style:{width:"90px"}},"Vial "+z(S),1)),64)),C.value?(u(),v("th",qa)):G("",!0)])]),s("tbody",null,[(u(!0),v(Z,null,le(_.value,(S,k)=>(u(),v("tr",{key:S,class:X({"od-zero-row":parseFloat(S)===0})},[s("td",{style:Re([{width:"110px"},A(S)])},[s("div",ja,[!ue.value||ue.value!==S?(u(),v("span",{key:0,class:"od-value-display",onDblclick:O=>Ye(S),title:"Double click to edit"},z(k<y.value.length?h.value[k]!==void 0?h.value[k]:y.value[k]:S),41,Ka)):(u(),v("input",{key:1,value:h.value[k]!==void 0?h.value[k]:y.value[k],onInput:O=>R(O,k),onBlur:O=>J(S,k),onKeyup:[me(O=>J(S,k),["enter"]),me(et,["esc"])],type:"number",step:"0.1",class:"od-value-input",ref_for:!0,ref:"odValueInput"},null,40,za))])],4),(u(),v(Z,null,le(i,O=>s("td",{key:O,class:X({"has-data":V(e).calibration&&V(e).calibration[O]&&V(e).calibration[O][S]!==void 0}),style:Re({background:c(O,S).background})},[W.value===Q.VIEW?(u(),v(Z,{key:0},[V(e).calibration&&V(e).calibration[O]&&V(e).calibration[O][S]!==void 0&&V(e).calibration[O][S]!==null?(u(),v(Z,{key:0},[parseFloat(S)===0?(u(),v("div",{key:0,class:"signal-value-with-status",title:Oe(V(e).calibration[O][S]).tooltip},[U(z(V(e).calibration[O][S].toFixed(2))+" ",1),b(N,{color:Oe(V(e).calibration[O][S]).color,size:"small",style:{"margin-left":"4px"}},{default:$(()=>[U(z(Oe(V(e).calibration[O][S]).icon),1)]),_:2},1032,["color"])],8,Ga)):(u(),v("div",Wa,z(V(e).calibration[O][S].toFixed(2)),1))],64)):(u(),v("div",Ha,"---"))],64)):W.value===Q.MEASURE?(u(),v("div",Ja,[V(e).calibration&&V(e).calibration[O]&&V(e).calibration[O][S]!==void 0&&V(e).calibration[O][S]!==null?(u(),v("span",{key:0,class:"signal-value measure-background-value",onDblclick:oe=>Fe(O,S),title:"Double click to edit"},z(parseFloat(V(e).calibration[O][S]).toFixed(2))+"mV ",41,Qa)):(u(),v("span",{key:1,class:"signal-value measure-background-value empty-value",onDblclick:oe=>Fe(O,S),title:"Double click to edit"}," ——— ",40,Za)),re.value&&re.value.vial===O&&re.value.odValue===S?(u(),v("input",{key:2,value:ne(O,S),onInput:oe=>ee(oe,O,S),onBlur:oe=>we(O,S),onKeyup:[me(oe=>we(O,S),["enter"]),me(Xe,["esc"])],type:"number",class:"calibration-signal",ref_for:!0,ref_key:"editingInput",ref:Ze},null,40,Xa)):G("",!0),s("button",{class:"measure-cell-button",onClick:oe=>he(O,S),disabled:P.value,title:`Calibrate OD ${parseFloat(S).toFixed(2)} signal in vial ${O} (measure now)`},[P.value?(u(),v("span",en,t[9]||(t[9]=[s("span",{class:"loading-spinner"},null,-1)]))):(u(),v("span",tn,[b(N,null,{default:$(()=>t[10]||(t[10]=[U("mdi-camera-metering-center")])),_:1})]))],8,Ya)])):G("",!0)],6)),64)),W.value===Q.MEASURE&&parseFloat(_.value[k])!==0?(u(),v("td",an,[s("button",{class:"delete-od-row",onClick:O=>T(k),disabled:q.value.has(_.value[k]),title:"Delete row"},[b(N,null,{default:$(()=>t[11]||(t[11]=[U("mdi-delete")])),_:1})],8,nn)])):W.value===Q.MEASURE?(u(),v("td",ln)):G("",!0)],2))),128)),W.value===Q.MEASURE?(u(),v("tr",on,[s("td",null,[s("button",{class:"add-od-probe-table",onClick:fe},[b(N,null,{default:$(()=>t[12]||(t[12]=[U("mdi-plus")])),_:1}),t[13]||(t[13]=U(" Add "))])]),(u(),v(Z,null,le(i,S=>s("td",{key:"add-row-"+S})),64)),t[14]||(t[14]=s("td",null,null,-1))])):G("",!0)])])]),s("div",sn,[s("table",rn,[s("tbody",null,[s("tr",un,[t[15]||(t[15]=s("th",{class:"scaling-factor-label"},"Scaling Factor",-1)),(u(!0),v(Z,null,le(m.value,(S,k)=>(u(),v("th",{key:"sf-head-"+k,class:"scaling-factor-cell",title:Se().tooltip},[C.value?_e((u(),v("input",{key:0,type:"number",step:"0.01",min:"0.1","onUpdate:modelValue":O=>m.value[k]=O,style:{width:"60px","text-align":"center",background:"#23272e",color:"#90caf9",border:"1px solid #444","border-radius":"4px"}},null,8,dn)),[[ye,m.value[k],void 0,{number:!0}]]):(u(),v("div",{key:1,class:X(["scaling-factor-value",{editable:$e(k+1),"non-editable":!$e(k+1)}]),onDblclick:O=>at(k+1),title:tt(k+1)},[D.value===k+1?_e((u(),v("input",{key:0,"onUpdate:modelValue":t[1]||(t[1]=O=>p.value=O),onBlur:O=>xe(k+1),onKeyup:[me(O=>xe(k+1),["enter"]),me(nt,["esc"])],type:"number",step:"0.01",min:"0.1",class:"scaling-factor-input",ref_for:!0,ref:"scalingFactorInput"},null,40,pn)),[[ye,p.value,void 0,{number:!0}]]):(u(),v("span",fn,[U(z(typeof S=="number"?S.toFixed(2):S)+" ",1),b(N,{color:Se().color,size:"small",style:{"margin-left":"4px"}},{default:$(()=>[U(z(Se(S,k+1).icon),1)]),_:2},1032,["color"])]))],42,vn))],8,cn))),128)),W.value===Q.MEASURE?(u(),v("th",mn)):G("",!0)])])])]),x.value?(u(),v("div",gn,[(u(),v(Z,null,le(i,S=>b($a,{partId:S,key:S},null,8,["partId"])),64))])):G("",!0)])):G("",!0),E.value?(u(),se(Ea,{key:1,onClose:L})):G("",!0)],64)}}},_n=ie(bn,[["__scopeId","data-v-6b75e0ac"]]);const Me=de(),{leds:yn}=ce(Me);pe(()=>{yn.value||Me.fetchDeviceData()});const hn={name:"SetLEDColor",data(){return{vials:[1,2,3,4,5,6,7],ledColors:{1:{red:0,green:0,blue:0,color:"#000000"},2:{red:0,green:0,blue:0,color:"#000000"},3:{red:0,green:0,blue:0,color:"#000000"},4:{red:0,green:0,blue:0,color:"#000000"},5:{red:0,green:0,blue:0,color:"#000000"},6:{red:0,green:0,blue:0,color:"#000000"},7:{red:0,green:0,blue:0,color:"#000000"}}}},methods:{async setLEDColor(f,a){if(a.shiftKey){const{red:e,green:w,blue:g}=this.ledColors[f];for(const i of this.vials)this.ledColors[i].red=e,this.ledColors[i].green=w,this.ledColors[i].blue=g,this.ledColors[i].color=this.ledColors[f].color,await this.setIndividualLEDColor(i)}else await this.setIndividualLEDColor(f)},async setIndividualLEDColor(f){const{red:a,green:e,blue:w}=this.ledColors[f];try{console.log("Setting color for vial",f,"to",a,e,w),await Me.setLedColor(f,a,e,w)}catch(g){console.error(`Failed to set color for vial ${f}:`,g),alert(`Error setting color for vial ${f}`)}},updateColor(f){const a=this.ledColors[f].color,{r:e,g:w,b:g}=this.hexToRgb(a);this.ledColors[f].red=e/255,this.ledColors[f].green=w/255,this.ledColors[f].blue=g/255},hexToRgb(f){const a=parseInt(f.slice(1),16);return{r:a>>16&255,g:a>>8&255,b:a&255}}}},Cn={class:"rgb-control-container"},kn={class:"color-selector"},Dn=["onUpdate:modelValue","onInput"],wn=["onClick"];function Sn(f,a,e,w,g,i){return u(),v("div",Cn,[(u(!0),v(Z,null,le(g.vials,C=>(u(),v("div",{class:"vial-container",key:C},[s("div",kn,[s("label",null,z("Vial "+C),1),_e(s("input",{type:"color","onUpdate:modelValue":x=>g.ledColors[C].color=x,onInput:x=>i.updateColor(C)},null,40,Dn),[[ye,g.ledColors[C].color]])]),s("button",{class:"set-color-button",onClick:x=>i.setLEDColor(C,x)},"Set",8,wn)]))),128))])}const $n=ie(hn,[["render",Sn],["__scopeId","data-v-0f12a494"]]);const xn={class:"device-configs"},On={class:"config-actions"},Vn={key:0,class:"error-message"},En={key:1,class:"config-list mt-4"},In={key:0},Pn={key:1,class:"text-muted"},Mn={__name:"DeviceConfigs",setup(f){const a=de(),{openDialog:e}=Pe(),w=I([]),g=I(""),i=I(!1),C=I(null),x=I(null);async function E(){g.value="",i.value=!0;try{const h=await a.listDeviceConfigs();w.value=(h||[]).sort((d,_)=>_.localeCompare(d))}catch{g.value="Failed to list device configs."}finally{i.value=!1}}async function P(h){g.value="",C.value=h;try{await a.loadDeviceConfig(h)}catch{g.value="Failed to load device config."}finally{C.value=null}}const o=async()=>{g.value="";try{await a.saveCalibrationToBackend(),te.success("Calibration checkpoint saved!")}catch{g.value="Failed to save device configs."}};function r(h){x.value=h,e({title:"Load checkpoint?",message:"Replace default config with checkpoint?"}).then(async d=>{d&&(await P(x.value),x.value=null)})}return(h,d)=>{const _=B("v-icon"),y=B("v-btn"),q=B("v-list-item"),j=B("v-list");return u(),v("div",xn,[s("div",On,[b(y,{color:"success",onClick:o},{default:$(()=>[b(_,{left:""},{default:$(()=>d[0]||(d[0]=[U("mdi-content-save")])),_:1}),d[1]||(d[1]=U(" Save Calibration "))]),_:1}),b(y,{color:"primary",onClick:E,loading:i.value,class:"mr-2"},{default:$(()=>[b(_,{left:""},{default:$(()=>d[2]||(d[2]=[U("mdi-folder-open")])),_:1}),d[3]||(d[3]=U(" Load Calibration Checkpoints "))]),_:1},8,["loading"])]),g.value?(u(),v("div",Vn,z(g.value),1)):G("",!0),w.value.length>0||i.value?(u(),v("div",En,[d[6]||(d[6]=s("h3",{class:"text-h6 mb-2"},"Available Device Calibration Checkpoints",-1)),w.value.length>0?(u(),v("div",In,[b(j,null,{default:$(()=>[(u(!0),v(Z,null,le(w.value,m=>(u(),se(q,{key:m,onClick:D=>r(m),class:X({"config-item":!0,loading:C.value===m})},{default:$(()=>[b(_,{left:""},{default:$(()=>d[4]||(d[4]=[U("mdi-file-document")])),_:1}),U(" "+z(m)+" ",1),C.value===m?(u(),se(_,{key:0,right:""},{default:$(()=>d[5]||(d[5]=[U("mdi-loading")])),_:1})):G("",!0)]),_:2},1032,["onClick","class"]))),128))]),_:1})])):i.value?G("",!0):(u(),v("div",Pn,' Click "Refresh Configs" to load. '))])):G("",!0)])}}},Fn=ie(Mn,[["__scopeId","data-v-ecd4ed1d"]]);const An={key:0,class:"experiment-running-overlay"},Rn={key:1,class:"experiment-running-overlay"},Tn={class:"overlay-content"},Un={class:"warning-message"},Ln={class:"calibration-switch-row"},Nn={key:3},Bn={__name:"DeviceControl",setup(f){const a=de(),e=ut(),{deviceConnected:w,deviceControlEnabled:g,calibrationModeEnabled:i,stirrers:C,pumps:x,valves:E,ods:P}=ce(a),{currentExperiment:o}=ce(e),r=I(!1),h=Y(()=>g.value),d=Y({get:()=>i.value,set:m=>a.setCalibrationModeEnabled(m)}),_=Y(()=>{var m;return((m=o.value)==null?void 0:m.status)==="running"}),{openDialog:y}=Pe();function q(){r.value=!0,te.warning("Device control bypass enabled. Use caution during running experiment.",{autoClose:5e3})}async function j(){console.log("onReconnectClick"),await y({title:"Reconnect Device?",message:"Are you sure you want to reconnect the device?"})?(te.success("Reconnecting device..."),a.connectDevice()):te.error("Reconnect cancelled")}return pe(()=>{a.fetchDeviceData(),e.fetchCurrentExperiment()}),(m,D)=>{const p=B("v-icon"),l=B("v-btn"),F=B("v-switch");return u(),v("div",{class:X(["DeviceControl",{"device-disconnected":V(w)===!1,"experiment-running-bg":_.value}])},[V(g)===!1?(u(),v("div",An)):G("",!0),_.value&&!r.value?(u(),v("div",Rn,[s("div",Tn,[s("div",Un,[b(p,{color:"white",size:"48"},{default:$(()=>D[1]||(D[1]=[U("mdi-flask")])),_:1}),D[2]||(D[2]=s("h2",null,"Experiment Running",-1)),D[3]||(D[3]=s("p",null,"Device controls are locked during experiment",-1))]),b(l,{class:"bypass-button",color:"error",size:"large",onClick:q},{default:$(()=>[b(p,{left:""},{default:$(()=>D[4]||(D[4]=[U("mdi-close")])),_:1}),D[5]||(D[5]=U(" Bypass "))]),_:1})])])):G("",!0),s("div",Ln,[V(i)?(u(),se(l,{key:0,class:"reconnect-btn",onClick:j},{default:$(()=>D[6]||(D[6]=[U("Reconnect Device")])),_:1})):G("",!0),b(F,{modelValue:d.value,"onUpdate:modelValue":D[0]||(D[0]=ee=>d.value=ee),label:"Calibration Mode"},null,8,["modelValue"])]),V(g)||h.value||r.value?(u(),v(Z,{key:2},[b(Wt),b(va),b(wa),b(_n),b($n),V(i)?(u(),se(Fn,{key:0})):G("",!0)],64)):(u(),v("p",Nn,"Device Control Disabled"))],2)}}},Wn=ie(Bn,[["__scopeId","data-v-f514329e"]]);export{Wn as default};
