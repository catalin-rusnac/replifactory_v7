import{x as vt,C as bt,z as lt,D as Lt,g as V,h as X,E as Et,B as ft,G as st,H as Tt,I as gt,_ as z,s as W,c as K,o as i,a as v,b as n,F as L,d as R,t as M,n as j,J as tt,K as et,e as J,p as $,f as T,L as ut,r as q,j as N,i as U,k as E,M as Rt,l as _t,m as Y,w as ct,N as mt}from"./index-150254ab.js";import{C as ot,B as Bt,S as Ut,a as jt,b as ht,L as yt,p as Ct,c as kt,d as wt,u as G,e as qt,P as Kt}from"./chart-b4408321.js";/* empty css              */const xt={data:{type:Object,required:!0},options:{type:Object,default:()=>({})},plugins:{type:Array,default:()=>[]},datasetIdKey:{type:String,default:"label"},updateMode:{type:String,default:void 0}},Ht={ariaLabel:{type:String},ariaDescribedby:{type:String}},zt={type:{type:String,required:!0},destroyDelay:{type:Number,default:0},...xt,...Ht},Gt=Lt[0]==="2"?(l,o)=>Object.assign(l,{attrs:o}):(l,o)=>Object.assign(l,o);function Q(l){return gt(l)?st(l):l}function Jt(l){let o=arguments.length>1&&arguments[1]!==void 0?arguments[1]:l;return gt(o)?new Proxy(l,{}):l}function Wt(l,o){const e=l.options;e&&o&&Object.assign(e,o)}function Dt(l,o){l.labels=o}function $t(l,o,e){const C=[];l.datasets=o.map(d=>{const g=l.datasets.find(k=>k[e]===d[e]);return!g||!d.data||C.includes(g)?{...d}:(C.push(g),Object.assign(g,d),g)})}function Zt(l,o){const e={labels:[],datasets:[]};return Dt(e,l.labels),$t(e,l.datasets,o),e}const Qt=vt({props:zt,setup(l,o){let{expose:e,slots:C}=o;const d=V(null),g=bt(null);e({chart:g});const k=()=>{if(!d.value)return;const{type:h,data:b,options:m,plugins:x,datasetIdKey:a}=l,r=Zt(b,a),y=Jt(r,b);g.value=new ot(d.value,{type:h,data:y,options:{...m},plugins:x})},_=()=>{const h=st(g.value);h&&(l.destroyDelay>0?setTimeout(()=>{h.destroy(),g.value=null},l.destroyDelay):(h.destroy(),g.value=null))},O=h=>{h.update(l.updateMode)};return X(k),Et(_),ft([()=>l.options,()=>l.data],(h,b)=>{let[m,x]=h,[a,r]=b;const y=st(g.value);if(!y)return;let p=!1;if(m){const c=Q(m),w=Q(a);c&&c!==w&&(Wt(y,c),p=!0)}if(x){const c=Q(x.labels),w=Q(r.labels),P=Q(x.datasets),A=Q(r.datasets);c!==w&&(Dt(y.config.data,c),p=!0),P&&P!==A&&($t(y.config.data,P,l.datasetIdKey),p=!0)}p&&Tt(()=>{O(y)})},{deep:!0}),()=>lt("canvas",{role:"img",ariaLabel:l.ariaLabel,ariaDescribedby:l.ariaDescribedby,ref:d},[lt("p",{},[C.default?C.default():""])])}});function St(l,o){return ot.register(o),vt({props:xt,setup(e,C){let{expose:d}=C;const g=bt(null),k=_=>{g.value=_==null?void 0:_.chart};return d({chart:g}),()=>lt(Qt,Gt({ref:k},{type:l,...e}))}})}const Xt=St("bar",Bt),Yt=St("scatter",Ut);const te={class:"pump-data"},ee={class:"iteration-rotation-wrapper"},ne={class:"iteration"},oe={class:"rotation"},ae=["onClick"],le={key:0},se={key:1},ie=["onUpdate:modelValue","onChange"],re={class:"chart-container"},ue={key:0,class:"calibration-section"},ce={__name:"PumpCalibration",props:{pumpId:{type:Number,required:!0}},setup(l){ot.register(jt,ht,yt,Ct,kt,wt);const o=l,e=G(),{calibrationModeEnabled:C,pumps:d,valves:g}=W(e),k=V({datasets:[{data:[]}]}),_=V({responsive:!0,devicePixelRatio:4,maintainAspectRatio:!1,plugins:{legend:{display:!1}},backgroundColor:"rgba(0, 140, 186, 0.3)",layout:{padding:{top:20}},scales:{x:{title:{display:!0,text:"rotations"}},y:{title:{display:!0,text:"mL / rotation"},beginAtZero:!1,suggestedMin:.1,suggestedMax:.22}}}),O=V({}),h=V([{rotations:1,iterations:50,total_ml:NaN},{rotations:5,iterations:10,total_ml:NaN},{rotations:10,iterations:5,total_ml:NaN},{rotations:50,iterations:1,total_ml:NaN}]),b=K(()=>{var c,w;return((w=(c=d.value)==null?void 0:c.calibration)==null?void 0:w[o.pumpId])||{}});function m(){return{labels:Object.keys(b.value),datasets:[{label:null,data:Object.values(b.value),fill:!1,borderColor:"rgb(75, 192, 192)",tension:.1}]}}function x(){k.value=m()}function a(c){if(!Object.values(g.value.states).some(P=>P==="open")){alert("At least one valve must be open to start the pump");return}O.value[c]=!O.value[c],O.value[c]?p(h.value[c]):e.setPartStateAction({devicePart:"pumps",partIndex:o.pumpId,newState:"stopped"})}function r(c){O.value[c]=!1}function y(c){c.total_ml&&(e.setPartCalibrationAction({devicePart:"pumps",partIndex:o.pumpId,newCalibration:{...b.value,[c.rotations]:c.total_ml/c.rotations/c.iterations}}),O.value[c]=!1)}function p(c){alert(`Pumping ${c.rotations} rotations ${c.iterations} times. Please blank the scale`),e.startPumpCalibrationSequence({pumpId:o.pumpId,rotations:c.rotations,iterations:c.iterations}).then(()=>{r(c);const w=parseFloat(prompt("Enter total mL pumped"));isNaN(w)||(c.total_ml=w,y(c))})}return X(()=>{b.value&&x(),h.value.forEach(c=>{c.total_ml=(b.value[c.rotations]||0)*c.rotations*c.iterations,c.total_ml=c.total_ml?c.total_ml.toFixed(2):""})}),ft(b,()=>{x()},{deep:!0}),(c,w)=>(i(),v("div",te,[n("table",null,[w[1]||(w[1]=n("thead",null,[n("tr",null,[n("th",null,"Calibration Sequence"),n("th"),n("th",null,"Volume (mL)")])],-1)),n("tbody",null,[(i(!0),v(L,null,R(h.value,(P,A)=>(i(),v("tr",{key:A},[n("td",null,[n("div",ee,[n("div",ne,M(P.iterations),1),w[0]||(w[0]=n("div",{class:"multiplier"},"x",-1)),n("div",oe,M(P.rotations)+" rots",1)])]),n("td",null,[n("button",{onClick:f=>a(A),class:j([O.value[A]?"stop-button":"",O.value[A]===!1&&h.value[A].total_ml?"restart-button":""])},[O.value[A]?(i(),v("span",le,"Stop")):(i(),v("span",se,"Start"))],10,ae)]),n("td",null,[tt(n("input",{"onUpdate:modelValue":f=>P.total_ml=f,onChange:f=>y(P),type:"float"},null,40,ie),[[et,P.total_ml]])])]))),128))])]),n("div",re,[k.value.datasets[0].data.length>0?(i(),J($(Xt),{key:0,id:"pump-calibration-chart",options:_.value,class:"pump-calibration-chart",data:k.value},null,8,["options","data"])):T("",!0)]),$(C)?(i(),v("div",ue)):T("",!0)]))}},de=z(ce,[["__scopeId","data-v-6558f4be"]]);const pe={key:0,class:"pump-controls"},ve={key:1},be={class:"pump-input"},fe={key:1},ge={__name:"PumpControl",setup(l){const o=G(),{pumps:e,valves:C,calibrationModeEnabled:d}=W(o),g={1:"MAIN",2:"DRUG",3:"MISSING!!!",4:"WASTE"},k=ut({1:null,2:null,3:null,4:null}),_=ut({1:null,2:null,3:null,4:null});X(()=>{e.value||o.fetchDeviceData()});async function O(a){if(e.value.states[a]==="running"){await o.setPartStateAction({devicePart:"pumps",partIndex:a,newState:"stopped"});return}if(!Object.values(C.value.states).some(p=>p==="open")){alert("At least one valve must be open to start the pump");return}const y=parseFloat(_[a]);if(!y){alert("Please set the volume before starting the pump");return}try{await o.setPartStateAction({devicePart:"pumps",partIndex:a,newState:"running",input:{volume:y}})}catch(p){console.error(p)}finally{await o.setPartStateAction({devicePart:"pumps",partIndex:a,newState:"stopped"})}}function h(a,r){_[r]=a;const y=parseFloat(_[r]);isNaN(y)?k[r]="":k[r]=m(y,r).toFixed(2)}function b(a,r){k[r]=a;const y=parseFloat(k[r]);isNaN(y)?_[r]="":_[r]=x(y,r)}function m(a,r){const y=e.value.calibration[r],p=Object.entries(y).map(([B,Z])=>[parseInt(B),Z]).sort((B,Z)=>B[0]-Z[0]);if(a>=p[p.length-1][0]*p[p.length-1][1])return a/p[p.length-1][1];let c=p[0],w=p[p.length-1];for(let B=0;B<p.length-1;B++)if(a>=p[B][0]*p[B][1]&&a<=p[B+1][0]*p[B+1][1]){c=p[B],w=p[B+1];break}const P=c[0]*c[1],A=w[0]*w[1],f=(a-P)/(A-P),I=c[1]+(w[1]-c[1])*f;return a/I}function x(a,r){const y=e.value.calibration[r],p=Object.entries(y).map(([f,I])=>[parseInt(f),I]).sort((f,I)=>f[0]-I[0]);if(a>=p[p.length-1][0])return(a*p[p.length-1][1]).toFixed(2);let c=p[0],w=p[p.length-1];for(let f=0;f<p.length-1;f++)if(a>=p[f][0]&&a<=p[f+1][0]){c=p[f],w=p[f+1];break}const P=(a-c[0])/(w[0]-c[0]),A=c[1]+(w[1]-c[1])*P;return(a*A).toFixed(2)}return(a,r)=>{const y=q("v-progress-circular"),p=q("v-btn"),c=q("v-text-field");return $(e)&&$(e).states?(i(),v("div",pe,[(i(),v(L,null,R([1,2,4],w=>n("div",{class:"pump",key:w},[N(p,{class:j(["pump-button",{"stop-button":$(e).states[w]==="running"}]),onClick:P=>O(w)},{default:U(()=>[$(e).states[w]==="running"?(i(),J(y,{key:0,indeterminate:"",color:"white",class:"spinner-custom"})):(i(),v("span",ve,[E(M(g[w]),1),r[0]||(r[0]=n("br",null,null,-1)),r[1]||(r[1]=E("pump"))]))]),_:2},1032,["class","onClick"]),n("div",be,[N(c,{label:"Volume (mL)",type:"number",dense:"",modelValue:_[w],"onUpdate:modelValue":[P=>_[w]=P,P=>h(P,w)]},null,8,["modelValue","onUpdate:modelValue"]),$(d)?(i(),J(c,{key:0,label:"Rotations",type:"number",dense:"",modelValue:k[w],"onUpdate:modelValue":[P=>k[w]=P,P=>b(P,w)]},null,8,["modelValue","onUpdate:modelValue"])):T("",!0),$(d)?(i(),J(de,{key:1,pumpId:w},null,8,["pumpId"])):T("",!0)])])),64))])):(i(),v("div",fe," Loading pump data... "))}}},_e=z(ge,[["__scopeId","data-v-dc27ed63"]]);const me={class:"valve-controls"},he=["onClick","disabled"],ye={key:0,class:"spinner-border spinner-custom",role:"status"},Ce={key:1},ke={__name:"ValveControl",setup(l){const o=G(),{valves:e}=W(o),C=V({}),d=new(window.AudioContext||window.webkitAudioContext);function g(_){const O=_==="open"?500:300,h=_==="open"?300:500,b=d.createOscillator();b.type="sine";const m=d.createGain();return m.gain.setValueAtTime(.1,d.currentTime),b.connect(m),m.connect(d.destination),b.frequency.setValueAtTime(O,d.currentTime),b.frequency.linearRampToValueAtTime(h,d.currentTime+.3),b.start(),b.stop(d.currentTime+.3),b}async function k(_){const O=e.value.states[_];if(C.value[_])return;C.value={...C.value,[_]:!0};const h=g(O);try{await o.setPartStateAction({devicePart:"valves",partIndex:_,newState:O==="open"?"closed":"open"}),h.stop()}catch(b){console.error(b)}finally{C.value={...C.value,[_]:!1}}}return(_,O)=>(i(),v("div",me,[(i(),v(L,null,R(7,h=>n("button",{class:j(["btn",{"btn-danger":$(e).states[h]==="closed"&&!C.value[h],"btn-success":$(e).states[h]==="open"&&!C.value[h],"btn-warning":C.value[h]}]),key:h,onClick:b=>k(h),disabled:C.value[h]},[C.value[h]?(i(),v("div",ye)):(i(),v("span",Ce,"Valve "+M(h),1))],10,he)),64))]))}},we=z(ke,[["__scopeId","data-v-9591560c"]]);const xe={class:"elements-container"},De={class:"stirrer-name"},$e={key:0},Se={style:{position:"relative",display:"inline-block"}},Ie={style:{position:"relative",display:"inline-block"}},Oe={class:"buttons-container"},dt=0,pt=1,Pe={__name:"StirrerCalibration",props:{stirrerId:{type:Number,required:!0}},setup(l){const o=l,e=V(null),C=V(null),d=V(null),g=new(window.AudioContext||window.webkitAudioContext);let k=null,_=null,O=null;const h=G(),{calibrationModeEnabled:b,stirrers:m}=W(h),x=K(()=>m.value&&m.value.states?m.value.states[o.stirrerId]:void 0);function a(A){h.setPartStateAction({devicePart:"stirrers",partIndex:o.stirrerId,newState:A})}function r(A){if(m.value&&m.value.states)for(let f=1;f<=7;f++)m.value.states[f]=A;h.setAllStirrersStateAction&&h.setAllStirrersStateAction(A)}function y(A,f){c(f.target.value)}function p(A,f){!m.value||!m.value.calibration||!m.value.calibration[o.stirrerId]||h.setPartCalibrationAction({devicePart:"stirrers",partIndex:o.stirrerId,newCalibration:{low:m.value.calibration[o.stirrerId].low,high:m.value.calibration[o.stirrerId].high}}).catch(I=>{console.error("Error updating stirrer calibration:",I)})}function c(A){k||(k=g.createOscillator(),_=g.createGain(),k.type="sine",_.gain.setValueAtTime(.1,g.currentTime),k.connect(_),_.connect(g.destination),k.start());const f=300+A*500;k.frequency.setValueAtTime(f,g.currentTime),O&&clearTimeout(O),O=setTimeout(w,200)}function w(){k&&(_.gain.exponentialRampToValueAtTime(.001,g.currentTime+.01),_.gain.setValueAtTime(.1,g.currentTime+.02),k.stop(g.currentTime+.02),k=null,_=null)}function P(A,f){(A==="high"&&x.value!=="high"||A==="low"&&x.value!=="low")&&(f.preventDefault(),_t("Enable stirrer to adjust speed",{type:"info"}))}return X(()=>{window.addEventListener("resize",()=>{})}),Rt(()=>{window.removeEventListener("resize",()=>{})}),(A,f)=>(i(),v("div",{class:"stirrer-calibrator",ref_key:"container",ref:e},[n("div",xe,[n("div",De,[n("header",null,"Stirrer "+M(l.stirrerId),1)]),$(b)&&$(m)&&$(m).calibration&&$(m).calibration[l.stirrerId]?(i(),v("div",$e,[n("div",Se,[tt(n("input",{type:"range",class:j(["slider slider-high",[{active:x.value==="high"},{"slider-disabled":x.value!=="high"}]]),min:dt,max:pt,step:.01,"onUpdate:modelValue":f[0]||(f[0]=I=>$(m).calibration[l.stirrerId].high=I),onInput:f[1]||(f[1]=I=>y("high",I)),onChange:f[2]||(f[2]=I=>p())},null,34),[[et,$(m).calibration[l.stirrerId].high,void 0,{number:!0}]]),x.value!=="high"?(i(),v("div",{key:0,class:"slider-overlay",onClick:f[3]||(f[3]=I=>P("high",I))})):T("",!0)]),n("div",Ie,[tt(n("input",{type:"range",class:j(["slider slider-low",[{active:x.value==="low"},{"slider-disabled":x.value!=="low"}]]),min:dt,max:pt,step:.01,"onUpdate:modelValue":f[4]||(f[4]=I=>$(m).calibration[l.stirrerId].low=I),onInput:f[5]||(f[5]=I=>y("low",I)),onChange:f[6]||(f[6]=I=>p())},null,34),[[et,$(m).calibration[l.stirrerId].low,void 0,{number:!0}]]),x.value!=="low"?(i(),v("div",{key:0,class:"slider-overlay",onClick:f[7]||(f[7]=I=>P("low",I))})):T("",!0)])])):T("",!0),n("div",Oe,[n("button",{class:j(["button button-high",{active:x.value==="high"}]),ref_key:"buttonHigh",ref:C,onClick:f[8]||(f[8]=I=>a("high")),onDblclick:f[9]||(f[9]=I=>r("high"))},"High",34),n("button",{class:j(["button button-low",{active:x.value==="low"}]),ref_key:"buttonLow",ref:d,onClick:f[10]||(f[10]=I=>a("low")),onDblclick:f[11]||(f[11]=I=>r("low"))},"Low",34),n("button",{class:j(["button button-off",{active:x.value==="stopped"}]),ref:"buttonOff",onClick:f[12]||(f[12]=I=>a("stopped")),onDblclick:f[13]||(f[13]=I=>r("stopped"))},"OFF",34)])])],512))}},Ae=z(Pe,[["__scopeId","data-v-d01f6391"]]);const Fe={name:"StirrerControl",components:{StirrerCalibration:Ae}},Ve={class:"stirrer-controls"};function Me(l,o,e,C,d,g){const k=q("StirrerCalibration");return i(),v("div",Ve,[(i(),v(L,null,R(7,_=>N(k,{key:_,stirrerId:_},null,8,["stirrerId"])),64))])}const Ne=z(Fe,[["render",Me],["__scopeId","data-v-6cada7fd"]]),Le={className:"single-chart-container"},Ee={__name:"ODChart",props:{partId:{type:Number,required:!0}},setup(l){ot.register(Ct,kt,wt,qt,ht,yt,Kt);const o=l,e=G(),{ods:C}=W(e),d=K(()=>{var b,m;return(m=(b=C.value)==null?void 0:b.calibration)==null?void 0:m[o.partId]}),g=K(()=>{var b,m;return(m=(b=C.value)==null?void 0:b.calibration_coefs)==null?void 0:m[o.partId]}),k=K(()=>{var b,m,x,a;return{od:(m=(b=C.value)==null?void 0:b.states)==null?void 0:m[o.partId],signal:(a=(x=C.value)==null?void 0:x.odsignals)==null?void 0:a[o.partId]}});function _(b,m,x,a,r,y){return r+(m-r)/Math.pow(1+Math.pow(b/a,x),y)}const O=K(()=>{if(d.value&&typeof d.value=="object"&&g.value){const b=Object.entries(d.value).map(([r,y])=>({x:Number(y),y:Number(r)})).sort((r,y)=>r.x-y.x),m=Math.min(...b.map(r=>r.x)),x=Math.max(...b.map(r=>r.x)),a=[];for(let r=m;r<=x;r+=.1){const y=_(r,...g.value);a.push({x:r,y})}return{datasets:[{label:`Vial ${o.partId} Calibration OD`,data:b,borderColor:"#607ecb",backgroundColor:"rgba(83,158,255,0.64)"},{label:`Vial ${o.partId} Current OD`,data:[{x:k.value.signal,y:k.value.od}],pointRadius:5,backgroundColor:"rgba(255,1,60,0.64)"},{label:`Vial ${o.partId} Fit`,data:a,pointRadius:0,borderColor:"rgba(0,70,220,0.38)",borderWidth:2,showLine:!0,fill:!1,borderDash:[2,2]}]}}return{}}),h=K(()=>({devicePixelRatio:4,responsive:!0,maintainAspectRatio:!1,plugins:{legend:{display:!1},title:{display:!0,text:`Vial ${o.partId}`}},scales:{x:{title:{display:!0,text:"Signal (mV)"},suggestedMin:0},y:{title:{display:!0,text:"OD"},suggestedMax:1.5,suggestedMin:0}}}));return(b,m)=>(i(),v("div",Le,[N($(Yt),{data:O.value,options:h.value},null,8,["data","options"])]))}};const Te={class:"od-control-container"},Re=["onClick"],Be={key:0,class:"od-output-value"},Ue={key:1,class:"signal-output-value"},je={key:0,class:"calibration-section"},qe={class:"probe-table-outer-container",style:{"margin-bottom":"18px"}},Ke={class:"state-table-container"},He={class:"state-table"},ze={class:"state-row-label"},Ge=["disabled"],Je={key:0},We={key:1},Ze={class:"signal-value-text"},Qe={class:"table-controls"},Xe={class:"calibration-table"},Ye=["value","onInput","onBlur","onKeyup"],tn=["value","onChange"],en=["value","onInput","onBlur","onKeyup"],nn={key:0,class:"signal-value"},on={key:1},an={class:"table-controls bottom-controls"},ln=["disabled"],sn={key:0},rn={key:1},un={class:"control-input-group"},cn={key:0,class:"chart-container"},dn={__name:"ODControl",setup(l){const o=G(),{ods:e,calibrationModeEnabled:C}=W(o),d=[1,2,3,4,5,6,7],g=V(!1),k=V(!0),_=V(["a","b","c","d","e","f","g"]),O=V([0,.12,.25,.5,1,1.5,2]),h=V("row"),b=V(0),m=V(!1),x=V(!1),a=V(1.6),r=V({}),y=V({}),p=K(()=>{let u=new Set;if(e.value.calibration)for(let D in e.value.calibration)for(let s in e.value.calibration[D])u.add(s);return Array.from(u).sort((D,s)=>parseFloat(D)-parseFloat(s)).slice(0,7)});async function c(u){await o.measureDevicePart({devicePart:"ods",partIndex:u}),await o.fetchDeviceData()}function w(u,t,D){y.value[t]||(y.value[t]={}),y.value[t][D]=parseFloat(u.target.value)}function P(u,t){if(y.value[u]&&y.value[u][t]!==void 0){e.value.calibration[u]||(e.value.calibration[u]={});const D=y.value[u][t];isNaN(y.value[u][t])&&delete e.value.calibration[u][t],o.updateODCalibrationValueAction({od:t,vial:u,newValue:D}).catch(s=>{console.error(`Error updating calibration for vial ${u}:`,s)}),delete y.value[u][t]}}async function A(){m.value=!0;try{const u={};d.forEach((t,D)=>{u[t]=I(t)}),console.log(u),await o.measureAllODSignalsAction({vial_ods:u}),await o.fetchDeviceData()}catch{}finally{m.value=!1}}function f(u,t){return y.value[u]&&y.value[u][t]!==void 0?y.value[u][t]:e.value.calibration&&e.value.calibration[u]&&e.value.calibration[u][t]!==void 0?e.value.calibration[u][t]:""}function I(u){if(h.value==="diagonal"){const t=(u-1-b.value+p.value.length)%p.value.length;return p.value[t]||"-"}else return p.value[b.value]||"-"}function B(u){if(h.value==="diagonal"){const t=(u-1-b.value+_.value.length)%_.value.length;return _.value[t].toUpperCase()}else return _.value[b.value].toUpperCase()}function Z(u,t){if(!e.value.calibration||!e.value.calibration[u]||e.value.calibration[u][t]===void 0)return{background:""};const D=parseFloat(e.value.calibration[u][t]),s=5,S=40;let F;if(D<=0)F=s;else{const H=Math.log(10),Mt=Math.log(1e3),Nt=(Math.log(Math.max(10,Math.min(1e3,D)))-H)/(Mt-H);F=s+Nt*(S-s)}return{background:`rgba(255, 100, 100, ${F/100})`}}function at(u){if(u==null)return"";const t=parseFloat(u);if(isNaN(t))return"";const D=.02,s=.25,S=Math.max(0,Math.min(4,t)),F=Math.log(S+1)/Math.log(5),H=D+F*(s-D);return`background: linear-gradient(to right, rgba(255, 235, 156, ${H}), rgba(255, 235, 156, ${H*.6}))`}function It(u){const t=I(u);return t==="-"?"-":e.value.calibration&&e.value.calibration[u]&&e.value.calibration[u][t]!==void 0?parseFloat(e.value.calibration[u][t]).toFixed(2)+" mV":"-"}function nt(u,t){const D=p.value.indexOf(u);return D===-1?!1:h.value==="diagonal"?(t-1-b.value+p.value.length)%p.value.length===D:D===b.value}function Ot(){h.value=h.value==="diagonal"?"row":"diagonal"}function Pt(){p.value.length!==0&&(b.value=(b.value+1)%p.value.length)}async function At(){if(!confirm("This will autofill the entire table based on OD0 and the probe OD values. Continue?"))return;this.isAutofilling=!0;const u={};console.log("autofillValues",this.vials,"scalingFactor",this.scalingFactor),this.vials.forEach(t=>{let D=null;this.ods.calibration&&this.ods.calibration[t]&&(this.ods.calibration[t][0]!==void 0?D=parseFloat(this.ods.calibration[t][0]):this.ods.calibration[t]["0.0"]!==void 0?D=parseFloat(this.ods.calibration[t]["0.0"]):this.ods.calibration[t][0]!==void 0&&(D=parseFloat(this.ods.calibration[t][0]))),D===null&&(console.warn(`No OD0 value found for vial ${t}. Using default of 500mV.`),D=500),u[t]={},u[t][0]=D,this.probeOdValues.forEach(s=>{if(parseFloat(s)===0)return;const S=D*Math.pow(10,-parseFloat(s*this.scalingFactor));u[t][s.toString()]=S,console.log(`Autofilled Vial ${t} - OD ${s}: ${S.toFixed(2)}mV (blank: ${D.toFixed(2)}mV, scaling: ${this.scalingFactor})`)}),o.setPartCalibrationAction({devicePart:"ods",partIndex:t,newCalibration:u[t]})}),this.isAutofilling=!1,await o.fetchDeviceData(),this.isAutofilling=!1}function rt(u,t){if(r.value[t]!==void 0){O.value[t]=r.value[t],delete r.value[t];for(let D in e.value.calibration){console.log("changing od value for vial",D,"from",u,"to",O.value[t]),console.log("old_calibration",e.value.calibration[D]);const s=e.value.calibration[D],S=JSON.parse(JSON.stringify(s));delete S[u],S[O.value[t]]=s[u],console.log("new_calibration",S),o.setPartCalibrationAction({devicePart:"ods",partIndex:D,newCalibration:S})}}}function Ft(u,t){console.log("handleProbeValueInput",u.target.value),r.value[t]=parseFloat(u.target.value)}function Vt(u){const t=u.target.files[0];if(!t)return;const D=new FileReader;D.onload=async s=>{try{const S=JSON.parse(s.target.result);if(!S.calibration)throw new Error("Invalid calibration format: missing calibration data");e.value.calibration={...S.calibration},await o.setAllODCalibrationsAction(S.calibration),this.$refs.fileInput.value=""}catch(S){console.error("Error parsing calibration file:",S),alert("Invalid calibration file format: "+S.message)}},D.readAsText(t)}return(u,t)=>{const D=q("v-icon");return i(),v(L,null,[n("div",Te,[(i(!0),v(L,null,R($(e).states,(s,S)=>(i(),v("div",{class:"elements-container",key:S},[n("button",{class:"od-button",onClick:F=>c(S)},[n("span",null,"OD "+M(S),1)],8,Re),$(e).states&&$(e).states[S]!==void 0?(i(),v("span",Be,M(parseFloat($(e).states[S].toFixed(2))),1)):T("",!0),t[3]||(t[3]=n("div",{style:{height:"0.5px"}},null,-1)),$(e).odsignals&&$(e).odsignals[S]!==void 0?(i(),v("span",Ue,"("+M(parseFloat($(e).odsignals[S].toFixed(2)))+"mV)",1)):T("",!0)]))),128))]),$(C)?(i(),v("div",je,[n("div",qe,[t[9]||(t[9]=n("div",{style:{display:"flex","align-items":"center","margin-bottom":"8px"}},null,-1)),n("div",Ke,[n("table",He,[n("thead",null,[n("tr",null,[t[4]||(t[4]=n("th",{class:"state-header-empty"},null,-1)),(i(),v(L,null,R(d,(s,S)=>n("th",{key:"vial-header-"+s,class:"state-vial-header"}," Vial "+M(s),1)),64))])]),n("tbody",null,[n("tr",null,[t[5]||(t[5]=n("th",{class:"state-row-label"},"Probe",-1)),(i(),v(L,null,R(d,(s,S)=>n("td",{key:"probe-"+s,class:"state-probe-cell",style:Y(at(I(s)))},M(B(s)),5)),64))]),n("tr",null,[t[6]||(t[6]=n("th",{class:"state-row-label state-od-label"},"OD Value",-1)),(i(),v(L,null,R(d,(s,S)=>n("td",{key:"od-"+s,class:"state-od-cell",style:Y(at(I(s)))},[n("span",null,M(I(s)),1)],4)),64))]),n("tr",null,[n("th",ze,[n("button",{class:"control-button measure-inline",onClick:A,disabled:m.value},[m.value?(i(),v("span",Je,t[7]||(t[7]=[n("span",{class:"loading-spinner"},null,-1),E(" Measuring... ")]))):(i(),v("span",We,[N(D,null,{default:U(()=>t[8]||(t[8]=[E("mdi-camera-metering-center")])),_:1}),E(" "+M(h.value==="diagonal"?"Remeasure Diagonal "+(b.value+1):"Remeasure OD "+p.value[b.value]),1)]))],8,Ge)]),(i(),v(L,null,R(d,(s,S)=>n("td",{key:"signal-"+s,class:j(["state-signal-cell",{highlighted:nt(I(s),s)}]),style:Y({background:nt(I(s),s)?"rgba(100, 149, 237, 0.15)":Z(s,I(s)).background})},[n("span",Ze,M(It(s)),1)],6)),64))])])])]),n("div",Qe,[n("button",{class:"control-button",onClick:Ot},M(h.value==="diagonal"?"Select Row":"Select Diagonal"),1),n("button",{class:"control-button",onClick:Pt},M(h.value==="diagonal"?"Next Diagonal":"Next Row"),1)])]),t[15]||(t[15]=n("div",{class:"calibration-controls"},null,-1)),n("table",Xe,[n("thead",null,[n("tr",null,[t[10]||(t[10]=n("th",{style:{width:"90px"}},"OD Value",-1)),(i(),v(L,null,R(d,s=>n("th",{key:s,style:{width:"90px"}},"Vial "+M(s),1)),64))])]),n("tbody",null,[(i(!0),v(L,null,R(p.value,(s,S)=>(i(),v("tr",{key:s},[n("td",{style:Y([{width:"90px"},at(s)])},[S<O.value.length?(i(),v("input",{key:0,value:r.value[S]!==void 0?r.value[S]:O.value[S],onInput:F=>Ft(F,S),onBlur:F=>rt(s,S),onKeyup:ct(F=>rt(s,S),["enter"]),type:"number",step:"0.1",class:"property-value",style:{"text-align":"center"}},null,40,Ye)):(i(),v("input",{key:1,value:s,onChange:F=>u.updateODCalibrationKeyAction({oldOD:s,newOD:F.target.value}),type:"number",step:"0.1",class:"property-value",style:{"text-align":"center"}},null,40,tn))],4),(i(),v(L,null,R(d,F=>n("td",{key:F,style:Y([{width:"90px"},{background:nt(s,F)?"rgba(100, 149, 237, 0.15)":Z(F,s).background}]),class:j({"has-data":$(e).calibration&&$(e).calibration[F]&&$(e).calibration[F][s]!==void 0,"diagonal-cell":nt(s,F)})},[g.value?(i(),v("input",{key:0,value:f(F,s),onInput:H=>w(H,F,s),onBlur:H=>P(F,s),onKeyup:ct(H=>P(F,s),["enter"]),type:"number",class:"calibration-signal"},null,40,en)):(i(),v(L,{key:1},[$(e).calibration&&$(e).calibration[F]&&$(e).calibration[F][s]!==void 0?(i(),v("span",nn,M(parseFloat($(e).calibration[F][s]).toFixed(2))+"mV ",1)):(i(),v("span",on))],64))],6)),64))]))),128))])]),n("div",an,[n("button",{class:"control-button",onClick:t[0]||(t[0]=s=>At()),disabled:x.value},[x.value?(i(),v("span",sn,t[11]||(t[11]=[n("span",{class:"loading-spinner"},null,-1),E(" Autofilling... ")]))):(i(),v("span",rn,[N(D,null,{default:U(()=>t[12]||(t[12]=[E("mdi-autorenew")])),_:1}),t[13]||(t[13]=E(" Autofill OD>0 "))]))],8,ln),n("div",un,[t[14]||(t[14]=n("label",{for:"scalingFactor"},"Scaling Factor:",-1)),tt(n("input",{"onUpdate:modelValue":t[1]||(t[1]=s=>a.value=s),type:"number",min:"0.1",step:"0.1",class:"scaling-factor-input"},null,512),[[et,a.value,void 0,{number:!0}]])]),n("button",{class:"control-button mode-toggle",onClick:t[2]||(t[2]=s=>g.value=!g.value)},[N(D,null,{default:U(()=>[E(M(g.value?"mdi-eye":"mdi-pencil"),1)]),_:1}),E(" "+M(g.value?"View Mode":"Edit Mode"),1)])]),k.value?(i(),v("div",cn,[(i(),v(L,null,R(d,s=>N(Ee,{partId:s,key:s},null,8,["partId"])),64))])):T("",!0)])):T("",!0),n("input",{type:"file",ref:"fileInput",style:{display:"none"},accept:".json",onChange:Vt},null,544)],64)}}},pn=z(dn,[["__scopeId","data-v-31433a5c"]]);const it=G(),{leds:vn}=W(it);X(()=>{vn.value||it.fetchDeviceData()});const bn={name:"SetLEDColor",data(){return{vials:[1,2,3,4,5,6,7],ledColors:{1:{red:0,green:0,blue:0,color:"#000000"},2:{red:0,green:0,blue:0,color:"#000000"},3:{red:0,green:0,blue:0,color:"#000000"},4:{red:0,green:0,blue:0,color:"#000000"},5:{red:0,green:0,blue:0,color:"#000000"},6:{red:0,green:0,blue:0,color:"#000000"},7:{red:0,green:0,blue:0,color:"#000000"}}}},methods:{async setLEDColor(l,o){if(o.shiftKey){const{red:e,green:C,blue:d}=this.ledColors[l];for(const g of this.vials)this.ledColors[g].red=e,this.ledColors[g].green=C,this.ledColors[g].blue=d,this.ledColors[g].color=this.ledColors[l].color,await this.setIndividualLEDColor(g)}else await this.setIndividualLEDColor(l)},async setIndividualLEDColor(l){const{red:o,green:e,blue:C}=this.ledColors[l];try{console.log("Setting color for vial",l,"to",o,e,C),await it.setLedColor(l,o,e,C)}catch(d){console.error(`Failed to set color for vial ${l}:`,d),alert(`Error setting color for vial ${l}`)}},updateColor(l){const o=this.ledColors[l].color,{r:e,g:C,b:d}=this.hexToRgb(o);this.ledColors[l].red=e/255,this.ledColors[l].green=C/255,this.ledColors[l].blue=d/255},hexToRgb(l){const o=parseInt(l.slice(1),16);return{r:o>>16&255,g:o>>8&255,b:o&255}}}},fn={class:"rgb-control-container"},gn={class:"color-selector"},_n=["onUpdate:modelValue","onInput"],mn=["onClick"];function hn(l,o,e,C,d,g){return i(),v("div",fn,[(i(!0),v(L,null,R(d.vials,k=>(i(),v("div",{class:"vial-container",key:k},[n("div",gn,[n("label",null,M("Vial "+k),1),tt(n("input",{type:"color","onUpdate:modelValue":_=>d.ledColors[k].color=_,onInput:_=>g.updateColor(k)},null,40,_n),[[et,d.ledColors[k].color]])]),n("button",{class:"set-color-button",onClick:_=>g.setLEDColor(k,_)},"Set",8,mn)]))),128))])}const yn=z(bn,[["render",hn],["__scopeId","data-v-0f12a494"]]);const Cn={class:"device-configs"},kn={class:"config-actions"},wn={key:0,class:"error-message"},xn={key:1,class:"config-list mt-4"},Dn={key:0},$n={key:1,class:"text-muted"},Sn={__name:"DeviceConfigs",setup(l){const o=G(),{openDialog:e}=mt(),C=V([]),d=V(""),g=V(!1),k=V(null),_=V(null);async function O(){d.value="",g.value=!0;try{const x=await o.listDeviceConfigs();C.value=(x||[]).sort((a,r)=>r.localeCompare(a))}catch{d.value="Failed to list device configs."}finally{g.value=!1}}async function h(x){d.value="",k.value=x;try{await o.loadDeviceConfig(x)}catch{d.value="Failed to load device config."}finally{k.value=null}}const b=async()=>{d.value="";try{await o.saveCalibrationToBackend(),_t.success("Calibration checkpoint saved!")}catch{d.value="Failed to save device configs."}};function m(x){_.value=x,e({title:"Save current checkpoint?",message:"Loading new config... Save current checkpoint before loading?",showCancel:!0}).then(async a=>{a==="yes"?(await b(),await h(_.value),_.value=null):(a==="no"&&await h(_.value),_.value=null)})}return(x,a)=>{const r=q("v-icon"),y=q("v-btn"),p=q("v-list-item"),c=q("v-list");return i(),v("div",Cn,[n("div",kn,[N(y,{color:"success",onClick:b},{default:U(()=>[N(r,{left:""},{default:U(()=>a[0]||(a[0]=[E("mdi-content-save")])),_:1}),a[1]||(a[1]=E(" Save Calibration "))]),_:1}),N(y,{color:"primary",onClick:O,loading:g.value,class:"mr-2"},{default:U(()=>[N(r,{left:""},{default:U(()=>a[2]||(a[2]=[E("mdi-folder-open")])),_:1}),a[3]||(a[3]=E(" Load Calibration Checkpoints "))]),_:1},8,["loading"])]),d.value?(i(),v("div",wn,M(d.value),1)):T("",!0),C.value.length>0||g.value?(i(),v("div",xn,[a[6]||(a[6]=n("h3",{class:"text-h6 mb-2"},"Available Device Calibration Checkpoints",-1)),C.value.length>0?(i(),v("div",Dn,[N(c,null,{default:U(()=>[(i(!0),v(L,null,R(C.value,w=>(i(),J(p,{key:w,onClick:P=>m(w),class:j({"config-item":!0,loading:k.value===w})},{default:U(()=>[N(r,{left:""},{default:U(()=>a[4]||(a[4]=[E("mdi-file-document")])),_:1}),E(" "+M(w)+" ",1),k.value===w?(i(),J(r,{key:0,right:""},{default:U(()=>a[5]||(a[5]=[E("mdi-loading")])),_:1})):T("",!0)]),_:2},1032,["onClick","class"]))),128))]),_:1})])):g.value?T("",!0):(i(),v("div",$n,' Click "Refresh Configs" to load. '))])):T("",!0)])}}},In=z(Sn,[["__scopeId","data-v-2bb58555"]]);const On={key:0,class:"experiment-running-overlay"},Pn={class:"calibration-switch-row"},An={key:2},Fn={__name:"DeviceControl",setup(l){const o=G(),{deviceConnected:e,deviceControlEnabled:C,calibrationModeEnabled:d,stirrers:g,pumps:k,valves:_,ods:O}=W(o),h=K(()=>C.value),b=K({get:()=>d.value,set:a=>o.setCalibrationModeEnabled(a)}),{openDialog:m}=mt();async function x(){console.log("onReconnectClick"),await m({title:"Reconnect Device?",message:"Are you sure you want to reconnect the device?",showCancel:!0})==="yes"&&o.connectDevice()}return X(()=>{o.fetchDeviceData()}),(a,r)=>{const y=q("v-btn"),p=q("v-switch");return i(),v("div",{class:j(["DeviceControl",{"device-disconnected":$(e)===!1}])},[$(C)===!1?(i(),v("div",On)):T("",!0),n("div",Pn,[$(d)?(i(),J(y,{key:0,class:"reconnect-btn",onClick:x},{default:U(()=>r[1]||(r[1]=[E("Reconnect Device")])),_:1})):T("",!0),N(p,{modelValue:b.value,"onUpdate:modelValue":r[0]||(r[0]=c=>b.value=c),label:"Calibration Mode"},null,8,["modelValue"])]),$(C)||h.value?(i(),v(L,{key:1},[N(_e),N(we),N(Ne),N(pn),N(yn),$(d)?(i(),J(In,{key:0})):T("",!0)],64)):(i(),v("p",An,"Device Control Disabled"))],2)}}},En=z(Fn,[["__scopeId","data-v-65277608"]]);export{En as default};
