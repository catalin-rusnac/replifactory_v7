import{x as De,C as we,z as ve,D as He,g as M,h as ae,E as Se,B as be,G as pe,H as fe,I as xe,_ as Z,s as Y,c as G,o,a as i,b as l,F as U,d as j,t as N,n as K,J as le,K as se,e as Q,p as h,f as L,L as he,r as W,j as F,i as V,k as T,M as Je,l as te,N as Ze,O as Qe,m as ye,w as ie,P as ge}from"./index-150d25d2.js";import{C as re,B as Xe,S as Ye,a as et,b as $e,L as Oe,p as Ie,c as Pe,d as Ee,u as X,e as tt,P as at}from"./chart-3416cd29.js";/* empty css              */const Ae={data:{type:Object,required:!0},options:{type:Object,default:()=>({})},plugins:{type:Array,default:()=>[]},datasetIdKey:{type:String,default:"label"},updateMode:{type:String,default:void 0}},nt={ariaLabel:{type:String},ariaDescribedby:{type:String}},ot={type:{type:String,required:!0},destroyDelay:{type:Number,default:0},...Ae,...nt},lt=He[0]==="2"?(r,a)=>Object.assign(r,{attrs:a}):(r,a)=>Object.assign(r,a);function ne(r){return xe(r)?pe(r):r}function st(r){let a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:r;return xe(a)?new Proxy(r,{}):r}function it(r,a){const e=r.options;e&&a&&Object.assign(e,a)}function Me(r,a){r.labels=a}function Fe(r,a,e){const _=[];r.datasets=a.map(g=>{const f=r.datasets.find(C=>C[e]===g[e]);return!f||!g.data||_.includes(f)?{...g}:(_.push(f),Object.assign(f,g),f)})}function rt(r,a){const e={labels:[],datasets:[]};return Me(e,r.labels),Fe(e,r.datasets,a),e}const ct=De({props:ot,setup(r,a){let{expose:e,slots:_}=a;const g=M(null),f=we(null);e({chart:f});const C=()=>{if(!g.value)return;const{type:S,data:v,options:c,plugins:k,datasetIdKey:s}=r,p=rt(v,s),$=st(p,v);f.value=new re(g.value,{type:S,data:$,options:{...c},plugins:k})},y=()=>{const S=pe(f.value);S&&(r.destroyDelay>0?setTimeout(()=>{S.destroy(),f.value=null},r.destroyDelay):(S.destroy(),f.value=null))},I=S=>{S.update(r.updateMode)};return ae(C),Se(y),be([()=>r.options,()=>r.data],(S,v)=>{let[c,k]=S,[s,p]=v;const $=pe(f.value);if(!$)return;let m=!1;if(c){const d=ne(c),w=ne(s);d&&d!==w&&(it($,d),m=!0)}if(k){const d=ne(k.labels),w=ne(p.labels),P=ne(k.datasets),A=ne(p.datasets);d!==w&&(Me($.config.data,d),m=!0),P&&P!==A&&(Fe($.config.data,P,r.datasetIdKey),m=!0)}m&&fe(()=>{I($)})},{deep:!0}),()=>ve("canvas",{role:"img",ariaLabel:r.ariaLabel,ariaDescribedby:r.ariaDescribedby,ref:g},[ve("p",{},[_.default?_.default():""])])}});function Le(r,a){return re.register(a),De({props:Ae,setup(e,_){let{expose:g}=_;const f=we(null),C=y=>{f.value=y==null?void 0:y.chart};return g({chart:f}),()=>ve(ct,lt({ref:C},{type:r,...e}))}})}const ut=Le("bar",Xe),dt=Le("scatter",Ye);const vt={class:"pump-data"},pt={class:"iteration-rotation-wrapper"},ft={class:"iteration"},bt={class:"rotation"},gt=["onClick"],mt={key:0},_t={key:1},ht=["onUpdate:modelValue","onChange"],yt={class:"chart-container"},Ct={key:0,class:"calibration-section"},kt={__name:"PumpCalibration",props:{pumpId:{type:Number,required:!0}},setup(r){re.register(et,$e,Oe,Ie,Pe,Ee);const a=r,e=X(),{calibrationModeEnabled:_,pumps:g,valves:f}=Y(e),C=M({datasets:[{data:[]}]}),y=M({responsive:!0,devicePixelRatio:4,maintainAspectRatio:!1,plugins:{legend:{display:!1}},backgroundColor:"rgba(0, 140, 186, 0.3)",layout:{padding:{top:20}},scales:{x:{title:{display:!0,text:"rotations"}},y:{title:{display:!0,text:"mL / rotation"},beginAtZero:!1,suggestedMin:.1,suggestedMax:.22}}}),I=M({}),S=M([{rotations:1,iterations:50,total_ml:NaN},{rotations:5,iterations:10,total_ml:NaN},{rotations:10,iterations:5,total_ml:NaN},{rotations:50,iterations:1,total_ml:NaN}]),v=G(()=>{var d,w;return((w=(d=g.value)==null?void 0:d.calibration)==null?void 0:w[a.pumpId])||{}});function c(){return{labels:Object.keys(v.value),datasets:[{label:null,data:Object.values(v.value),fill:!1,borderColor:"rgb(75, 192, 192)",tension:.1}]}}function k(){C.value=c()}function s(d){if(!Object.values(f.value.states).some(P=>P==="open")){alert("At least one valve must be open to start the pump");return}I.value[d]=!I.value[d],I.value[d]?m(S.value[d]):e.setPartStateAction({devicePart:"pumps",partIndex:a.pumpId,newState:"stopped"})}function p(d){I.value[d]=!1}function $(d){d.total_ml&&(e.setPartCalibrationAction({devicePart:"pumps",partIndex:a.pumpId,newCalibration:{...v.value,[d.rotations]:d.total_ml/d.rotations/d.iterations}}),I.value[d]=!1)}function m(d){alert(`Pumping ${d.rotations} rotations ${d.iterations} times. Please blank the scale`),e.startPumpCalibrationSequence({pumpId:a.pumpId,rotations:d.rotations,iterations:d.iterations}).then(()=>{p(d);const w=parseFloat(prompt("Enter total mL pumped"));isNaN(w)||(d.total_ml=w,$(d))})}return ae(()=>{v.value&&k(),S.value.forEach(d=>{d.total_ml=(v.value[d.rotations]||0)*d.rotations*d.iterations,d.total_ml=d.total_ml?d.total_ml.toFixed(2):""})}),be(v,()=>{k()},{deep:!0}),(d,w)=>(o(),i("div",vt,[l("table",null,[w[1]||(w[1]=l("thead",null,[l("tr",null,[l("th",null,"Calibration Sequence"),l("th"),l("th",null,"Volume (mL)")])],-1)),l("tbody",null,[(o(!0),i(U,null,j(S.value,(P,A)=>(o(),i("tr",{key:A},[l("td",null,[l("div",pt,[l("div",ft,N(P.iterations),1),w[0]||(w[0]=l("div",{class:"multiplier"},"x",-1)),l("div",bt,N(P.rotations)+" rots",1)])]),l("td",null,[l("button",{onClick:b=>s(A),class:K([I.value[A]?"stop-button":"",I.value[A]===!1&&S.value[A].total_ml?"restart-button":""])},[I.value[A]?(o(),i("span",mt,"Stop")):(o(),i("span",_t,"Start"))],10,gt)]),l("td",null,[le(l("input",{"onUpdate:modelValue":b=>P.total_ml=b,onChange:b=>$(P),type:"float"},null,40,ht),[[se,P.total_ml]])])]))),128))])]),l("div",yt,[C.value.datasets[0].data.length>0?(o(),Q(h(ut),{key:0,id:"pump-calibration-chart",options:y.value,class:"pump-calibration-chart",data:C.value},null,8,["options","data"])):L("",!0)]),h(_)?(o(),i("div",Ct)):L("",!0)]))}},Dt=Z(kt,[["__scopeId","data-v-6558f4be"]]);const wt={key:0,class:"pump-controls"},St={key:1},xt={class:"pump-input"},$t={key:1},Ot={__name:"PumpControl",setup(r){const a=X(),{pumps:e,valves:_,calibrationModeEnabled:g}=Y(a),f={1:"MAIN",2:"DRUG",3:"MISSING!!!",4:"WASTE"},C=he({1:null,2:null,3:null,4:null}),y=he({1:null,2:null,3:null,4:null});ae(()=>{e.value||a.fetchDeviceData()});async function I(s){if(e.value.states[s]==="running"){await a.setPartStateAction({devicePart:"pumps",partIndex:s,newState:"stopped"});return}if(!Object.values(_.value.states).some(m=>m==="open")){alert("At least one valve must be open to start the pump");return}const $=parseFloat(y[s]);if(!$){alert("Please set the volume before starting the pump");return}try{await a.setPartStateAction({devicePart:"pumps",partIndex:s,newState:"running",input:{volume:$}})}catch(m){console.error(m)}finally{await a.setPartStateAction({devicePart:"pumps",partIndex:s,newState:"stopped"})}}function S(s,p){y[p]=s;const $=parseFloat(y[p]);isNaN($)?C[p]="":C[p]=c($,p).toFixed(2)}function v(s,p){C[p]=s;const $=parseFloat(C[p]);isNaN($)?y[p]="":y[p]=k($,p)}function c(s,p){const $=e.value.calibration[p],m=Object.entries($).map(([B,ee])=>[parseInt(B),ee]).sort((B,ee)=>B[0]-ee[0]);if(s>=m[m.length-1][0]*m[m.length-1][1])return s/m[m.length-1][1];let d=m[0],w=m[m.length-1];for(let B=0;B<m.length-1;B++)if(s>=m[B][0]*m[B][1]&&s<=m[B+1][0]*m[B+1][1]){d=m[B],w=m[B+1];break}const P=d[0]*d[1],A=w[0]*w[1],b=(s-P)/(A-P),E=d[1]+(w[1]-d[1])*b;return s/E}function k(s,p){const $=e.value.calibration[p],m=Object.entries($).map(([b,E])=>[parseInt(b),E]).sort((b,E)=>b[0]-E[0]);if(s>=m[m.length-1][0])return(s*m[m.length-1][1]).toFixed(2);let d=m[0],w=m[m.length-1];for(let b=0;b<m.length-1;b++)if(s>=m[b][0]&&s<=m[b+1][0]){d=m[b],w=m[b+1];break}const P=(s-d[0])/(w[0]-d[0]),A=d[1]+(w[1]-d[1])*P;return(s*A).toFixed(2)}return(s,p)=>{const $=W("v-progress-circular"),m=W("v-btn"),d=W("v-text-field");return h(e)&&h(e).states?(o(),i("div",wt,[(o(),i(U,null,j([1,2,4],w=>l("div",{class:"pump",key:w},[F(m,{class:K(["pump-button",{"stop-button":h(e).states[w]==="running"}]),onClick:P=>I(w)},{default:V(()=>[h(e).states[w]==="running"?(o(),Q($,{key:0,indeterminate:"",color:"white",class:"spinner-custom"})):(o(),i("span",St,[T(N(f[w]),1),p[0]||(p[0]=l("br",null,null,-1)),p[1]||(p[1]=T("pump"))]))]),_:2},1032,["class","onClick"]),l("div",xt,[F(d,{label:"Volume (mL)",type:"number",dense:"",modelValue:y[w],"onUpdate:modelValue":[P=>y[w]=P,P=>S(P,w)]},null,8,["modelValue","onUpdate:modelValue"]),h(g)?(o(),Q(d,{key:0,label:"Rotations",type:"number",dense:"",modelValue:C[w],"onUpdate:modelValue":[P=>C[w]=P,P=>v(P,w)]},null,8,["modelValue","onUpdate:modelValue"])):L("",!0),h(g)?(o(),Q(Dt,{key:1,pumpId:w},null,8,["pumpId"])):L("",!0)])])),64))])):(o(),i("div",$t," Loading pump data... "))}}},It=Z(Ot,[["__scopeId","data-v-dc27ed63"]]);const Pt={class:"valve-controls"},Et=["onClick","disabled"],At={key:0,class:"spinner-border spinner-custom",role:"status"},Mt={key:1},Ft={__name:"ValveControl",setup(r){const a=X(),{valves:e}=Y(a),_=M({}),g=new(window.AudioContext||window.webkitAudioContext);function f(y){const I=y==="open"?500:300,S=y==="open"?300:500,v=g.createOscillator();v.type="sine";const c=g.createGain();return c.gain.setValueAtTime(.1,g.currentTime),v.connect(c),c.connect(g.destination),v.frequency.setValueAtTime(I,g.currentTime),v.frequency.linearRampToValueAtTime(S,g.currentTime+.3),v.start(),v.stop(g.currentTime+.3),v}async function C(y){const I=e.value.states[y];if(_.value[y])return;_.value={..._.value,[y]:!0};const S=f(I);try{await a.setPartStateAction({devicePart:"valves",partIndex:y,newState:I==="open"?"closed":"open"}),S.stop()}catch(v){console.error(v)}finally{_.value={..._.value,[y]:!1}}}return(y,I)=>(o(),i("div",Pt,[(o(),i(U,null,j(7,S=>l("button",{class:K(["btn",{"btn-danger":h(e).states[S]==="closed"&&!_.value[S],"btn-success":h(e).states[S]==="open"&&!_.value[S],"btn-warning":_.value[S]}]),key:S,onClick:v=>C(S),disabled:_.value[S]},[_.value[S]?(o(),i("div",At)):(o(),i("span",Mt,"Valve "+N(S),1))],10,Et)),64))]))}},Lt=Z(Ft,[["__scopeId","data-v-9591560c"]]);const Tt={class:"elements-container"},Nt={class:"stirrer-name"},Rt={key:0},Vt={style:{position:"relative",display:"inline-block"}},Ut={style:{position:"relative",display:"inline-block"}},Bt={class:"buttons-container"},Ce=0,ke=1,qt={__name:"StirrerCalibration",props:{stirrerId:{type:Number,required:!0}},setup(r){const a=r,e=M(null),_=M(null),g=M(null),f=new(window.AudioContext||window.webkitAudioContext);let C=null,y=null,I=null;const S=X(),{calibrationModeEnabled:v,stirrers:c}=Y(S),k=G(()=>c.value&&c.value.states?c.value.states[a.stirrerId]:void 0);function s(A){S.setPartStateAction({devicePart:"stirrers",partIndex:a.stirrerId,newState:A})}function p(A){if(c.value&&c.value.states)for(let b=1;b<=7;b++)c.value.states[b]=A;S.setAllStirrersStateAction&&S.setAllStirrersStateAction(A)}function $(A,b){d(b.target.value)}function m(A,b){!c.value||!c.value.calibration||!c.value.calibration[a.stirrerId]||S.setPartCalibrationAction({devicePart:"stirrers",partIndex:a.stirrerId,newCalibration:{low:c.value.calibration[a.stirrerId].low,high:c.value.calibration[a.stirrerId].high}}).catch(E=>{console.error("Error updating stirrer calibration:",E)})}function d(A){C||(C=f.createOscillator(),y=f.createGain(),C.type="sine",y.gain.setValueAtTime(.1,f.currentTime),C.connect(y),y.connect(f.destination),C.start());const b=300+A*500;C.frequency.setValueAtTime(b,f.currentTime),I&&clearTimeout(I),I=setTimeout(w,200)}function w(){C&&(y.gain.exponentialRampToValueAtTime(.001,f.currentTime+.01),y.gain.setValueAtTime(.1,f.currentTime+.02),C.stop(f.currentTime+.02),C=null,y=null)}function P(A,b){(A==="high"&&k.value!=="high"||A==="low"&&k.value!=="low")&&(b.preventDefault(),te("Enable stirrer to adjust speed",{type:"info"}))}return ae(()=>{window.addEventListener("resize",()=>{})}),Je(()=>{window.removeEventListener("resize",()=>{})}),(A,b)=>(o(),i("div",{class:"stirrer-calibrator",ref_key:"container",ref:e},[l("div",Tt,[l("div",Nt,[l("header",null,"Stirrer "+N(r.stirrerId),1)]),h(v)&&h(c)&&h(c).calibration&&h(c).calibration[r.stirrerId]?(o(),i("div",Rt,[l("div",Vt,[le(l("input",{type:"range",class:K(["slider slider-high",[{active:k.value==="high"},{"slider-disabled":k.value!=="high"}]]),min:Ce,max:ke,step:.01,"onUpdate:modelValue":b[0]||(b[0]=E=>h(c).calibration[r.stirrerId].high=E),onInput:b[1]||(b[1]=E=>$("high",E)),onChange:b[2]||(b[2]=E=>m())},null,34),[[se,h(c).calibration[r.stirrerId].high,void 0,{number:!0}]]),k.value!=="high"?(o(),i("div",{key:0,class:"slider-overlay",onClick:b[3]||(b[3]=E=>P("high",E))})):L("",!0)]),l("div",Ut,[le(l("input",{type:"range",class:K(["slider slider-low",[{active:k.value==="low"},{"slider-disabled":k.value!=="low"}]]),min:Ce,max:ke,step:.01,"onUpdate:modelValue":b[4]||(b[4]=E=>h(c).calibration[r.stirrerId].low=E),onInput:b[5]||(b[5]=E=>$("low",E)),onChange:b[6]||(b[6]=E=>m())},null,34),[[se,h(c).calibration[r.stirrerId].low,void 0,{number:!0}]]),k.value!=="low"?(o(),i("div",{key:0,class:"slider-overlay",onClick:b[7]||(b[7]=E=>P("low",E))})):L("",!0)])])):L("",!0),l("div",Bt,[l("button",{class:K(["button button-high",{active:k.value==="high"}]),ref_key:"buttonHigh",ref:_,onClick:b[8]||(b[8]=E=>s("high")),onDblclick:b[9]||(b[9]=E=>p("high"))},"High",34),l("button",{class:K(["button button-low",{active:k.value==="low"}]),ref_key:"buttonLow",ref:g,onClick:b[10]||(b[10]=E=>s("low")),onDblclick:b[11]||(b[11]=E=>p("low"))},"Low",34),l("button",{class:K(["button button-off",{active:k.value==="stopped"}]),ref:"buttonOff",onClick:b[12]||(b[12]=E=>s("stopped")),onDblclick:b[13]||(b[13]=E=>p("stopped"))},"OFF",34)])])],512))}},jt=Z(qt,[["__scopeId","data-v-d01f6391"]]);const Gt={name:"StirrerControl",components:{StirrerCalibration:jt}},Kt={class:"stirrer-controls"};function zt(r,a,e,_,g,f){const C=W("StirrerCalibration");return o(),i("div",Kt,[(o(),i(U,null,j(7,y=>F(C,{key:y,stirrerId:y},null,8,["stirrerId"])),64))])}const Wt=Z(Gt,[["render",zt],["__scopeId","data-v-6cada7fd"]]),Ht={className:"single-chart-container"},Jt={__name:"ODChart",props:{partId:{type:Number,required:!0}},setup(r){re.register(Ie,Pe,Ee,tt,$e,Oe,at);const a=r,e=X(),{ods:_}=Y(e),g=G(()=>{var v,c;return(c=(v=_.value)==null?void 0:v.calibration)==null?void 0:c[a.partId]}),f=G(()=>{var v,c;return(c=(v=_.value)==null?void 0:v.calibration_coefs)==null?void 0:c[a.partId]}),C=G(()=>{var v,c,k,s;return{od:(c=(v=_.value)==null?void 0:v.states)==null?void 0:c[a.partId],signal:(s=(k=_.value)==null?void 0:k.odsignals)==null?void 0:s[a.partId]}});function y(v,c,k){return-Math.log10(v/c)*k}const I=G(()=>{if(g.value&&typeof g.value=="object"&&f.value){const v=Object.entries(g.value).filter(([p,$])=>$!==null).map(([p,$])=>({x:Number($),y:Number(p)})).sort((p,$)=>p.x-$.x);let c=Math.min(...v.map(p=>p.x)),k=Math.max(...v.map(p=>p.x));const s=[];c===k&&(c=0,k=50);for(let p=c;p<=k;p+=.1){const $=y(p,...f.value);s.push({x:p,y:$})}return{datasets:[{label:`Vial ${a.partId} Calibration OD`,data:v,borderColor:"#607ecb",backgroundColor:"rgba(83,158,255,0.64)"},{label:`Vial ${a.partId} Current OD`,data:[{x:C.value.signal,y:C.value.od}],pointRadius:5,backgroundColor:"rgba(255,1,60,0.64)"},{label:`Vial ${a.partId} Fit`,data:s,pointRadius:0,borderColor:"rgba(0,70,220,0.38)",borderWidth:2,showLine:!0,fill:!1,borderDash:[2,2]}]}}return{}}),S=G(()=>{var v,c;return{devicePixelRatio:4,responsive:!0,maintainAspectRatio:!1,plugins:{legend:{display:!1},title:{display:!0,text:`Vial ${a.partId}`+(f.value?`
blank: ${(v=f.value[0])==null?void 0:v.toFixed(2)}, scaling: ${(c=f.value[1])==null?void 0:c.toFixed(2)}`:"")}},scales:{x:{title:{display:!0,text:"Signal (mV)"},suggestedMin:0},y:{title:{display:!0,text:"OD"},suggestedMax:1.5,suggestedMin:0}}}});return(v,c)=>(o(),i("div",Ht,[F(h(dt),{data:I.value,options:S.value},null,8,["data","options"])]))}};M({show:!1,title:"",content:"",resolve:null});const Zt={class:"guide-popup"},Qt={class:"guide-header"},Xt={__name:"ODGuide",setup(r){return(a,e)=>{const _=W("v-icon");return o(),i("div",{class:"guide-overlay",onClick:e[1]||(e[1]=Qe(g=>a.$emit("close"),["self"]))},[l("div",Zt,[l("div",Qt,[e[3]||(e[3]=l("span",{class:"guide-title"},"OD Calibration Guide",-1)),l("button",{class:"guide-close",onClick:e[0]||(e[0]=g=>a.$emit("close"))},[F(_,null,{default:V(()=>e[2]||(e[2]=[T("mdi-close")])),_:1})])]),e[4]||(e[4]=Ze('<div class="guide-content" data-v-8d7af6ce><div class="guide-section" data-v-8d7af6ce><b class="section-title" data-v-8d7af6ce>What is Optical Density (OD)?</b><br data-v-8d7af6ce><span class="guide-text" data-v-8d7af6ce> Optical Density (OD) measures how much light is absorbed by a sample. The higher the OD, the more cells or particles are in the solution. </span></div><div class="guide-section" data-v-8d7af6ce><b class="section-title" data-v-8d7af6ce>Beer-Lambert Law and Scaling Factor</b><br data-v-8d7af6ce><span class="guide-text" data-v-8d7af6ce> The Beer-Lambert Law relates OD to the transmitted light signal: </span><br data-v-8d7af6ce><span class="formula" data-v-8d7af6ce> OD = -log₁₀(signal / blank_signal) </span><br data-v-8d7af6ce><span class="guide-text" data-v-8d7af6ce> In our devices, the light path is not a standard 1cm cuvette. The curved shape of the vial and the sensor design affect how light travels through the sample. This is corrected using a scaling factor: </span><br data-v-8d7af6ce><span class="formula" data-v-8d7af6ce> OD = -log₁₀(signal / blank_signal) * scaling </span><br data-v-8d7af6ce></div><div class="guide-section" data-v-8d7af6ce><b class="section-title" data-v-8d7af6ce>Calibration Process</b><div class="method-panel" data-v-8d7af6ce><div class="method-heading" data-v-8d7af6ce>Step 1: Measure OD₀ (Blank Signal)</div><div class="od-warning-box" data-v-8d7af6ce><b data-v-8d7af6ce>Important: OD₀ must be measured with a vial containing growth medium!</b><div class="od-warning-details" data-v-8d7af6ce> - Use the same growth medium that will be used in your experiment<br data-v-8d7af6ce> - The vial must be filled with liquid<br data-v-8d7af6ce> - A good blank signal should be above 20mV<br data-v-8d7af6ce> - If the signal is below 20mV, check for:<br data-v-8d7af6ce>   • Proper vial alignment<br data-v-8d7af6ce>   • Clean sensors and vials<br data-v-8d7af6ce>   • No obstructions in the light path </div></div></div><div class="method-panel" data-v-8d7af6ce><div class="method-heading" data-v-8d7af6ce>Step 2 (Optional): Measure additional OD values to calibrate the scaling factor</div><div class="option-container" data-v-8d7af6ce><div class="option-box" data-v-8d7af6ce><div class="method-subheading" data-v-8d7af6ce>Option A: Using Liquid Samples (Recommended)</div><ol class="guide-ol" data-v-8d7af6ce><li data-v-8d7af6ce>Prepare a vial with a known OD between 0.1 and 2.0: </li><li data-v-8d7af6ce>Insert this vial into each slot and measure its signal using the calibration table.</li><li data-v-8d7af6ce>The scaling factor will be automatically calculated from these measurements.</li><i data-v-8d7af6ce>Repeat with different OD values for increased accuracy.</i></ol></div><div class="option-box" data-v-8d7af6ce><div class="method-subheading" data-v-8d7af6ce>Option B: Using Semitransparent Sheets</div><ol class="guide-ol" data-v-8d7af6ce><li data-v-8d7af6ce>Determine the equivalent OD of one or more semitransparent sheets (using a solution which creates the same signal as the sheet inserted in the sensor)</li><li data-v-8d7af6ce>Place the sheet over all sensors at once</li><li data-v-8d7af6ce>Measure the signals and the scaling factor will be calculated automatically</li><i data-v-8d7af6ce>Note: This method is less accurate than using liquid samples</i></ol></div></div></div><div class="method-panel" data-v-8d7af6ce><div class="method-heading" data-v-8d7af6ce>Step 3: Final Check</div><div class="guide-text" data-v-8d7af6ce> Ideally, remeasure OD₀ just before starting the experiment. Small changes in the position of the vial and media composition can affect the signal. </div></div></div></div>',1))])])}}},Yt=Z(Xt,[["__scopeId","data-v-8d7af6ce"]]);const ea={class:"od-control-container"},ta=["onClick"],aa={key:0,class:"od-output-value"},na={key:1,class:"od-output-value"},oa={key:2,class:"signal-output-value"},la={key:3,class:"signal-output-value"},sa={key:0,class:"calibration-section"},ia={class:"probe-table-outer-container",style:{"margin-bottom":"18px"}},ra={class:"table-controls"},ca={class:"mode-controls"},ua={class:"calibration-table-wrapper"},da={class:"calibration-table"},va={key:0,style:{width:"36px"}},pa={class:"od-value-container"},fa=["onDblclick"],ba=["value","onInput","onBlur","onKeyup"],ga=["title"],ma={key:1,class:"signal-value"},_a={key:1,class:"signal-value"},ha={key:1,class:"measure-cell-container"},ya=["onDblclick"],Ca=["onDblclick"],ka=["value","onInput","onBlur","onKeyup"],Da=["onClick","disabled","title"],wa={key:0,class:"measure-button-content"},Sa={key:1,class:"measure-button-content"},xa={key:0,style:{"text-align":"center",width:"36px",padding:"4px"}},$a=["onClick","disabled"],Oa={key:1,style:{width:"36px"}},Ia={key:0},Pa={class:"scaling-factor-container"},Ea={class:"calibration-table"},Aa={class:"scaling-factor-row"},Ma=["title"],Fa=["onUpdate:modelValue"],La={key:1,class:"scaling-factor-value"},Ta={key:0,style:{width:"40px"}},Na={key:0,class:"chart-container"},Ra={__name:"ODControl",setup(r){const a=X(),{ods:e,calibrationModeEnabled:_}=Y(a),{openDialog:g}=ge(),f=[1,2,3,4,5,6,7],C=M(!1),y=M(!0),I=M(!1),S=M(!1),v=M({}),c=M({}),k=G(()=>{let n=new Set;if(e.value.calibration)for(let x in e.value.calibration)for(let u in e.value.calibration[x])n.add(u);return Array.from(n).sort((x,u)=>parseFloat(x)-parseFloat(u))}),s=G(()=>{if(!e.value.calibration)return[];const n=new Set;for(const t in e.value.calibration)for(const x in e.value.calibration[t])n.add(parseFloat(x));return Array.from(n).sort((t,x)=>t-x)}),p=M(new Set),$=G(()=>{const n=e.value.calibration_coefs||{};return f.map(t=>{var x;return((x=n[t])==null?void 0:x[1])??"—"})}),m=M([]);be($,n=>{m.value=[...n]},{immediate:!0}),ae(()=>{a.fetchDeviceData(),document.addEventListener("click",d)}),Se(()=>{document.removeEventListener("click",d)});function d(n){if(H.value&&!n.target.closest(".calibration-signal")&&ce(H.value.vial,H.value.odValue),J.value&&!n.target.closest(".od-value-input")){const t=s.value.indexOf(J.value);t!==-1&&ee(J.value,t),J.value=null}}async function w(n){try{const t=await a.measureDevicePart({devicePart:"ods",partIndex:n+1});await a.fetchDeviceData()}catch(t){throw console.error("Error measuring OD:",t),te.error(t.message||"Failed to measure OD. Please try again."),t}}function P(n,t,x){c.value[t]||(c.value[t]={}),c.value[t][x]=parseFloat(n.target.value)}function A(n,t){if(c.value[n]&&c.value[n][t]!==void 0){e.value.calibration[n]||(e.value.calibration[n]={});const x=c.value[n][t];isNaN(c.value[n][t])&&delete e.value.calibration[n][t],a.updateODCalibrationValueAction({od:t,vial:n,newValue:x}).catch(u=>{console.error(`Error updating calibration for vial ${n}:`,u)}),delete c.value[n][t]}}function b(n,t){return c.value[n]&&c.value[n][t]!==void 0?c.value[n][t]:e.value.calibration&&e.value.calibration[n]&&e.value.calibration[n][t]!==void 0?e.value.calibration[n][t]:""}function E(n,t){if(!e.value.calibration||!e.value.calibration[n]||e.value.calibration[n][t]===void 0)return{background:""};const x=parseFloat(e.value.calibration[n][t]),u=5,O=40;let D;if(x<=0)D=u;else{const R=Math.log(10),oe=Math.log(1e3),We=(Math.log(Math.max(10,Math.min(1e3,x)))-R)/(oe-R);D=u+We*(O-u)}return{background:`rgba(255, 100, 100, ${D/100})`}}function B(n){if(n==null)return"";const t=parseFloat(n);if(isNaN(t))return"";const x=.02,u=.25,O=Math.max(0,Math.min(4,t)),D=Math.log(O+1)/Math.log(5),R=x+D*(u-x);return`background: linear-gradient(to right, rgba(255, 235, 156, ${R}), rgba(255, 235, 156, ${R*.6}))`}async function ee(n,t,x){if(v.value[t]!==void 0){const u=v.value[t];if(s.value.some((D,R)=>R!==t&&parseFloat(D)===parseFloat(u))&&!await g({title:"Duplicate OD Value",message:`An OD probe value of ${u} already exists. Are you sure you want to overwrite?`,showCancel:!0})){delete v.value[t];return}s.value[t]=u,delete v.value[t];try{for(let D in e.value.calibration){const R=e.value.calibration[D],oe=JSON.parse(JSON.stringify(R));R[n]!==void 0&&(delete oe[n],oe[u]=R[n],await a.setPartCalibrationAction({devicePart:"ods",partIndex:D,newCalibration:oe}))}await a.fetchDeviceData()}catch(D){console.error("Error updating calibration:",D),te.error("Failed to update calibration values")}}}function Te(n,t){console.log("handleProbeValueInput",n.target.value),v.value[t]=parseFloat(n.target.value)}function Ne(){I.value=!0}function Re(){I.value=!1}function Ve(){if(!s.value.length)return .1;const n=Math.max(...s.value);return parseFloat((n+.1).toFixed(2))}async function Ue(){const n=Ve();for(const t of f)e.value.calibration[t]||(e.value.calibration[t]={}),e.value.calibration[t][n]=null,await a.setPartCalibrationAction({devicePart:"ods",partIndex:t,newCalibration:e.value.calibration[t]});await a.fetchDeviceData()}async function Be(n){const t=k.value[n];p.value.add(t);for(const x of f)e.value.calibration[x]&&(delete e.value.calibration[x][t],await a.setPartCalibrationAction({devicePart:"ods",partIndex:x,newCalibration:e.value.calibration[x]}));await a.fetchDeviceData(),p.value.delete(t)}const q={VIEW:"view",MEASURE:"measure"},z=M(q.VIEW);G(()=>({"view-mode":z.value===q.VIEW,"measure-mode":z.value===q.MEASURE}));async function qe(n,t){if(z.value===q.MEASURE)try{const x=await a.measureDevicePart({devicePart:"ods",partIndex:n});e.value.calibration[n]||(e.value.calibration[n]={});const u=e.value.odsignals[n-1];u!==void 0&&await a.updateODCalibrationValueAction({od:t,vial:n,newValue:u}),await a.fetchDeviceData()}catch(x){throw console.error("Error measuring cell:",x),te.error(x.message||"Failed to measure signal. Please try again."),x}}const H=M(null),je=M(null);function _e(n,t){H.value={vial:n,odValue:t},fe(()=>{const x=document.querySelector(".calibration-signal");x&&x.focus()})}function ce(n,t){c.value[n]&&c.value[n][t]!==void 0&&A(n,t),H.value=null}function Ge(){if(H.value=null,H.value){const{vial:n,odValue:t}=H.value;c.value[n]&&delete c.value[n][t]}}const J=M(null);function Ke(n,t){J.value=n,fe(()=>{const x=document.querySelector(".od-value-input");x&&x.focus()})}function ze(){if(J.value=null,J.value){const n=s.value.indexOf(J.value);n!==-1&&v.value[n]&&delete v.value[n]}}const ue=(n,t)=>({icon:"",color:"#90caf9",tooltip:"Scaling factor"}),de=n=>typeof n!="number"?{icon:"mdi-help-circle-outline",color:"grey",tooltip:"No signal value available"}:n>=20?{icon:"mdi-check-circle",color:"#4caf50",tooltip:"Signal value within expected range"}:n>=12?{icon:"mdi-alert-circle",color:"#ffc107",tooltip:"Signal value slightly low. Consider recalibrating"}:{icon:"mdi-close-circle",color:"#f44336",tooltip:"Signal value too low. Check OD sensor"};return(n,t)=>{const x=W("v-icon");return o(),i(U,null,[l("div",ea,[(o(!0),i(U,null,j(h(e).states,(u,O)=>(o(),i("div",{class:"elements-container",key:O},[l("button",{class:"od-button",onClick:D=>w(O)},[l("span",null,"OD "+N(O),1)],8,ta),h(e).states&&h(e).states[O]!==void 0&&h(e).states[O]!==0?(o(),i("span",aa,N(parseFloat(h(e).states[O].toFixed(2))),1)):(o(),i("span",na,"---")),t[1]||(t[1]=l("div",{style:{height:"0.5px"}},null,-1)),h(e).odsignals&&h(e).odsignals[O]!==void 0&&h(e).odsignals[O]!==0?(o(),i("span",oa,"("+N(parseFloat(h(e).odsignals[O].toFixed(2)))+"mV)",1)):(o(),i("span",la,"(---)"))]))),128))]),h(_)?(o(),i("div",sa,[l("div",ia,[t[6]||(t[6]=l("div",{style:{display:"flex","align-items":"center","margin-bottom":"8px"}},null,-1)),l("div",ra,[t[5]||(t[5]=l("div",{style:{flex:"1"}},null,-1)),l("div",ca,[l("button",{class:K(["control-button mode-toggle",{active:z.value===q.MEASURE}]),onClick:t[0]||(t[0]=u=>z.value=z.value===q.MEASURE?q.VIEW:q.MEASURE)},[F(x,null,{default:V(()=>t[2]||(t[2]=[T("mdi-pencil")])),_:1}),t[3]||(t[3]=T(" Edit "))],2)]),l("button",{class:"control-button help-button",onClick:Ne},[F(x,null,{default:V(()=>t[4]||(t[4]=[T("mdi-help-circle-outline")])),_:1})])])]),t[15]||(t[15]=l("div",{class:"calibration-controls"},null,-1)),l("div",ua,[l("table",da,[l("thead",null,[l("tr",null,[t[7]||(t[7]=l("th",{style:{width:"110px"}},"OD Value",-1)),(o(),i(U,null,j(f,u=>l("th",{key:u,style:{width:"90px"}},"Vial "+N(u),1)),64)),C.value?(o(),i("th",va)):L("",!0)])]),l("tbody",null,[(o(!0),i(U,null,j(k.value,(u,O)=>(o(),i("tr",{key:u,class:K({"od-zero-row":parseFloat(u)===0})},[l("td",{style:ye([{width:"110px"},B(u)])},[l("div",pa,[!J.value||J.value!==u?(o(),i("span",{key:0,class:"od-value-display",onDblclick:D=>Ke(u),title:"Double click to edit"},N(O<s.value.length?v.value[O]!==void 0?v.value[O]:s.value[O]:u),41,fa)):(o(),i("input",{key:1,value:v.value[O]!==void 0?v.value[O]:s.value[O],onInput:D=>Te(D,O),onBlur:D=>ee(u,O),onKeyup:[ie(D=>ee(u,O),["enter"]),ie(ze,["esc"])],type:"number",step:"0.1",class:"od-value-input",ref_for:!0,ref:"odValueInput"},null,40,ba))])],4),(o(),i(U,null,j(f,D=>l("td",{key:D,class:K({"has-data":h(e).calibration&&h(e).calibration[D]&&h(e).calibration[D][u]!==void 0}),style:ye({background:E(D,u).background})},[z.value===q.VIEW?(o(),i(U,{key:0},[h(e).calibration&&h(e).calibration[D]&&h(e).calibration[D][u]!==void 0&&h(e).calibration[D][u]!==null?(o(),i(U,{key:0},[parseFloat(u)===0?(o(),i("div",{key:0,class:"signal-value-with-status",title:de(h(e).calibration[D][u]).tooltip},[T(N(h(e).calibration[D][u].toFixed(2))+" ",1),F(x,{color:de(h(e).calibration[D][u]).color,size:"small",style:{"margin-left":"4px"}},{default:V(()=>[T(N(de(h(e).calibration[D][u]).icon),1)]),_:2},1032,["color"])],8,ga)):(o(),i("div",ma,N(h(e).calibration[D][u].toFixed(2)),1))],64)):(o(),i("div",_a,"---"))],64)):z.value===q.MEASURE?(o(),i("div",ha,[h(e).calibration&&h(e).calibration[D]&&h(e).calibration[D][u]!==void 0&&h(e).calibration[D][u]!==null?(o(),i("span",{key:0,class:"signal-value measure-background-value",onDblclick:R=>_e(D,u),title:"Double click to edit"},N(parseFloat(h(e).calibration[D][u]).toFixed(2))+"mV ",41,ya)):(o(),i("span",{key:1,class:"signal-value measure-background-value empty-value",onDblclick:R=>_e(D,u),title:"Double click to edit"}," ——— ",40,Ca)),H.value&&H.value.vial===D&&H.value.odValue===u?(o(),i("input",{key:2,value:b(D,u),onInput:R=>P(R,D,u),onBlur:R=>ce(D,u),onKeyup:[ie(R=>ce(D,u),["enter"]),ie(Ge,["esc"])],type:"number",class:"calibration-signal",ref_for:!0,ref_key:"editingInput",ref:je},null,40,ka)):L("",!0),l("button",{class:"measure-cell-button",onClick:R=>qe(D,u),disabled:S.value,title:`Calibrate OD ${parseFloat(u).toFixed(2)} signal in vial ${D} (measure now)`},[S.value?(o(),i("span",wa,t[8]||(t[8]=[l("span",{class:"loading-spinner"},null,-1)]))):(o(),i("span",Sa,[F(x,null,{default:V(()=>t[9]||(t[9]=[T("mdi-camera-metering-center")])),_:1})]))],8,Da)])):L("",!0)],6)),64)),z.value===q.MEASURE&&parseFloat(k.value[O])!==0?(o(),i("td",xa,[l("button",{class:"delete-od-row",onClick:D=>Be(O),disabled:p.value.has(k.value[O]),title:"Delete row"},[F(x,null,{default:V(()=>t[10]||(t[10]=[T("mdi-delete")])),_:1})],8,$a)])):z.value===q.MEASURE?(o(),i("td",Oa)):L("",!0)],2))),128)),z.value===q.MEASURE?(o(),i("tr",Ia,[l("td",null,[l("button",{class:"add-od-probe-table",onClick:Ue},[F(x,null,{default:V(()=>t[11]||(t[11]=[T("mdi-plus")])),_:1}),t[12]||(t[12]=T(" Add "))])]),(o(),i(U,null,j(f,u=>l("td",{key:"add-row-"+u})),64)),t[13]||(t[13]=l("td",null,null,-1))])):L("",!0)])])]),l("div",Pa,[l("table",Ea,[l("tbody",null,[l("tr",Aa,[t[14]||(t[14]=l("th",{class:"scaling-factor-label"},"Scaling Factor",-1)),(o(!0),i(U,null,j(m.value,(u,O)=>(o(),i("th",{key:"sf-head-"+O,class:"scaling-factor-cell",title:ue().tooltip},[C.value?le((o(),i("input",{key:0,type:"number",step:"0.01",min:"0.1","onUpdate:modelValue":D=>m.value[O]=D,style:{width:"60px","text-align":"center",background:"#23272e",color:"#90caf9",border:"1px solid #444","border-radius":"4px"}},null,8,Fa)),[[se,m.value[O],void 0,{number:!0}]]):(o(),i("div",La,[T(N(typeof u=="number"?u.toFixed(2):u)+" ",1),F(x,{color:ue().color,size:"small",style:{"margin-left":"4px"}},{default:V(()=>[T(N(ue(u,O+1).icon),1)]),_:2},1032,["color"])]))],8,Ma))),128)),z.value===q.MEASURE?(o(),i("th",Ta)):L("",!0)])])])]),y.value?(o(),i("div",Na,[(o(),i(U,null,j(f,u=>F(Jt,{partId:u,key:u},null,8,["partId"])),64))])):L("",!0)])):L("",!0),I.value?(o(),Q(Yt,{key:1,onClose:Re})):L("",!0)],64)}}},Va=Z(Ra,[["__scopeId","data-v-e103b2a6"]]);const me=X(),{leds:Ua}=Y(me);ae(()=>{Ua.value||me.fetchDeviceData()});const Ba={name:"SetLEDColor",data(){return{vials:[1,2,3,4,5,6,7],ledColors:{1:{red:0,green:0,blue:0,color:"#000000"},2:{red:0,green:0,blue:0,color:"#000000"},3:{red:0,green:0,blue:0,color:"#000000"},4:{red:0,green:0,blue:0,color:"#000000"},5:{red:0,green:0,blue:0,color:"#000000"},6:{red:0,green:0,blue:0,color:"#000000"},7:{red:0,green:0,blue:0,color:"#000000"}}}},methods:{async setLEDColor(r,a){if(a.shiftKey){const{red:e,green:_,blue:g}=this.ledColors[r];for(const f of this.vials)this.ledColors[f].red=e,this.ledColors[f].green=_,this.ledColors[f].blue=g,this.ledColors[f].color=this.ledColors[r].color,await this.setIndividualLEDColor(f)}else await this.setIndividualLEDColor(r)},async setIndividualLEDColor(r){const{red:a,green:e,blue:_}=this.ledColors[r];try{console.log("Setting color for vial",r,"to",a,e,_),await me.setLedColor(r,a,e,_)}catch(g){console.error(`Failed to set color for vial ${r}:`,g),alert(`Error setting color for vial ${r}`)}},updateColor(r){const a=this.ledColors[r].color,{r:e,g:_,b:g}=this.hexToRgb(a);this.ledColors[r].red=e/255,this.ledColors[r].green=_/255,this.ledColors[r].blue=g/255},hexToRgb(r){const a=parseInt(r.slice(1),16);return{r:a>>16&255,g:a>>8&255,b:a&255}}}},qa={class:"rgb-control-container"},ja={class:"color-selector"},Ga=["onUpdate:modelValue","onInput"],Ka=["onClick"];function za(r,a,e,_,g,f){return o(),i("div",qa,[(o(!0),i(U,null,j(g.vials,C=>(o(),i("div",{class:"vial-container",key:C},[l("div",ja,[l("label",null,N("Vial "+C),1),le(l("input",{type:"color","onUpdate:modelValue":y=>g.ledColors[C].color=y,onInput:y=>f.updateColor(C)},null,40,Ga),[[se,g.ledColors[C].color]])]),l("button",{class:"set-color-button",onClick:y=>f.setLEDColor(C,y)},"Set",8,Ka)]))),128))])}const Wa=Z(Ba,[["render",za],["__scopeId","data-v-0f12a494"]]);const Ha={class:"device-configs"},Ja={class:"config-actions"},Za={key:0,class:"error-message"},Qa={key:1,class:"config-list mt-4"},Xa={key:0},Ya={key:1,class:"text-muted"},en={__name:"DeviceConfigs",setup(r){const a=X(),{openDialog:e}=ge(),_=M([]),g=M(""),f=M(!1),C=M(null),y=M(null);async function I(){g.value="",f.value=!0;try{const k=await a.listDeviceConfigs();_.value=(k||[]).sort((s,p)=>p.localeCompare(s))}catch{g.value="Failed to list device configs."}finally{f.value=!1}}async function S(k){g.value="",C.value=k;try{await a.loadDeviceConfig(k)}catch{g.value="Failed to load device config."}finally{C.value=null}}const v=async()=>{g.value="";try{await a.saveCalibrationToBackend(),te.success("Calibration checkpoint saved!")}catch{g.value="Failed to save device configs."}};function c(k){y.value=k,e({title:"Load checkpoint?",message:"Replace default config with checkpoint?"}).then(async s=>{s&&(await S(y.value),y.value=null)})}return(k,s)=>{const p=W("v-icon"),$=W("v-btn"),m=W("v-list-item"),d=W("v-list");return o(),i("div",Ha,[l("div",Ja,[F($,{color:"success",onClick:v},{default:V(()=>[F(p,{left:""},{default:V(()=>s[0]||(s[0]=[T("mdi-content-save")])),_:1}),s[1]||(s[1]=T(" Save Calibration "))]),_:1}),F($,{color:"primary",onClick:I,loading:f.value,class:"mr-2"},{default:V(()=>[F(p,{left:""},{default:V(()=>s[2]||(s[2]=[T("mdi-folder-open")])),_:1}),s[3]||(s[3]=T(" Load Calibration Checkpoints "))]),_:1},8,["loading"])]),g.value?(o(),i("div",Za,N(g.value),1)):L("",!0),_.value.length>0||f.value?(o(),i("div",Qa,[s[6]||(s[6]=l("h3",{class:"text-h6 mb-2"},"Available Device Calibration Checkpoints",-1)),_.value.length>0?(o(),i("div",Xa,[F(d,null,{default:V(()=>[(o(!0),i(U,null,j(_.value,w=>(o(),Q(m,{key:w,onClick:P=>c(w),class:K({"config-item":!0,loading:C.value===w})},{default:V(()=>[F(p,{left:""},{default:V(()=>s[4]||(s[4]=[T("mdi-file-document")])),_:1}),T(" "+N(w)+" ",1),C.value===w?(o(),Q(p,{key:0,right:""},{default:V(()=>s[5]||(s[5]=[T("mdi-loading")])),_:1})):L("",!0)]),_:2},1032,["onClick","class"]))),128))]),_:1})])):f.value?L("",!0):(o(),i("div",Ya,' Click "Refresh Configs" to load. '))])):L("",!0)])}}},tn=Z(en,[["__scopeId","data-v-ecd4ed1d"]]);const an={key:0,class:"experiment-running-overlay"},nn={class:"calibration-switch-row"},on={key:2},ln={__name:"DeviceControl",setup(r){const a=X(),{deviceConnected:e,deviceControlEnabled:_,calibrationModeEnabled:g,stirrers:f,pumps:C,valves:y,ods:I}=Y(a),S=G(()=>_.value),v=G({get:()=>g.value,set:s=>a.setCalibrationModeEnabled(s)}),{openDialog:c}=ge();async function k(){console.log("onReconnectClick"),await c({title:"Reconnect Device?",message:"Are you sure you want to reconnect the device?"})?(te.success("Reconnecting device..."),a.connectDevice()):te.error("Reconnect cancelled")}return ae(()=>{a.fetchDeviceData()}),(s,p)=>{const $=W("v-btn"),m=W("v-switch");return o(),i("div",{class:K(["DeviceControl",{"device-disconnected":h(e)===!1}])},[h(_)===!1?(o(),i("div",an)):L("",!0),l("div",nn,[h(g)?(o(),Q($,{key:0,class:"reconnect-btn",onClick:k},{default:V(()=>p[1]||(p[1]=[T("Reconnect Device")])),_:1})):L("",!0),F(m,{modelValue:v.value,"onUpdate:modelValue":p[0]||(p[0]=d=>v.value=d),label:"Calibration Mode"},null,8,["modelValue"])]),h(_)||S.value?(o(),i(U,{key:1},[F(It),F(Lt),F(Wt),F(Va),F(Wa),h(g)?(o(),Q(tn,{key:0})):L("",!0)],64)):(o(),i("p",on,"Device Control Disabled"))],2)}}},dn=Z(ln,[["__scopeId","data-v-12bbe645"]]);export{dn as default};
