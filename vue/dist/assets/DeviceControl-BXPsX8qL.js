import{j as q,s as U,k as R,v as tt,l as et,p as ot,q as nt,u as st,x as B,y as it,z as X,m as S,a as w,_,r as b,o as c,c as d,b as a,F as g,d as v,t as f,n as y,A as P,B as O,e as A,f as D,C as at,V as rt,D as lt,g as C,w as ut,h as F,E as ct}from"./index-CrZdaWF5.js";import{C as M,B as dt,S as pt,a as ht,b as Y,L as j,p as H,c as K,d as G,e as mt,P as bt}from"./chart--Mp3_Buo.js";const z={data:{type:Object,required:!0},options:{type:Object,default:()=>({})},plugins:{type:Array,default:()=>[]},datasetIdKey:{type:String,default:"label"},updateMode:{type:String,default:void 0}},gt={ariaLabel:{type:String},ariaDescribedby:{type:String}},Ct={type:{type:String,required:!0},destroyDelay:{type:Number,default:0},...z,...gt},vt=tt[0]==="2"?(t,e)=>Object.assign(t,{attrs:e}):(t,e)=>Object.assign(t,e);function I(t){return X(t)?B(t):t}function ft(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:t;return X(e)?new Proxy(t,{}):t}function yt(t,e){const i=t.options;i&&e&&Object.assign(i,e)}function W(t,e){t.labels=e}function Z(t,e,i){const s=[];t.datasets=e.map(o=>{const n=t.datasets.find(r=>r[i]===o[i]);return!n||!o.data||s.includes(n)?{...o}:(s.push(n),Object.assign(n,o),n)})}function _t(t,e){const i={labels:[],datasets:[]};return W(i,t.labels),Z(i,t.datasets,e),i}const Dt=q({props:Ct,setup(t,e){let{expose:i,slots:s}=e;const o=et(null),n=U(null);i({chart:n});const r=()=>{if(!o.value)return;const{type:p,data:h,options:m,plugins:x,datasetIdKey:T}=t,$=_t(h,T),V=ft($,h);n.value=new M(o.value,{type:p,data:V,options:{...m},plugins:x})},l=()=>{const p=B(n.value);p&&(t.destroyDelay>0?setTimeout(()=>{p.destroy(),n.value=null},t.destroyDelay):(p.destroy(),n.value=null))},u=p=>{p.update(t.updateMode)};return ot(r),nt(l),st([()=>t.options,()=>t.data],(p,h)=>{let[m,x]=p,[T,$]=h;const V=B(n.value);if(!V)return;let L=!1;if(m){const k=I(m),E=I(T);k&&k!==E&&(yt(V,k),L=!0)}if(x){const k=I(x.labels),E=I($.labels),N=I(x.datasets),Q=I($.datasets);k!==E&&(W(V.config.data,k),L=!0),N&&N!==Q&&(Z(V.config.data,N,t.datasetIdKey),L=!0)}L&&it(()=>{u(V)})},{deep:!0}),()=>R("canvas",{role:"img",ariaLabel:t.ariaLabel,ariaDescribedby:t.ariaDescribedby,ref:o},[R("p",{},[s.default?s.default():""])])}});function J(t,e){return M.register(e),q({props:z,setup(i,s){let{expose:o}=s;const n=U(null),r=l=>{n.value=l==null?void 0:l.chart};return o({chart:n}),()=>R(Dt,vt({ref:r},{type:t,...i}))}})}const St=J("bar",dt),wt=J("scatter",pt);M.register(ht,Y,j,H,K,G);const xt={components:{Bar:St},data(){return{chartData:{datasets:[{data:[]}]},chartOptions:{responsive:!0,devicePixelRatio:4,maintainAspectRatio:!1,plugins:{legend:{display:!1}},backgroundColor:"rgba(0, 140, 186, 0.3)",layout:{padding:{top:20}},scales:{x:{title:{display:!0,text:"rotations"}},y:{title:{display:!0,text:"mL / rotation"},beginAtZero:!1,suggestedMin:.1,suggestedMax:.22}}},isStopButton:{},rows:[{rotations:1,iterations:50,total_ml:NaN},{rotations:5,iterations:10,total_ml:NaN},{rotations:10,iterations:5,total_ml:NaN},{rotations:50,iterations:1,total_ml:NaN}]}},props:{pumpId:{type:Number,required:!0}},computed:{...S("device",["calibrationModeEnabled","pumps","valves"]),pumpIdCalibrationData(){var t;return(t=this.pumps)==null?void 0:t.calibration[this.pumpId]}},methods:{...w("device",["setPartCalibrationAction","startPumpCalibrationSequence","setPartStateAction"]),createChartData(){return{labels:Object.keys(this.pumpIdCalibrationData),datasets:[{label:null,data:Object.values(this.pumpIdCalibrationData),fill:!1,borderColor:"rgb(75, 192, 192)",tension:.1}]}},updateChartData(){this.chartData=this.createChartData()},toggleButtonState(t){if(!Object.values(this.valves.states).some(i=>i==="open")){alert("At least one valve must be open to start the pump");return}this.isStopButton[t]=!this.isStopButton[t],this.isStopButton[t]?this.promptForMl(this.rows[t]):this.setPartStateAction({devicePart:"pumps",partIndex:this.pumpId,newState:"stopped"})},resetButton(t){this.isStopButton[t]=!1},onTotalMlInput(t){t.total_ml&&(this.pumps.calibration[this.pumpId][t.rotations]=t.total_ml/t.rotations/t.iterations,this.setPartCalibrationAction({devicePart:"pumps",partIndex:this.pumpId,newCalibration:this.pumps.calibration[this.pumpId]}),this.isStopButton[t]=!1)},promptForMl(t){console.log("starting pump calibration sequence for pumpId: "+this.pumpId),alert("Pumping "+t.rotations+" rotations "+t.iterations+" times. Please blank the scale"),this.startPumpCalibrationSequence({pumpId:this.pumpId,rotations:t.rotations,iterations:t.iterations}).then(()=>{console.log("pump calibration sequence finished"),this.resetButton(t);const e=parseFloat(prompt("Enter total mL pumped"));isNaN(e)||(t.total_ml=e,this.onTotalMlInput(t))})}},mounted(){this.pumpIdCalibrationData&&this.updateChartData(),this.rows.forEach(t=>{t.total_ml=this.pumps.calibration[this.pumpId][t.rotations]*t.rotations*t.iterations,t.total_ml=t.total_ml.toFixed(2)})},watch:{pumpIdCalibrationData:{deep:!0,handler(){this.updateChartData()}}}},Vt={class:"pump-data"},kt={class:"iteration-rotation-wrapper"},It={class:"iteration"},Pt={class:"rotation"},Ot=["onClick"],At={key:0},$t={key:1},Lt=["onUpdate:modelValue","onChange"],Mt={class:"chart-container"};function Tt(t,e,i,s,o,n){const r=b("Bar");return c(),d("div",Vt,[a("table",null,[e[1]||(e[1]=a("thead",null,[a("tr",null,[a("th",null,"Calibration Sequence"),a("th"),a("th",null,"Volume (mL)")])],-1)),a("tbody",null,[(c(!0),d(g,null,v(o.rows,(l,u)=>(c(),d("tr",{key:u},[a("td",null,[a("div",kt,[a("div",It,f(l.iterations),1),e[0]||(e[0]=a("div",{class:"multiplier"},"x",-1)),a("div",Pt,f(l.rotations)+" rots",1)])]),a("td",null,[a("button",{onClick:p=>n.toggleButtonState(u),class:y({"stop-button":o.isStopButton[u]})},[o.isStopButton[u]?(c(),d("span",$t,"Stop")):(c(),d("span",At,"Start"))],10,Ot)]),a("td",null,[P(a("input",{"onUpdate:modelValue":p=>l.total_ml=p,onChange:p=>n.onTotalMlInput(l),type:"float"},null,40,Lt),[[O,l.total_ml]])])]))),128))])]),a("div",Mt,[o.chartData.datasets[0].data.length>0?(c(),A(r,{key:0,id:"pump-calibration-chart",options:o.chartOptions,class:"pump-calibration-chart",data:o.chartData},null,8,["options","data"])):D("",!0)])])}const Et=_(xt,[["render",Tt],["__scopeId","data-v-898d0195"]]),Nt={components:{PumpCalibration:Et,VBtn:at,VTextField:rt,VProgressCircular:lt},name:"PumpControl",data(){return{pump_names:{1:"MAIN",2:"DRUG",3:"MISSING!!!",4:"WASTE"},rotations:{1:null,2:null,3:null,4:null},volume:{1:null,2:null,3:null,4:null}}},computed:{...S("device",["pumps","valves","calibrationModeEnabled"])},methods:{...w("device",["setPartStateAction"]),async handlePumpClick(t){if(this.pumps.states[t]==="running"){await this.setPartStateAction({devicePart:"pumps",partIndex:t,newState:"stopped"});return}if(!Object.values(this.valves.states).some(s=>s==="open")){alert("At least one valve must be open to start the pump");return}const i=parseFloat(this.volume[t]);if(!i){alert("Please set the volume before starting the pump");return}try{await this.setPartStateAction({devicePart:"pumps",partIndex:t,newState:"running",input:{volume:i}})}catch(s){console.error(s)}finally{await this.setPartStateAction({devicePart:"pumps",partIndex:t,newState:"stopped"})}},onVolumeInput(t,e){this.volume[e]=t;const i=parseFloat(this.volume[e]);isNaN(i)?this.rotations[e]="":this.rotations[e]=this.calculateRotations(i,e).toFixed(2)},onRotationsInput(t,e){this.rotations[e]=t;const i=parseFloat(this.rotations[e]);isNaN(i)?this.volume[e]="":this.volume[e]=this.calculateVolume(i,e)},calculateRotations(t,e){const i=this.pumps.calibration[e],s=Object.entries(i).map(([h,m])=>[parseInt(h),m]).sort((h,m)=>h[0]-m[0]);if(t>=s[s.length-1][0]*s[s.length-1][1])return t/s[s.length-1][1];let o=s[0],n=s[s.length-1];for(let h=0;h<s.length-1;h++)if(t>=s[h][0]*s[h][1]&&t<=s[h+1][0]*s[h+1][1]){o=s[h],n=s[h+1];break}const r=o[0]*o[1],l=n[0]*n[1],u=(t-r)/(l-r),p=o[1]+(n[1]-o[1])*u;return t/p},calculateVolume(t,e){const i=this.pumps.calibration[e],s=Object.entries(i).map(([u,p])=>[parseInt(u),p]).sort((u,p)=>u[0]-p[0]);if(t>=s[s.length-1][0])return(t*s[s.length-1][1]).toFixed(2);let o=s[0],n=s[s.length-1];for(let u=0;u<s.length-1;u++)if(t>=s[u][0]&&t<=s[u+1][0]){o=s[u],n=s[u+1];break}const r=(t-o[0])/(n[0]-o[0]),l=o[1]+(n[1]-o[1])*r;return(t*l).toFixed(2)}}},Rt={class:"pump-controls"},Bt={key:1},Ft={class:"pump-input"};function qt(t,e,i,s,o,n){const r=b("v-progress-circular"),l=b("v-btn"),u=b("v-text-field"),p=b("PumpCalibration");return c(),d("div",Rt,[(c(),d(g,null,v([1,2,4],h=>a("div",{class:"pump",key:h},[C(l,{class:y(["pump-button",{"stop-button":t.pumps.states[h]==="running"}]),onClick:m=>n.handlePumpClick(h)},{default:ut(()=>[t.pumps.states[h]==="running"?(c(),A(r,{key:0,indeterminate:"",color:"white",class:"spinner-custom"})):(c(),d("span",Bt,[F(f(o.pump_names[h]),1),e[0]||(e[0]=a("br",null,null,-1)),e[1]||(e[1]=F("pump"))]))]),_:2},1032,["class","onClick"]),a("div",Ft,[C(u,{label:"Volume (mL)",type:"number",dense:"",modelValue:o.volume[h],"onUpdate:modelValue":[m=>o.volume[h]=m,m=>n.onVolumeInput(m,h)]},null,8,["modelValue","onUpdate:modelValue"]),t.calibrationModeEnabled?(c(),A(u,{key:0,label:"Rotations",type:"number",dense:"",modelValue:o.rotations[h],"onUpdate:modelValue":[m=>o.rotations[h]=m,m=>n.onRotationsInput(m,h)]},null,8,["modelValue","onUpdate:modelValue"])):D("",!0),t.calibrationModeEnabled?(c(),A(p,{key:1,pumpId:h},null,8,["pumpId"])):D("",!0)])])),64))])}const Ut=_(Nt,[["render",qt],["__scopeId","data-v-46a613c2"]]),Xt={name:"ValveControl",computed:S("device",["valves"]),data(){return{audioContext:new(window.AudioContext||window.webkitAudioContext),togglingValves:{}}},methods:{...w("device",["setPartStateAction"]),toggleValve(t){const e=this.valves.states[t];if(this.togglingValves[t])return;this.togglingValves={...this.togglingValves,[t]:!0};const i=this.playValveSound(e);this.setPartStateAction({devicePart:"valves",partIndex:t,newState:e==="open"?"closed":"open"}).then(()=>{i.stop(),this.togglingValves={...this.togglingValves,[t]:!1}}).catch(s=>{console.error(s)})},playValveSound(t){const e=t==="open"?500:300,i=t==="open"?300:500,s=this.audioContext.createOscillator();s.type="sine";const o=this.audioContext.createGain();return o.gain.setValueAtTime(.1,this.audioContext.currentTime),s.connect(o),o.connect(this.audioContext.destination),s.frequency.setValueAtTime(e,this.audioContext.currentTime),s.frequency.linearRampToValueAtTime(i,this.audioContext.currentTime+.3),s.start(),s.stop(this.audioContext.currentTime+.3),s}}},Yt={class:"valve-controls"},jt=["onClick","disabled"],Ht={key:0,class:"spinner-border spinner-custom",role:"status"},Kt={key:1};function Gt(t,e,i,s,o,n){return c(),d("div",Yt,[(c(),d(g,null,v(7,r=>a("button",{class:y(["btn",{"btn-danger":t.valves.states[r]==="closed"&&!o.togglingValves[r],"btn-success":t.valves.states[r]==="open"&&!o.togglingValves[r],"btn-warning":o.togglingValves[r]}]),key:r,onClick:l=>n.toggleValve(r),disabled:o.togglingValves[r]},[o.togglingValves[r]?(c(),d("div",Ht)):(c(),d("span",Kt,"Valve "+f(r),1))],10,jt)),64))])}const zt=_(Xt,[["render",Gt],["__scopeId","data-v-829d98a2"]]),Wt={name:"StirrerCalibration",props:{stirrerId:{type:Number,required:!0}},watch:{calibrationModeEnabled(t){t&&this.$nextTick(this.updateLine)}},data(){return{min:0,max:1,lowX1:0,lowY1:0,lowX2:0,lowY2:0,highX1:0,highY1:0,highX2:0,highY2:0,audioContext:new(window.AudioContext||window.webkitAudioContext),oscillator:null,gainNode:null,stopSoundTimeout:null}},computed:{...S("device",["calibrationModeEnabled","stirrers"]),currentStirrerState(){return this.stirrers.states[this.stirrerId]}},methods:{...w("device",["setPartStateAction","setPartCalibrationAction","getAllDeviceData","setAllStirrersStateAction"]),onClick(t){this.setPartStateAction({devicePart:"stirrers",partIndex:this.stirrerId,newState:t})},onDoubleClick(t){this.setAllStirrersStateAction(t)},onSliderChange(t,e){t==="low"?this.stirrers.calibration[this.stirrerId].low=parseFloat(e.target.value):t==="high"&&(this.stirrers.calibration[this.stirrerId].high=parseFloat(e.target.value)),this.setPartCalibrationAction({devicePart:"stirrers",partIndex:this.stirrerId,newCalibration:{low:this.stirrers.calibration[this.stirrerId].low,high:this.stirrers.calibration[this.stirrerId].high}}).catch(i=>{console.error("Error updating stirrer calibration:",i)})},onSliderInput(t,e){t==="low"?this.stirrers.calibration[this.stirrerId].low=parseFloat(e.target.value):t==="high"&&(this.stirrers.calibration[this.stirrerId].high=parseFloat(e.target.value)),this.updateLine(),this.playSound(e.target.value)},updateLine(){this.$nextTick(()=>{const e=this.$refs.container.getBoundingClientRect(),i=this.$el.querySelector(".slider-low"),s=this.$refs.buttonLow,o=i.getBoundingClientRect(),n=s.getBoundingClientRect();this.lowX1=o.x-e.x+o.width/2,this.lowY1=o.y-e.y+o.height*(1-this.stirrers.calibration[this.stirrerId].low/(this.max-this.min)),this.lowX2=n.x-e.x,this.lowY2=n.y-e.y+n.height/2;const r=this.$el.querySelector(".slider-high"),l=this.$refs.buttonHigh,u=r.getBoundingClientRect(),p=l.getBoundingClientRect();this.highX1=u.x-e.x+u.width/2,this.highY1=u.y-e.y+u.height*(1-this.stirrers.calibration[this.stirrerId].high/(this.max-this.min)),this.highX2=p.x-e.x,this.highY2=p.y-e.y+p.height/2})},playSound(t){this.oscillator||(this.oscillator=this.audioContext.createOscillator(),this.gainNode=this.audioContext.createGain(),this.oscillator.type="sine",this.gainNode.gain.setValueAtTime(.1,this.audioContext.currentTime),this.oscillator.connect(this.gainNode),this.gainNode.connect(this.audioContext.destination),this.oscillator.start());const e=300+t*500;this.oscillator.frequency.setValueAtTime(e,this.audioContext.currentTime),this.stopSoundTimeout&&clearTimeout(this.stopSoundTimeout),this.stopSoundTimeout=setTimeout(this.stopSound,200)},stopSound(){this.oscillator&&(this.gainNode.gain.exponentialRampToValueAtTime(.001,this.audioContext.currentTime+.01),this.gainNode.gain.setValueAtTime(.1,this.audioContext.currentTime+.02),this.oscillator.stop(this.audioContext.currentTime+.02),this.oscillator=null,this.gainNode=null)}}},Zt={class:"stirrer-calibrator",ref:"container"},Jt={class:"elements-container"},Qt={class:"stirrer-name"},te={key:0},ee=["min","max"],oe=["min","max"],ne={class:"svg-container"},se=["x1","y1","x2","y2"],ie=["x1","y1","x2","y2"],ae={class:"buttons-container"};function re(t,e,i,s,o,n){return c(),d("div",Zt,[a("div",Jt,[a("div",Qt,[a("header",null,"Stirrer "+f(i.stirrerId),1)]),t.calibrationModeEnabled?(c(),d("div",te,[P(a("input",{type:"range",class:y(["slider slider-high",{active:n.currentStirrerState==="high"}]),min:o.min,max:o.max,step:.01,"onUpdate:modelValue":e[0]||(e[0]=r=>t.stirrers.calibration[i.stirrerId].high=r),onChange:e[1]||(e[1]=r=>n.onSliderChange("high",r)),onInput:e[2]||(e[2]=r=>n.onSliderInput("high",r))},null,42,ee),[[O,t.stirrers.calibration[i.stirrerId].high]]),P(a("input",{type:"range",class:y(["slider slider-low",{active:n.currentStirrerState==="low"}]),min:o.min,max:o.max,step:.01,"onUpdate:modelValue":e[3]||(e[3]=r=>t.stirrers.calibration[i.stirrerId].low=r),onChange:e[4]||(e[4]=r=>n.onSliderChange("low",r)),onInput:e[5]||(e[5]=r=>n.onSliderInput("low",r))},null,42,oe),[[O,t.stirrers.calibration[i.stirrerId].low]]),(c(),d("svg",ne,[a("line",{x1:o.lowX1,y1:o.lowY1,x2:o.lowX2,y2:o.lowY2,stroke:"gray","stroke-width":"1"},null,8,se),a("line",{x1:o.highX1,y1:o.highY1,x2:o.highX2,y2:o.highY2,stroke:"gray","stroke-width":"1"},null,8,ie)]))])):D("",!0),a("div",ae,[a("button",{class:y(["button button-high",{active:n.currentStirrerState==="high"}]),ref:"buttonHigh",onClick:e[6]||(e[6]=r=>n.onClick("high")),onDblclick:e[7]||(e[7]=r=>n.onDoubleClick("high"))}," High ",34),a("button",{class:y(["button button-low",{active:n.currentStirrerState==="low"}]),ref:"buttonLow",onClick:e[8]||(e[8]=r=>n.onClick("low")),onDblclick:e[9]||(e[9]=r=>n.onDoubleClick("low"))}," Low ",34),a("button",{class:y(["button button-off",{active:n.currentStirrerState==="stopped"}]),ref:"buttonOff",onClick:e[10]||(e[10]=r=>n.onClick("stopped")),onDblclick:e[11]||(e[11]=r=>n.onDoubleClick("stopped"))}," OFF ",34)])])],512)}const le=_(Wt,[["render",re],["__scopeId","data-v-8d4b955b"]]),ue={name:"StirrerControl",components:{StirrerCalibration:le}},ce={class:"stirrer-controls"};function de(t,e,i,s,o,n){const r=b("StirrerCalibration");return c(),d("div",ce,[(c(),d(g,null,v(7,l=>C(r,{key:l,stirrerId:l},null,8,["stirrerId"])),64))])}const pe=_(ue,[["render",de],["__scopeId","data-v-6cada7fd"]]);M.register(H,K,G,mt,Y,j,bt);function he(t,e,i,s,o,n){return o+(e-o)/Math.pow(1+Math.pow(t/s,i),n)}const me={name:"LineChart",components:{Scatter:wt},props:{partId:{type:Number,required:!0}},computed:{...S("device",["ods","calibrationModeEnabled"]),calibrationData(){var t;return(t=this.ods)==null?void 0:t.calibration[this.partId]},calibrationCoefs(){var t;return(t=this.ods)==null?void 0:t.calibration_coefs[this.partId]},currentOD(){var t,e;return{od:(t=this.ods)==null?void 0:t.states[this.partId],signal:(e=this.ods)==null?void 0:e.odsignals[this.partId]}},chartData(){if(this.calibrationData&&typeof this.calibrationData=="object"&&this.calibrationCoefs){const t=Object.entries(this.calibrationData).map(([o,n])=>({x:Number(n),y:Number(o)})).sort((o,n)=>o.x-n.x),e=Math.min(...t.map(o=>o.x)),i=Math.max(...t.map(o=>o.x)),s=[];for(let o=e;o<=i;o+=.1){const n=he(o,...this.calibrationCoefs);s.push({x:o,y:n})}return{datasets:[{label:`Vial ${this.partId} Calibration OD`,data:t,borderColor:"#607ecb",backgroundColor:"rgba(83,158,255,0.64)"},{label:`Vial ${this.partId} Current OD`,data:[{x:this.currentOD.signal,y:this.currentOD.od}],pointRadius:5,backgroundColor:"rgba(255,1,60,0.64)"},{label:`Vial ${this.partId} Fit`,data:s,pointRadius:0,borderColor:"rgba(0,70,220,0.38)",borderWidth:2,showLine:!0,fill:!1,borderDash:[2,2]}]}}return{}},chartOptions(){return{devicePixelRatio:4,responsive:!0,maintainAspectRatio:!1,plugins:{legend:{display:!1},title:{display:!0,text:`Vial ${this.partId}`}},scales:{x:{title:{display:!0,text:"Signal (mV)"},suggestedMin:0},y:{title:{display:!0,text:"OD"},suggestedMax:1.5,suggestedMin:0}}}}}},be={className:"single-chart-container"};function ge(t,e,i,s,o,n){const r=b("Scatter");return c(),d("div",be,[C(r,{data:n.chartData,options:n.chartOptions},null,8,["data","options"])])}const Ce=_(me,[["render",ge]]),ve={components:{ODChart:Ce},data(){return{vials:[1,2,3,4,5,6,7],newRowValue:null,isLoading:!1}},computed:{...S("device",["ods","calibrationModeEnabled"]),allOdValues(){let t=new Set;for(let e in this.ods.calibration)for(let i in this.ods.calibration[e])t.add(i);return Array.from(t)}},methods:{...w("device",["getAllDeviceData","setPartStateAction","measureDevicePart","measureODCalibrationAction","setPartCalibrationAction","removeODCalibrationRowAction","updateODCalibrationKeyAction","updateODCalibrationValueAction"]),async handleOdClick(t){await this.measureDevicePart({devicePart:"ods",partIndex:t}).then(()=>{this.getAllDeviceData()})},async handleDeleteRowClick(t){this.isLoading=!0;try{await this.removeODCalibrationRowAction(t)}catch(e){console.log(e)}finally{this.isLoading=!1}}}},fe={class:"od-control-container"},ye=["onClick"],_e={key:0,class:"od-output-value"},De={key:1,class:"signal-output-value"},Se={key:0},we=["value","onChange"],xe=["onClick"],Ve=["onChange","onUpdate:modelValue"],ke=["disabled","onClick"],Ie={class:"chart-container"};function Pe(t,e,i,s,o,n){const r=b("ODChart");return c(),d(g,null,[a("div",fe,[(c(!0),d(g,null,v(t.ods.states,(l,u)=>(c(),d("div",{class:"elements-container",key:u},[a("button",{class:"od-button",onClick:p=>n.handleOdClick(u)},[a("span",null,"OD "+f(u),1)],8,ye),t.ods.states&&t.ods.states[u]!==void 0?(c(),d("span",_e,f(parseFloat(t.ods.states[u].toFixed(2))),1)):D("",!0),e[2]||(e[2]=a("div",{style:{height:"0.5px"}},null,-1)),t.ods.odsignals&&t.ods.odsignals[u]!==void 0?(c(),d("span",De,"("+f(parseFloat(t.ods.odsignals[u].toFixed(2)))+"mV)",1)):D("",!0)]))),128))]),t.calibrationModeEnabled?(c(),d("div",Se,[a("table",null,[a("thead",null,[a("tr",null,[e[3]||(e[3]=a("th",null,"OD value",-1)),e[4]||(e[4]=a("th",null,null,-1)),(c(!0),d(g,null,v(o.vials,l=>(c(),d("th",{key:l},f("vial "+l),1))),128)),e[5]||(e[5]=a("th",null,null,-1))])]),a("tbody",null,[(c(!0),d(g,null,v(n.allOdValues,l=>(c(),d("tr",{key:l},[a("td",null,[a("input",{value:l,onChange:u=>t.updateODCalibrationKeyAction({oldOD:l,newOD:u.target.value}),type:"number",step:"0.1"},null,40,we)]),a("td",null,[a("button",{onClick:u=>t.measureODCalibrationAction({odValue:l})},"Remeasure",8,xe)]),(c(!0),d(g,null,v(o.vials,u=>(c(),d("td",{key:u},[P(a("input",{class:"calibration-signal",onChange:p=>t.updateODCalibrationValueAction({od:l,odsIndex:u,newValue:p.target.value}),"onUpdate:modelValue":p=>t.ods.calibration[u][l]=p,type:"number",style:{opacity:"60%"}},null,40,Ve),[[O,t.ods.calibration[u][l]]])]))),128)),a("td",null,[a("button",{class:"button button-delete",disabled:o.isLoading,onClick:u=>n.handleDeleteRowClick(l)},"Delete Row",8,ke)])]))),128)),a("tr",null,[a("td",null,[P(a("input",{"onUpdate:modelValue":e[0]||(e[0]=l=>o.newRowValue=l),type:"number",step:"0.1",style:{"font-size":"10px","background-color":"rgba(69,140,88,0.25)","text-align":"center",width:"50px",height:"34px","border-radius":"4px",border:"2px solid rgb(94,163,123)"}},null,512),[[O,o.newRowValue]])]),a("td",null,[a("button",{class:"button button-new",title:"Add calibration probe with new OD value and measure signal in all 7 vials",onClick:e[1]||(e[1]=l=>t.measureODCalibrationAction({odValue:o.newRowValue}))},"Measure new probe")])])])]),a("div",Ie,[(c(!0),d(g,null,v(o.vials,l=>(c(),A(r,{partId:l,key:l},null,8,["partId"]))),128))])])):D("",!0)],64)}const Oe=_(ve,[["render",Pe],["__scopeId","data-v-83aad882"]]),Ae={name:"SetLEDColor",data(){return{vials:[1,2,3,4,5,6,7],ledColors:{1:{red:0,green:0,blue:0,color:"#000000"},2:{red:0,green:0,blue:0,color:"#000000"},3:{red:0,green:0,blue:0,color:"#000000"},4:{red:0,green:0,blue:0,color:"#000000"},5:{red:0,green:0,blue:0,color:"#000000"},6:{red:0,green:0,blue:0,color:"#000000"},7:{red:0,green:0,blue:0,color:"#000000"}}}},methods:{...w("device",["setLedColor"]),async setLEDColor(t,e){if(e.shiftKey){const{red:i,green:s,blue:o}=this.ledColors[t];for(const n of this.vials)this.ledColors[n].red=i,this.ledColors[n].green=s,this.ledColors[n].blue=o,this.ledColors[n].color=this.ledColors[t].color,await this.setIndividualLEDColor(n)}else await this.setIndividualLEDColor(t)},async setIndividualLEDColor(t){const{red:e,green:i,blue:s}=this.ledColors[t];try{console.log("Setting color for vial",t,"to",e,i,s),await this.setLedColor({vial:t,red:e,green:i,blue:s})}catch(o){console.error(`Failed to set color for vial ${t}:`,o),alert(`Error setting color for vial ${t}`)}},updateColor(t){const e=this.ledColors[t].color,{r:i,g:s,b:o}=this.hexToRgb(e);this.ledColors[t].red=i/255,this.ledColors[t].green=s/255,this.ledColors[t].blue=o/255},hexToRgb(t){const e=parseInt(t.slice(1),16);return{r:e>>16&255,g:e>>8&255,b:e&255}}}},$e={class:"rgb-control-container"},Le={class:"color-selector"},Me=["onUpdate:modelValue","onInput"],Te=["onClick"];function Ee(t,e,i,s,o,n){return c(),d("div",$e,[(c(!0),d(g,null,v(o.vials,r=>(c(),d("div",{class:"vial-container",key:r},[a("div",Le,[a("label",null,f("Vial "+r),1),P(a("input",{type:"color","onUpdate:modelValue":l=>o.ledColors[r].color=l,onInput:l=>n.updateColor(r)},null,40,Me),[[O,o.ledColors[r].color]])]),a("button",{class:"set-color-button",onClick:l=>n.setLEDColor(r,l)},"Set",8,Te)]))),128))])}const Ne=_(Ae,[["render",Ee],["__scopeId","data-v-c1c97778"]]),Re={components:{PumpControl:Ut,ValveControl:zt,StirrerControl:pe,ODControl:Oe,LEDControl:Ne},computed:{...S(["deviceConnected","deviceControlEnabled"]),...S("device",["calibrationModeEnabled","stirrers","pumps","valves","ods"])},data(){return{controlsVisible:!1}},watch:{deviceControlEnabled(t){this.controlsVisible=t}},mounted(){this.deviceConnected||this.connectDevice().then(()=>{this.getAllDeviceData()})},methods:{...ct("device",["toggleCalibrationMode","setDeviceControlEnabled"]),...w("device",["getAllDeviceData"]),...w(["connectDevice"])}},Be={key:0,class:"experiment-running-overlay"},Fe={class:"calibration-switch",style:{"text-align":"right"}},qe={key:2};function Ue(t,e,i,s,o,n){const r=b("v-switch"),l=b("PumpControl"),u=b("ValveControl"),p=b("StirrerControl"),h=b("ODControl"),m=b("LEDControl");return c(),d("div",{class:y(["DeviceControl",{"device-disconnected":t.deviceConnected===!1}])},[t.deviceControlEnabled===!1?(c(),d("div",Be)):D("",!0),a("div",Fe,[C(r,{modelValue:t.calibrationModeEnabled,"onUpdate:modelValue":e[0]||(e[0]=x=>t.calibrationModeEnabled=x),label:"Calibration Mode",onChange:t.toggleCalibrationMode},null,8,["modelValue","onChange"])]),t.deviceControlEnabled||o.controlsVisible?(c(),d(g,{key:1},[C(l),C(u),C(p),C(h),C(m)],64)):(c(),d("p",qe,"Device Control Disabled - please pause experiment to control device."))],2)}const je=_(Re,[["render",Ue],["__scopeId","data-v-ad962e6f"]]);export{je as default};
