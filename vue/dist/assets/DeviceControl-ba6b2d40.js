import{z as Se,N as xe,J as be,O as Ze,k as F,m as ne,p as Oe,A as oe,P as ge,L as me,Q as Ie,_ as Y,B as te,h as K,o as s,c as v,a as l,F as B,i as H,t as N,e as q,w as ie,v as re,j as X,C as $,d as T,R as ke,r as U,f as A,q as R,s as L,l as z,S as _e,M as Xe,T as Ye,U as et,n as De,b as ce,y as ye,g as tt}from"./index-91c68ca6.js";import{u as ae}from"./device-a8ea42a2.js";import{C as ue,B as at,S as nt,a as lt,b as Ee,L as Pe,p as Me,c as Fe,d as Ae,e as ot,P as st}from"./chart-48157de6.js";/* empty css              */const Ve={data:{type:Object,required:!0},options:{type:Object,default:()=>({})},plugins:{type:Array,default:()=>[]},datasetIdKey:{type:String,default:"label"},updateMode:{type:String,default:void 0}},it={ariaLabel:{type:String},ariaDescribedby:{type:String}},rt={type:{type:String,required:!0},destroyDelay:{type:Number,default:0},...Ve,...it},ct=Ze[0]==="2"?(p,a)=>Object.assign(p,{attrs:a}):(p,a)=>Object.assign(p,a);function le(p){return Ie(p)?ge(p):p}function ut(p){let a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:p;return Ie(a)?new Proxy(p,{}):p}function dt(p,a){const e=p.options;e&&a&&Object.assign(e,a)}function Le(p,a){p.labels=a}function Re(p,a,e){const D=[];p.datasets=a.map(f=>{const i=p.datasets.find(k=>k[e]===f[e]);return!i||!f.data||D.includes(i)?{...f}:(D.push(i),Object.assign(i,f),i)})}function vt(p,a){const e={labels:[],datasets:[]};return Le(e,p.labels),Re(e,p.datasets,a),e}const pt=Se({props:rt,setup(p,a){let{expose:e,slots:D}=a;const f=F(null),i=xe(null);e({chart:i});const k=()=>{if(!f.value)return;const{type:M,data:g,options:d,plugins:_,datasetIdKey:u}=p,t=vt(g,u),r=ut(t,g);i.value=new ue(f.value,{type:M,data:r,options:{...d},plugins:_})},O=()=>{const M=ge(i.value);M&&(p.destroyDelay>0?setTimeout(()=>{M.destroy(),i.value=null},p.destroyDelay):(M.destroy(),i.value=null))},P=M=>{M.update(p.updateMode)};return ne(k),Oe(O),oe([()=>p.options,()=>p.data],(M,g)=>{let[d,_]=M,[u,t]=g;const r=ge(i.value);if(!r)return;let I=!1;if(d){const y=le(d),c=le(u);y&&y!==c&&(dt(r,y),I=!0)}if(_){const y=le(_.labels),c=le(t.labels),b=le(_.datasets),h=le(t.datasets);y!==c&&(Le(r.config.data,y),I=!0),b&&b!==h&&(Re(r.config.data,b,p.datasetIdKey),I=!0)}I&&me(()=>{P(r)})},{deep:!0}),()=>be("canvas",{role:"img",ariaLabel:p.ariaLabel,ariaDescribedby:p.ariaDescribedby,ref:f},[be("p",{},[D.default?D.default():""])])}});function Te(p,a){return ue.register(a),Se({props:Ve,setup(e,D){let{expose:f}=D;const i=xe(null),k=O=>{i.value=O==null?void 0:O.chart};return f({chart:i}),()=>be(pt,ct({ref:k},{type:p,...e}))}})}const ft=Te("bar",at),bt=Te("scatter",nt);const gt={class:"pump-data"},mt={class:"iteration-rotation-wrapper"},_t={class:"iteration"},yt={class:"rotation"},ht=["onClick"],Ct={key:0},kt={key:1},Dt=["onUpdate:modelValue","onChange"],wt={class:"chart-container"},$t={key:0,class:"calibration-section"},St={__name:"PumpCalibration",props:{pumpId:{type:Number,required:!0}},setup(p){ue.register(lt,Ee,Pe,Me,Fe,Ae);const a=p,e=ae(),{calibrationModeEnabled:D,pumps:f,valves:i}=te(e),k=F({datasets:[{data:[]}]}),O=F({responsive:!0,devicePixelRatio:4,maintainAspectRatio:!1,plugins:{legend:{display:!1}},backgroundColor:"rgba(0, 140, 186, 0.3)",layout:{padding:{top:20}},scales:{x:{title:{display:!0,text:"rotations"}},y:{title:{display:!0,text:"mL / rotation"},beginAtZero:!1,suggestedMin:.1,suggestedMax:.22}}}),P=F({}),M=F(null),g=F([{rotations:1,iterations:50,total_ml:NaN},{rotations:5,iterations:10,total_ml:NaN},{rotations:10,iterations:5,total_ml:NaN},{rotations:50,iterations:1,total_ml:NaN}]),d=K(()=>{var c,b;return((b=(c=f.value)==null?void 0:c.calibration)==null?void 0:b[a.pumpId])||{}});function _(){return{labels:Object.keys(d.value),datasets:[{label:null,data:Object.values(d.value),fill:!1,borderColor:"rgb(75, 192, 192)",tension:.1}]}}function u(){k.value=_()}function t(c){if(!Object.values(i.value.states).some(h=>h==="open")){alert("At least one valve must be open to start the pump");return}P.value[c]=!P.value[c],P.value[c]?y(g.value[c]):e.setPartStateAction({devicePart:"pumps",partIndex:a.pumpId,newState:"stopped"})}function r(c){P.value[c]=!1}function I(c){c.total_ml&&(e.setPartCalibrationAction({devicePart:"pumps",partIndex:a.pumpId,newCalibration:{...d.value,[c.rotations]:c.total_ml/c.rotations/c.iterations}}),P.value[c]=!1)}async function y(c){if(!confirm(`Pumping ${c.rotations} rotations ${c.iterations} times. Please blank the scale. Continue?`)){const h=g.value.findIndex(m=>m===c);r(h);return}try{const h=Date.now()+Math.random();M.value=h;const m=e.startPumpCalibrationSequence({pumpId:a.pumpId,rotations:c.rotations,iterations:c.iterations});await new Promise(j=>setTimeout(j,100)),await e.fetchDeviceData(),await m;const S=g.value.findIndex(j=>j===c);if(r(S),M.value===h){const j=parseFloat(prompt("Enter total mL pumped"));isNaN(j)||(c.total_ml=j,I(c))}M.value===h&&(M.value=null)}catch(h){console.error("Calibration failed:",h);const m=g.value.findIndex(S=>S===c);r(m),M.value=null}}return ne(()=>{d.value&&u(),g.value.forEach(c=>{c.total_ml=(d.value[c.rotations]||0)*c.rotations*c.iterations,c.total_ml=c.total_ml?c.total_ml.toFixed(2):""})}),oe(d,()=>{u()},{deep:!0}),oe(()=>{var c,b;return(b=(c=f.value)==null?void 0:c.states)==null?void 0:b[a.pumpId]},(c,b)=>{c==="stopped"&&b==="running"&&(Object.values(P.value).some(Boolean)&&M.value&&(M.value=null),Object.keys(P.value).forEach(m=>{P.value[m]&&(P.value[m]=!1)}))}),(c,b)=>(s(),v("div",gt,[l("table",null,[b[1]||(b[1]=l("thead",null,[l("tr",null,[l("th",null,"Calibration Sequence"),l("th"),l("th",null,"Volume (mL)")])],-1)),l("tbody",null,[(s(!0),v(B,null,H(g.value,(h,m)=>(s(),v("tr",{key:m},[l("td",null,[l("div",mt,[l("div",_t,N(h.iterations),1),b[0]||(b[0]=l("div",{class:"multiplier"},"x",-1)),l("div",yt,N(h.rotations)+" rots",1)])]),l("td",null,[l("button",{onClick:S=>t(m),class:q([P.value[m]?"stop-button":"",P.value[m]===!1&&g.value[m].total_ml?"restart-button":""])},[P.value[m]?(s(),v("span",Ct,"Stop")):(s(),v("span",kt,"Start"))],10,ht)]),l("td",null,[ie(l("input",{"onUpdate:modelValue":S=>h.total_ml=S,onChange:S=>I(h),type:"float"},null,40,Dt),[[re,h.total_ml]])])]))),128))])]),l("div",wt,[k.value.datasets[0].data.length>0?(s(),X($(ft),{key:0,id:"pump-calibration-chart",options:O.value,class:"pump-calibration-chart",data:k.value},null,8,["options","data"])):T("",!0)]),$(D)?(s(),v("div",$t)):T("",!0)]))}},xt=Y(St,[["__scopeId","data-v-23032033"]]);const Ot={key:0,class:"pump-controls"},It={key:1},Et={class:"pump-input"},Pt={key:1},Mt={__name:"PumpControl",setup(p){const a=ae(),{pumps:e,valves:D,calibrationModeEnabled:f}=te(a),i=F({});oe(()=>{var t;return(t=e.value)==null?void 0:t.states},t=>{},{immediate:!1});const k={1:"MAIN",2:"DRUG",3:"MISSING!!!",4:"WASTE"},O=ke({1:null,2:null,3:null,4:null}),P=ke({1:null,2:null,3:null,4:null});ne(()=>{e.value||a.fetchDeviceData()});async function M(t){if(i.value[t]&&(clearInterval(i.value[t]),delete i.value[t]),e.value.states[t]==="running"){await a.setPartStateAction({devicePart:"pumps",partIndex:t,newState:"stopped"}),await a.fetchDeviceData();return}if(!Object.values(D.value.states).some(y=>y==="open")){alert("At least one valve must be open to start the pump");return}const I=parseFloat(P[t]);if(!I){alert("Please set the volume before starting the pump");return}try{i.value[t]=setInterval(async()=>{await a.fetchDeviceData(),e.value.states[t]!=="running"&&(clearInterval(i.value[t]),delete i.value[t])},500),await a.setPartStateAction({devicePart:"pumps",partIndex:t,newState:"running",input:{volume:I}}),setTimeout(()=>{i.value[t]&&(clearInterval(i.value[t]),delete i.value[t],a.fetchDeviceData())},3e4)}catch(y){console.error(`Error starting pump ${t}:`,y),e.value.states[t]="stopped",i.value[t]&&(clearInterval(i.value[t]),delete i.value[t])}}function g(t,r){P[r]=t;const I=parseFloat(P[r]);isNaN(I)?O[r]="":O[r]=_(I,r).toFixed(2)}function d(t,r){O[r]=t;const I=parseFloat(O[r]);isNaN(I)?P[r]="":P[r]=u(I,r)}function _(t,r){const I=e.value.calibration[r],y=Object.entries(I).map(([G,se])=>[parseInt(G),se]).sort((G,se)=>G[0]-se[0]);if(t>=y[y.length-1][0]*y[y.length-1][1])return t/y[y.length-1][1];let c=y[0],b=y[y.length-1];for(let G=0;G<y.length-1;G++)if(t>=y[G][0]*y[G][1]&&t<=y[G+1][0]*y[G+1][1]){c=y[G],b=y[G+1];break}const h=c[0]*c[1],m=b[0]*b[1],S=(t-h)/(m-h),j=c[1]+(b[1]-c[1])*S;return t/j}function u(t,r){const I=e.value.calibration[r],y=Object.entries(I).map(([S,j])=>[parseInt(S),j]).sort((S,j)=>S[0]-j[0]);if(t>=y[y.length-1][0])return(t*y[y.length-1][1]).toFixed(2);let c=y[0],b=y[y.length-1];for(let S=0;S<y.length-1;S++)if(t>=y[S][0]&&t<=y[S+1][0]){c=y[S],b=y[S+1];break}const h=(t-c[0])/(b[0]-c[0]),m=c[1]+(b[1]-c[1])*h;return(t*m).toFixed(2)}return(t,r)=>{const I=U("v-progress-circular"),y=U("v-btn"),c=U("v-text-field");return $(e)&&$(e).states?(s(),v("div",Ot,[(s(),v(B,null,H([1,2,4],b=>l("div",{class:"pump",key:b},[A(y,{class:q(["pump-button",{"stop-button":$(e).states[b]==="running"}]),onClick:h=>M(b)},{default:R(()=>[$(e).states[b]==="running"?(s(),X(I,{key:0,indeterminate:"",color:"white",class:"spinner-custom",size:"64"})):(s(),v("span",It,[L(N(k[b]),1),r[0]||(r[0]=l("br",null,null,-1)),r[1]||(r[1]=L("pump"))]))]),_:2},1032,["class","onClick"]),l("div",Et,[A(c,{label:"Volume (mL)",type:"number",dense:"",modelValue:P[b],"onUpdate:modelValue":[h=>P[b]=h,h=>g(h,b)]},null,8,["modelValue","onUpdate:modelValue"]),$(f)?(s(),X(c,{key:0,label:"Rotations",type:"number",dense:"",modelValue:O[b],"onUpdate:modelValue":[h=>O[b]=h,h=>d(h,b)]},null,8,["modelValue","onUpdate:modelValue"])):T("",!0),$(f)?(s(),X(xt,{key:1,pumpId:b},null,8,["pumpId"])):T("",!0)])])),64))])):(s(),v("div",Pt," Loading pump data... "))}}},Ft=Y(Mt,[["__scopeId","data-v-632f9782"]]);const At={class:"valve-calibration"},Vt={class:"warning-header"},Lt={key:0,class:"loading-state"},Rt={key:1,class:"calibration-controls"},Tt={class:"slider-container"},Nt={class:"slider-label"},Ut={class:"value"},Bt={class:"slider-container"},qt={class:"slider-label"},jt={class:"value"},zt={class:"valve-controls"},Gt={__name:"ValveCalibration",props:{valveId:{type:Number,required:!0}},setup(p){const a=p,e=ae(),{valves:D}=te(e),f=F(.03),i=F(.12),k=F(!1),O=F(!0);oe(D,t=>{var r,I;t&&(f.value=((r=t.duty_cycle_open)==null?void 0:r[a.valveId])??.03,i.value=((I=t.duty_cycle_closed)==null?void 0:I[a.valveId])??.12),O.value=!1},{immediate:!0}),ne(async()=>{try{await e.fetchDeviceData()}catch(t){console.error("Error initializing valve calibration:",t),O.value=!1}});async function P(t){var r,I;k.value=!0;try{await e.setPartStateAction({devicePart:"valves",partIndex:a.valveId,newState:t?"open":"closed",input:{dutyCycle:t?f.value:i.value}}),z.success(`Valve ${a.valveId} ${t?"opened":"closed"} successfully`)}catch(y){if(console.error("Error operating valve:",y),!y.response)z.error("Server connection error. Please check if the backend server is running.");else{const c=((I=(r=y.response)==null?void 0:r.data)==null?void 0:I.message)||y.message||"Operation failed";z.error(`Failed to ${t?"open":"close"} valve ${a.valveId}: ${c}`)}}finally{k.value=!1}}async function M(){try{await _e.post("/set-valve-duty-cycle-open",{valve:a.valveId,duty_cycle:f.value}),z.success(`Valve ${a.valveId} open duty cycle set to ${f.value.toFixed(3)}`)}catch(t){console.error("Error updating open duty cycle:",t),z.error(`Failed to update valve ${a.valveId} open duty cycle`)}}async function g(){try{await _e.post("/set-valve-duty-cycle-closed",{valve:a.valveId,duty_cycle:i.value}),z.success(`Valve ${a.valveId} closed duty cycle set to ${i.value.toFixed(3)}`)}catch(t){console.error("Error updating closed duty cycle:",t),z.error(`Failed to update valve ${a.valveId} closed duty cycle`)}}async function d(){f.value=.03,i.value=.12;try{await Promise.all([M(),g()]),z.success(`Valve ${a.valveId} duty cycles reset to defaults`)}catch{z.error(`Failed to reset valve ${a.valveId} duty cycles`)}}function _(t){f.value=t}function u(t){i.value=t}return(t,r)=>{const I=U("v-icon"),y=U("v-progress-circular"),c=U("v-slider"),b=U("v-btn");return s(),v("div",At,[l("div",Vt,[A(I,{color:"error",size:"large"},{default:R(()=>r[4]||(r[4]=[L("warning")])),_:1}),l("h2",null,"Warning! Valve "+N(p.valveId)+" Calibration Mode",1)]),O.value?(s(),v("div",Lt,[A(y,{indeterminate:"",color:"primary"}),r[5]||(r[5]=l("span",null,"Loading valve data...",-1))])):(s(),v("div",Rt,[l("div",Tt,[l("div",Nt,[r[6]||(r[6]=l("span",null,"Open Duty Cycle",-1)),l("span",Ut,N(f.value.toFixed(3)),1)]),A(c,{modelValue:f.value,"onUpdate:modelValue":[r[0]||(r[0]=h=>f.value=h),_],min:.02,max:.04,step:.001,color:"primary","track-color":"grey","thumb-label":"",onMouseup:M},null,8,["modelValue"])]),l("div",Bt,[l("div",qt,[r[7]||(r[7]=l("span",null,"Closed Duty Cycle",-1)),l("span",jt,N(i.value.toFixed(3)),1)]),A(c,{modelValue:i.value,"onUpdate:modelValue":[r[1]||(r[1]=h=>i.value=h),u],min:.11,max:.13,step:.001,color:"primary","track-color":"grey","thumb-label":"",onMouseup:g},null,8,["modelValue"])]),l("div",zt,[A(b,{color:"success",onClick:r[2]||(r[2]=h=>P(!0)),loading:k.value,disabled:k.value},{default:R(()=>r[8]||(r[8]=[L(" Open Valve ")])),_:1},8,["loading","disabled"]),A(b,{color:"error",onClick:r[3]||(r[3]=h=>P(!1)),loading:k.value,disabled:k.value},{default:R(()=>r[9]||(r[9]=[L(" Close Valve ")])),_:1},8,["loading","disabled"]),A(b,{color:"primary",onClick:d},{default:R(()=>r[10]||(r[10]=[L(" Reset Defaults ")])),_:1})])]))])}}},Kt=Y(Gt,[["__scopeId","data-v-2b40de6c"]]);const Wt={class:"valve-controls"},Ht=["onClick","disabled"],Jt={key:0,class:"spinner-border spinner-custom",role:"status"},Qt={key:1},Zt={__name:"ValveControl",setup(p){const a=ae(),{valves:e}=te(a),D=F({}),f=new(window.AudioContext||window.webkitAudioContext),i=F(!1),k=F(null);function O(g){const d=g==="open"?500:300,_=g==="open"?300:500,u=f.createOscillator();u.type="sine";const t=f.createGain();return t.gain.setValueAtTime(.1,f.currentTime),u.connect(t),t.connect(f.destination),u.frequency.setValueAtTime(d,f.currentTime),u.frequency.linearRampToValueAtTime(_,f.currentTime+.3),u.start(),u.stop(f.currentTime+.3),u}async function P(g){const d=e.value.states[g];if(D.value[g])return;D.value={...D.value,[g]:!0};const _=O(d);try{await a.setPartStateAction({devicePart:"valves",partIndex:g,newState:d==="open"?"closed":"open"}),_.stop()}catch(u){console.error(u)}finally{D.value={...D.value,[g]:!1}}}function M(g,d){if(d.ctrlKey&&d.shiftKey){k.value=g,i.value=!0;return}P(g)}return(g,d)=>{const _=U("v-dialog");return s(),v(B,null,[l("div",Wt,[(s(),v(B,null,H(7,u=>l("button",{class:q(["btn",{"btn-danger":$(e).states[u]==="closed"&&!D.value[u],"btn-success":$(e).states[u]==="open"&&!D.value[u],"btn-warning":D.value[u]}]),key:u,onClick:t=>M(u,t),disabled:D.value[u]},[D.value[u]?(s(),v("div",Jt)):(s(),v("span",Qt,"Valve "+N(u),1))],10,Ht)),64))]),A(_,{modelValue:i.value,"onUpdate:modelValue":d[1]||(d[1]=u=>i.value=u),"max-width":"600"},{default:R(()=>[i.value?(s(),X(Kt,{key:0,valveId:k.value,onClose:d[0]||(d[0]=u=>i.value=!1)},null,8,["valveId"])):T("",!0)]),_:1},8,["modelValue"])],64)}}},Xt=Y(Zt,[["__scopeId","data-v-a341c808"]]);const Yt={class:"elements-container"},ea={class:"stirrer-name"},ta={key:0},aa={style:{position:"relative",display:"inline-block"}},na={style:{position:"relative",display:"inline-block"}},la={class:"buttons-container"},we=0,$e=1,oa={__name:"StirrerCalibration",props:{stirrerId:{type:Number,required:!0}},setup(p){const a=p,e=F(null),D=F(null),f=F(null),i=new(window.AudioContext||window.webkitAudioContext);let k=null,O=null,P=null;const M=ae(),{calibrationModeEnabled:g,stirrers:d}=te(M),_=K(()=>d.value&&d.value.states?d.value.states[a.stirrerId]:void 0);function u(h){M.setPartStateAction({devicePart:"stirrers",partIndex:a.stirrerId,newState:h})}function t(h){if(d.value&&d.value.states)for(let m=1;m<=7;m++)d.value.states[m]=h;M.setAllStirrersStateAction&&M.setAllStirrersStateAction(h)}function r(h,m){y(m.target.value)}function I(h,m){!d.value||!d.value.calibration||!d.value.calibration[a.stirrerId]||M.setPartCalibrationAction({devicePart:"stirrers",partIndex:a.stirrerId,newCalibration:{low:d.value.calibration[a.stirrerId].low,high:d.value.calibration[a.stirrerId].high}}).catch(S=>{console.error("Error updating stirrer calibration:",S)})}function y(h){k||(k=i.createOscillator(),O=i.createGain(),k.type="sine",O.gain.setValueAtTime(.1,i.currentTime),k.connect(O),O.connect(i.destination),k.start());const m=300+h*500;k.frequency.setValueAtTime(m,i.currentTime),P&&clearTimeout(P),P=setTimeout(c,200)}function c(){k&&(O.gain.exponentialRampToValueAtTime(.001,i.currentTime+.01),O.gain.setValueAtTime(.1,i.currentTime+.02),k.stop(i.currentTime+.02),k=null,O=null)}function b(h,m){(h==="high"&&_.value!=="high"||h==="low"&&_.value!=="low")&&(m.preventDefault(),z("Enable stirrer to adjust speed",{type:"info"}))}return ne(()=>{window.addEventListener("resize",()=>{})}),Xe(()=>{window.removeEventListener("resize",()=>{})}),(h,m)=>(s(),v("div",{class:"stirrer-calibrator",ref_key:"container",ref:e},[l("div",Yt,[l("div",ea,[l("header",null,"Stirrer "+N(p.stirrerId),1)]),$(g)&&$(d)&&$(d).calibration&&$(d).calibration[p.stirrerId]?(s(),v("div",ta,[l("div",aa,[ie(l("input",{type:"range",class:q(["slider slider-high",[{active:_.value==="high"},{"slider-disabled":_.value!=="high"}]]),min:we,max:$e,step:.01,"onUpdate:modelValue":m[0]||(m[0]=S=>$(d).calibration[p.stirrerId].high=S),onInput:m[1]||(m[1]=S=>r("high",S)),onChange:m[2]||(m[2]=S=>I())},null,34),[[re,$(d).calibration[p.stirrerId].high,void 0,{number:!0}]]),_.value!=="high"?(s(),v("div",{key:0,class:"slider-overlay",onClick:m[3]||(m[3]=S=>b("high",S))})):T("",!0)]),l("div",na,[ie(l("input",{type:"range",class:q(["slider slider-low",[{active:_.value==="low"},{"slider-disabled":_.value!=="low"}]]),min:we,max:$e,step:.01,"onUpdate:modelValue":m[4]||(m[4]=S=>$(d).calibration[p.stirrerId].low=S),onInput:m[5]||(m[5]=S=>r("low",S)),onChange:m[6]||(m[6]=S=>I())},null,34),[[re,$(d).calibration[p.stirrerId].low,void 0,{number:!0}]]),_.value!=="low"?(s(),v("div",{key:0,class:"slider-overlay",onClick:m[7]||(m[7]=S=>b("low",S))})):T("",!0)])])):T("",!0),l("div",la,[l("button",{class:q(["button button-high",{active:_.value==="high"}]),ref_key:"buttonHigh",ref:D,onClick:m[8]||(m[8]=S=>u("high")),onDblclick:m[9]||(m[9]=S=>t("high"))},"High",34),l("button",{class:q(["button button-low",{active:_.value==="low"}]),ref_key:"buttonLow",ref:f,onClick:m[10]||(m[10]=S=>u("low")),onDblclick:m[11]||(m[11]=S=>t("low"))},"Low",34),l("button",{class:q(["button button-off",{active:_.value==="stopped"}]),ref:"buttonOff",onClick:m[12]||(m[12]=S=>u("stopped")),onDblclick:m[13]||(m[13]=S=>t("stopped"))},"OFF",34)])])],512))}},sa=Y(oa,[["__scopeId","data-v-d01f6391"]]);const ia={name:"StirrerControl",components:{StirrerCalibration:sa}},ra={class:"stirrer-controls"};function ca(p,a,e,D,f,i){const k=U("StirrerCalibration");return s(),v("div",ra,[(s(),v(B,null,H(7,O=>A(k,{key:O,stirrerId:O},null,8,["stirrerId"])),64))])}const ua=Y(ia,[["render",ca],["__scopeId","data-v-6cada7fd"]]),da={className:"single-chart-container"},va={__name:"ODChart",props:{partId:{type:Number,required:!0}},setup(p){ue.register(Me,Fe,Ae,ot,Ee,Pe,st);const a=p,e=ae(),{ods:D}=te(e),f=K(()=>{var g,d;return(d=(g=D.value)==null?void 0:g.calibration)==null?void 0:d[a.partId]}),i=K(()=>{var g,d;return(d=(g=D.value)==null?void 0:g.calibration_coefs)==null?void 0:d[a.partId]}),k=K(()=>{var g,d,_,u;return{od:(d=(g=D.value)==null?void 0:g.states)==null?void 0:d[a.partId],signal:(u=(_=D.value)==null?void 0:_.odsignals)==null?void 0:u[a.partId]}});function O(g,d,_){return-Math.log10(g/d)*_}const P=K(()=>{if(f.value&&typeof f.value=="object"&&i.value){const g=Object.entries(f.value).filter(([t,r])=>r!==null).map(([t,r])=>({x:Number(r),y:Number(t)})).sort((t,r)=>t.x-r.x);let d=Math.min(...g.map(t=>t.x)),_=Math.max(...g.map(t=>t.x));const u=[];d===_&&(d=0,_=50);for(let t=d;t<=_;t+=.1){const r=O(t,...i.value);u.push({x:t,y:r})}return{datasets:[{label:`Vial ${a.partId} Calibration OD`,data:g,borderColor:"#607ecb",backgroundColor:"rgba(83,158,255,0.64)"},{label:`Vial ${a.partId} Current OD`,data:[{x:k.value.signal,y:k.value.od}],pointRadius:5,backgroundColor:"rgba(255,1,60,0.64)"},{label:`Vial ${a.partId} Fit`,data:u,pointRadius:0,borderColor:"rgba(0,70,220,0.38)",borderWidth:2,showLine:!0,fill:!1,borderDash:[2,2]}]}}return{}}),M=K(()=>{var g,d;return{devicePixelRatio:4,responsive:!0,maintainAspectRatio:!1,plugins:{legend:{display:!1},title:{display:!0,text:`Vial ${a.partId}`+(i.value?`
blank: ${(g=i.value[0])==null?void 0:g.toFixed(2)}, scaling: ${(d=i.value[1])==null?void 0:d.toFixed(2)}`:"")}},scales:{x:{title:{display:!0,text:"Signal (mV)"},suggestedMin:0},y:{title:{display:!0,text:"OD"},suggestedMax:1.5,suggestedMin:0}}}});return(g,d)=>(s(),v("div",da,[A($(bt),{data:P.value,options:M.value},null,8,["data","options"])]))}};F({show:!1,title:"",content:"",resolve:null});const pa={class:"guide-popup"},fa={class:"guide-header"},ba={__name:"ODGuide",setup(p){return(a,e)=>{const D=U("v-icon");return s(),v("div",{class:"guide-overlay",onClick:e[1]||(e[1]=et(f=>a.$emit("close"),["self"]))},[l("div",pa,[l("div",fa,[e[3]||(e[3]=l("span",{class:"guide-title"},"OD Calibration Guide",-1)),l("button",{class:"guide-close",onClick:e[0]||(e[0]=f=>a.$emit("close"))},[A(D,null,{default:R(()=>e[2]||(e[2]=[L("mdi-close")])),_:1})])]),e[4]||(e[4]=Ye('<div class="guide-content" data-v-8d7af6ce><div class="guide-section" data-v-8d7af6ce><b class="section-title" data-v-8d7af6ce>What is Optical Density (OD)?</b><br data-v-8d7af6ce><span class="guide-text" data-v-8d7af6ce> Optical Density (OD) measures how much light is absorbed by a sample. The higher the OD, the more cells or particles are in the solution. </span></div><div class="guide-section" data-v-8d7af6ce><b class="section-title" data-v-8d7af6ce>Beer-Lambert Law and Scaling Factor</b><br data-v-8d7af6ce><span class="guide-text" data-v-8d7af6ce> The Beer-Lambert Law relates OD to the transmitted light signal: </span><br data-v-8d7af6ce><span class="formula" data-v-8d7af6ce> OD = -log₁₀(signal / blank_signal) </span><br data-v-8d7af6ce><span class="guide-text" data-v-8d7af6ce> In our devices, the light path is not a standard 1cm cuvette. The curved shape of the vial and the sensor design affect how light travels through the sample. This is corrected using a scaling factor: </span><br data-v-8d7af6ce><span class="formula" data-v-8d7af6ce> OD = -log₁₀(signal / blank_signal) * scaling </span><br data-v-8d7af6ce></div><div class="guide-section" data-v-8d7af6ce><b class="section-title" data-v-8d7af6ce>Calibration Process</b><div class="method-panel" data-v-8d7af6ce><div class="method-heading" data-v-8d7af6ce>Step 1: Measure OD₀ (Blank Signal)</div><div class="od-warning-box" data-v-8d7af6ce><b data-v-8d7af6ce>Important: OD₀ must be measured with a vial containing growth medium!</b><div class="od-warning-details" data-v-8d7af6ce> - Use the same growth medium that will be used in your experiment<br data-v-8d7af6ce> - The vial must be filled with liquid<br data-v-8d7af6ce> - A good blank signal should be above 20mV<br data-v-8d7af6ce> - If the signal is below 20mV, check for:<br data-v-8d7af6ce>   • Proper vial alignment<br data-v-8d7af6ce>   • Clean sensors and vials<br data-v-8d7af6ce>   • No obstructions in the light path </div></div></div><div class="method-panel" data-v-8d7af6ce><div class="method-heading" data-v-8d7af6ce>Step 2 (Optional): Measure additional OD values to calibrate the scaling factor</div><div class="option-container" data-v-8d7af6ce><div class="option-box" data-v-8d7af6ce><div class="method-subheading" data-v-8d7af6ce>Option A: Using Liquid Samples (Recommended)</div><ol class="guide-ol" data-v-8d7af6ce><li data-v-8d7af6ce>Prepare a vial with a known OD between 0.1 and 2.0: </li><li data-v-8d7af6ce>Insert this vial into each slot and measure its signal using the calibration table.</li><li data-v-8d7af6ce>The scaling factor will be automatically calculated from these measurements.</li><i data-v-8d7af6ce>Repeat with different OD values for increased accuracy.</i></ol></div><div class="option-box" data-v-8d7af6ce><div class="method-subheading" data-v-8d7af6ce>Option B: Using Semitransparent Sheets</div><ol class="guide-ol" data-v-8d7af6ce><li data-v-8d7af6ce>Determine the equivalent OD of one or more semitransparent sheets (using a solution which creates the same signal as the sheet inserted in the sensor)</li><li data-v-8d7af6ce>Place the sheet over all sensors at once</li><li data-v-8d7af6ce>Measure the signals and the scaling factor will be calculated automatically</li><i data-v-8d7af6ce>Note: This method is less accurate than using liquid samples</i></ol></div></div></div><div class="method-panel" data-v-8d7af6ce><div class="method-heading" data-v-8d7af6ce>Step 3: Final Check</div><div class="guide-text" data-v-8d7af6ce> Ideally, remeasure OD₀ just before starting the experiment. Small changes in the position of the vial and media composition can affect the signal. </div></div></div></div>',1))])])}}},ga=Y(ba,[["__scopeId","data-v-8d7af6ce"]]);const ma={class:"od-control-container"},_a=["onClick","disabled"],ya={key:1},ha={key:0,class:"od-output-value error-message"},Ca={key:3,class:"signal-output-value error-message"},ka={key:0,class:"calibration-section"},Da={class:"probe-table-outer-container",style:{"margin-bottom":"18px"}},wa={class:"table-controls"},$a={class:"mode-controls"},Sa={class:"calibration-table-wrapper"},xa={class:"calibration-table"},Oa={key:0,style:{width:"36px"}},Ia={class:"od-value-container"},Ea=["onDblclick"],Pa=["value","onInput","onBlur","onKeyup"],Ma=["title"],Fa={key:1,class:"signal-value"},Aa={key:1,class:"signal-value"},Va={key:1,class:"measure-cell-container"},La=["onDblclick"],Ra=["onDblclick"],Ta=["value","onInput","onBlur","onKeyup"],Na=["onClick","disabled","title"],Ua={key:0,class:"measure-button-content"},Ba={key:1,class:"measure-button-content"},qa={key:0,style:{"text-align":"center",width:"36px",padding:"4px"}},ja=["onClick","disabled"],za={key:1,style:{width:"36px"}},Ga={key:0},Ka={class:"scaling-factor-container"},Wa={class:"calibration-table"},Ha={class:"scaling-factor-row"},Ja=["title"],Qa=["onUpdate:modelValue"],Za={key:1,class:"scaling-factor-value"},Xa={key:0,style:{width:"40px"}},Ya={key:0,class:"chart-container"},en={__name:"ODControl",setup(p){const a=ae(),{ods:e,calibrationModeEnabled:D}=te(a),{openDialog:f}=ye(),i=[1,2,3,4,5,6,7],k=F(!1),O=F(!0),P=F(!1),M=F(!1),g=F(null),d=F({}),_=F({}),u=F({}),t=K(()=>{let o=new Set;if(e.value.calibration)for(let E in e.value.calibration)for(let V in e.value.calibration[E])o.add(V);return Array.from(o).sort((E,V)=>parseFloat(E)-parseFloat(V))}),r=K(()=>{if(!e.value.calibration)return[];const o=new Set;for(const n in e.value.calibration)for(const E in e.value.calibration[n])o.add(parseFloat(E));return Array.from(o).sort((n,E)=>n-E)}),I=F(new Set),y=K(()=>{const o=e.value.calibration_coefs||{};return i.map(n=>{var E;return((E=o[n])==null?void 0:E[1])??"—"})}),c=F([]);oe(y,o=>{c.value=[...o]},{immediate:!0}),ne(()=>{a.fetchDeviceData(),document.addEventListener("click",b)}),Oe(()=>{document.removeEventListener("click",b)});function b(o){if(Z.value&&!o.target.closest(".calibration-signal")&&ve(Z.value.vial,Z.value.odValue),ee.value&&!o.target.closest(".od-value-input")){const n=r.value.indexOf(ee.value);n!==-1&&de(ee.value,n),ee.value=null}}async function h(o){var n,E;if(console.log("handleOdClick called with odIndex:",o,typeof o),g.value===null){g.value=o,delete d.value[o];try{console.log("Starting OD measurement for index:",o);const V=await _e.post("/measure-ods",{partIndex:o});if(console.log("Raw API response:",V),V.data.success)console.log("OD measurement successful for index:",o),await a.fetchDeviceData(),delete d.value[o];else throw console.log("API returned failure for index:",o),new Error(V.data.message||"Measurement failed")}catch(V){console.error("Error measuring OD:",V),console.log("Setting error for OD index:",o);const C=((E=(n=V.response)==null?void 0:n.data)==null?void 0:E.message)||V.message||"Measurement failed";d.value={...d.value,[o]:C},console.log("Error set for odIndex:",o,"error:",C),console.log("Full odErrors object:",d.value)}finally{g.value=null}}}function m(o,n,E){u.value[n]||(u.value[n]={}),u.value[n][E]=parseFloat(o.target.value)}function S(o,n){if(u.value[o]&&u.value[o][n]!==void 0){e.value.calibration[o]||(e.value.calibration[o]={});const E=u.value[o][n];isNaN(u.value[o][n])&&delete e.value.calibration[o][n],a.updateODCalibrationValueAction({od:n,vial:o,newValue:E}).catch(V=>{console.error(`Error updating calibration for vial ${o}:`,V)}),delete u.value[o][n]}}function j(o,n){return u.value[o]&&u.value[o][n]!==void 0?u.value[o][n]:e.value.calibration&&e.value.calibration[o]&&e.value.calibration[o][n]!==void 0?e.value.calibration[o][n]:""}function G(o,n){if(!e.value.calibration||!e.value.calibration[o]||e.value.calibration[o][n]===void 0)return{background:""};const E=parseFloat(e.value.calibration[o][n]),V=5,C=40;let w;if(E<=0)w=V;else{const x=Math.log(10),J=Math.log(1e3),Qe=(Math.log(Math.max(10,Math.min(1e3,E)))-x)/(J-x);w=V+Qe*(C-V)}return{background:`rgba(255, 100, 100, ${w/100})`}}function se(o){if(o==null)return"";const n=parseFloat(o);if(isNaN(n))return"";const E=.02,V=.25,C=Math.max(0,Math.min(4,n)),w=Math.log(C+1)/Math.log(5),x=E+w*(V-E);return`background: linear-gradient(to right, rgba(255, 235, 156, ${x}), rgba(255, 235, 156, ${x*.6}))`}async function de(o,n,E){if(_.value[n]!==void 0){const V=_.value[n];if(r.value.some((w,x)=>x!==n&&parseFloat(w)===parseFloat(V))&&!await f({title:"Duplicate OD Value",message:`An OD probe value of ${V} already exists. Are you sure you want to overwrite?`,showCancel:!0})){delete _.value[n];return}r.value[n]=V,delete _.value[n];try{for(let w in e.value.calibration){const x=e.value.calibration[w],J=JSON.parse(JSON.stringify(x));x[o]!==void 0&&(delete J[o],J[V]=x[o],await a.setPartCalibrationAction({devicePart:"ods",partIndex:w,newCalibration:J}))}await a.fetchDeviceData()}catch(w){console.error("Error updating calibration:",w),z.error("Failed to update calibration values")}}}function Ne(o,n){console.log("handleProbeValueInput",o.target.value),_.value[n]=parseFloat(o.target.value)}function Ue(){P.value=!0}function Be(){P.value=!1}function qe(){if(!r.value.length)return .1;const o=Math.max(...r.value);return parseFloat((o+.1).toFixed(2))}async function je(){const o=qe();for(const n of i)e.value.calibration[n]||(e.value.calibration[n]={}),e.value.calibration[n][o]=null,await a.setPartCalibrationAction({devicePart:"ods",partIndex:n,newCalibration:e.value.calibration[n]});await a.fetchDeviceData()}async function ze(o){const n=t.value[o];I.value.add(n);for(const E of i)e.value.calibration[E]&&(delete e.value.calibration[E][n],await a.setPartCalibrationAction({devicePart:"ods",partIndex:E,newCalibration:e.value.calibration[E]}));await a.fetchDeviceData(),I.value.delete(n)}const W={VIEW:"view",MEASURE:"measure"},Q=F(W.VIEW);K(()=>({"view-mode":Q.value===W.VIEW,"measure-mode":Q.value===W.MEASURE}));async function Ge(o,n){try{await a.measureDevicePart({devicePart:"ods",partIndex:o});const E=e.value.odsignals[o];await a.updateODCalibrationValueAction({od:n,vial:o,newValue:E}),await a.fetchDeviceData()}catch(E){console.error("Error measuring cell:",E)}}const Z=F(null),Ke=F(null);function Ce(o,n){Z.value={vial:o,odValue:n},me(()=>{const E=document.querySelector(".calibration-signal");E&&E.focus()})}function ve(o,n){u.value[o]&&u.value[o][n]!==void 0&&S(o,n),Z.value=null}function We(){if(Z.value=null,Z.value){const{vial:o,odValue:n}=Z.value;u.value[o]&&delete u.value[o][n]}}const ee=F(null);function He(o,n){ee.value=o,me(()=>{const E=document.querySelector(".od-value-input");E&&E.focus()})}function Je(){if(ee.value=null,ee.value){const o=r.value.indexOf(ee.value);o!==-1&&_.value[o]&&delete _.value[o]}}const pe=(o,n)=>({icon:"",color:"#90caf9",tooltip:"Scaling factor"}),fe=o=>typeof o!="number"?{icon:"mdi-help-circle-outline",color:"grey",tooltip:"No signal value available"}:o>=20?{icon:"mdi-check-circle",color:"#4caf50",tooltip:"Signal value within expected range"}:o>=12?{icon:"mdi-alert-circle",color:"#ffc107",tooltip:"Signal value slightly low. Consider recalibrating"}:{icon:"mdi-close-circle",color:"#f44336",tooltip:"Signal value too low. Check OD sensor"};return(o,n)=>{const E=U("v-progress-circular"),V=U("v-icon");return s(),v(B,null,[l("div",ma,[(s(!0),v(B,null,H($(e).states,(C,w)=>(s(),v("div",{class:"elements-container",key:w},[l("button",{class:"od-button",onClick:x=>h(w),disabled:g.value===w},[g.value===w?(s(),X(E,{key:0,indeterminate:"",color:"white",size:"24"})):(s(),v("span",ya,"OD "+N(w),1))],8,_a),d.value[w]?(s(),v("span",ha,N(d.value[w]),1)):$(e).states&&$(e).states[w]!==void 0&&$(e).states[w]!==0?(s(),v("span",{key:1,class:q(["od-output-value",{"value-being-replaced":g.value===w}])},N(parseFloat($(e).states[w].toFixed(2))),3)):(s(),v("span",{key:2,class:q(["od-output-value",{"value-being-replaced":g.value===w}])},"---",2)),n[1]||(n[1]=l("div",{style:{height:"0.5px"}},null,-1)),d.value[w]?(s(),v("span",Ca)):$(e).odsignals&&$(e).odsignals[w]!==void 0&&$(e).odsignals[w]!==0?(s(),v("span",{key:4,class:q(["signal-output-value",{"value-being-replaced":g.value===w}])},"("+N(parseFloat($(e).odsignals[w].toFixed(2)))+"mV)",3)):(s(),v("span",{key:5,class:q(["signal-output-value",{"value-being-replaced":g.value===w}])},"(---)",2))]))),128))]),$(D)?(s(),v("div",ka,[l("div",Da,[n[6]||(n[6]=l("div",{style:{display:"flex","align-items":"center","margin-bottom":"8px"}},null,-1)),l("div",wa,[n[5]||(n[5]=l("div",{style:{flex:"1"}},null,-1)),l("div",$a,[l("button",{class:q(["control-button mode-toggle",{active:Q.value===W.MEASURE}]),onClick:n[0]||(n[0]=C=>Q.value=Q.value===W.MEASURE?W.VIEW:W.MEASURE)},[A(V,null,{default:R(()=>n[2]||(n[2]=[L("mdi-pencil")])),_:1}),n[3]||(n[3]=L(" Edit "))],2)]),l("button",{class:"control-button help-button",onClick:Ue},[A(V,null,{default:R(()=>n[4]||(n[4]=[L("mdi-help-circle-outline")])),_:1})])])]),n[15]||(n[15]=l("div",{class:"calibration-controls"},null,-1)),l("div",Sa,[l("table",xa,[l("thead",null,[l("tr",null,[n[7]||(n[7]=l("th",{style:{width:"110px"}},"OD Value",-1)),(s(),v(B,null,H(i,C=>l("th",{key:C,style:{width:"90px"}},"Vial "+N(C),1)),64)),k.value?(s(),v("th",Oa)):T("",!0)])]),l("tbody",null,[(s(!0),v(B,null,H(t.value,(C,w)=>(s(),v("tr",{key:C,class:q({"od-zero-row":parseFloat(C)===0})},[l("td",{style:De([{width:"110px"},se(C)])},[l("div",Ia,[!ee.value||ee.value!==C?(s(),v("span",{key:0,class:"od-value-display",onDblclick:x=>He(C),title:"Double click to edit"},N(w<r.value.length?_.value[w]!==void 0?_.value[w]:r.value[w]:C),41,Ea)):(s(),v("input",{key:1,value:_.value[w]!==void 0?_.value[w]:r.value[w],onInput:x=>Ne(x,w),onBlur:x=>de(C,w),onKeyup:[ce(x=>de(C,w),["enter"]),ce(Je,["esc"])],type:"number",step:"0.1",class:"od-value-input",ref_for:!0,ref:"odValueInput"},null,40,Pa))])],4),(s(),v(B,null,H(i,x=>l("td",{key:x,class:q({"has-data":$(e).calibration&&$(e).calibration[x]&&$(e).calibration[x][C]!==void 0}),style:De({background:G(x,C).background})},[Q.value===W.VIEW?(s(),v(B,{key:0},[$(e).calibration&&$(e).calibration[x]&&$(e).calibration[x][C]!==void 0&&$(e).calibration[x][C]!==null?(s(),v(B,{key:0},[parseFloat(C)===0?(s(),v("div",{key:0,class:"signal-value-with-status",title:fe($(e).calibration[x][C]).tooltip},[L(N($(e).calibration[x][C].toFixed(2))+" ",1),A(V,{color:fe($(e).calibration[x][C]).color,size:"small",style:{"margin-left":"4px"}},{default:R(()=>[L(N(fe($(e).calibration[x][C]).icon),1)]),_:2},1032,["color"])],8,Ma)):(s(),v("div",Fa,N($(e).calibration[x][C].toFixed(2)),1))],64)):(s(),v("div",Aa,"---"))],64)):Q.value===W.MEASURE?(s(),v("div",Va,[$(e).calibration&&$(e).calibration[x]&&$(e).calibration[x][C]!==void 0&&$(e).calibration[x][C]!==null?(s(),v("span",{key:0,class:"signal-value measure-background-value",onDblclick:J=>Ce(x,C),title:"Double click to edit"},N(parseFloat($(e).calibration[x][C]).toFixed(2))+"mV ",41,La)):(s(),v("span",{key:1,class:"signal-value measure-background-value empty-value",onDblclick:J=>Ce(x,C),title:"Double click to edit"}," ——— ",40,Ra)),Z.value&&Z.value.vial===x&&Z.value.odValue===C?(s(),v("input",{key:2,value:j(x,C),onInput:J=>m(J,x,C),onBlur:J=>ve(x,C),onKeyup:[ce(J=>ve(x,C),["enter"]),ce(We,["esc"])],type:"number",class:"calibration-signal",ref_for:!0,ref_key:"editingInput",ref:Ke},null,40,Ta)):T("",!0),l("button",{class:"measure-cell-button",onClick:J=>Ge(x,C),disabled:M.value,title:`Calibrate OD ${parseFloat(C).toFixed(2)} signal in vial ${x} (measure now)`},[M.value?(s(),v("span",Ua,n[8]||(n[8]=[l("span",{class:"loading-spinner"},null,-1)]))):(s(),v("span",Ba,[A(V,null,{default:R(()=>n[9]||(n[9]=[L("mdi-camera-metering-center")])),_:1})]))],8,Na)])):T("",!0)],6)),64)),Q.value===W.MEASURE&&parseFloat(t.value[w])!==0?(s(),v("td",qa,[l("button",{class:"delete-od-row",onClick:x=>ze(w),disabled:I.value.has(t.value[w]),title:"Delete row"},[A(V,null,{default:R(()=>n[10]||(n[10]=[L("mdi-delete")])),_:1})],8,ja)])):Q.value===W.MEASURE?(s(),v("td",za)):T("",!0)],2))),128)),Q.value===W.MEASURE?(s(),v("tr",Ga,[l("td",null,[l("button",{class:"add-od-probe-table",onClick:je},[A(V,null,{default:R(()=>n[11]||(n[11]=[L("mdi-plus")])),_:1}),n[12]||(n[12]=L(" Add "))])]),(s(),v(B,null,H(i,C=>l("td",{key:"add-row-"+C})),64)),n[13]||(n[13]=l("td",null,null,-1))])):T("",!0)])])]),l("div",Ka,[l("table",Wa,[l("tbody",null,[l("tr",Ha,[n[14]||(n[14]=l("th",{class:"scaling-factor-label"},"Scaling Factor",-1)),(s(!0),v(B,null,H(c.value,(C,w)=>(s(),v("th",{key:"sf-head-"+w,class:"scaling-factor-cell",title:pe().tooltip},[k.value?ie((s(),v("input",{key:0,type:"number",step:"0.01",min:"0.1","onUpdate:modelValue":x=>c.value[w]=x,style:{width:"60px","text-align":"center",background:"#23272e",color:"#90caf9",border:"1px solid #444","border-radius":"4px"}},null,8,Qa)),[[re,c.value[w],void 0,{number:!0}]]):(s(),v("div",Za,[L(N(typeof C=="number"?C.toFixed(2):C)+" ",1),A(V,{color:pe().color,size:"small",style:{"margin-left":"4px"}},{default:R(()=>[L(N(pe(C,w+1).icon),1)]),_:2},1032,["color"])]))],8,Ja))),128)),Q.value===W.MEASURE?(s(),v("th",Xa)):T("",!0)])])])]),O.value?(s(),v("div",Ya,[(s(),v(B,null,H(i,C=>A(va,{partId:C,key:C},null,8,["partId"])),64))])):T("",!0)])):T("",!0),P.value?(s(),X(ga,{key:1,onClose:Be})):T("",!0)],64)}}},tn=Y(en,[["__scopeId","data-v-0e29d61e"]]);const he=ae(),{leds:an}=te(he);ne(()=>{an.value||he.fetchDeviceData()});const nn={name:"SetLEDColor",data(){return{vials:[1,2,3,4,5,6,7],ledColors:{1:{red:0,green:0,blue:0,color:"#000000"},2:{red:0,green:0,blue:0,color:"#000000"},3:{red:0,green:0,blue:0,color:"#000000"},4:{red:0,green:0,blue:0,color:"#000000"},5:{red:0,green:0,blue:0,color:"#000000"},6:{red:0,green:0,blue:0,color:"#000000"},7:{red:0,green:0,blue:0,color:"#000000"}}}},methods:{async setLEDColor(p,a){if(a.shiftKey){const{red:e,green:D,blue:f}=this.ledColors[p];for(const i of this.vials)this.ledColors[i].red=e,this.ledColors[i].green=D,this.ledColors[i].blue=f,this.ledColors[i].color=this.ledColors[p].color,await this.setIndividualLEDColor(i)}else await this.setIndividualLEDColor(p)},async setIndividualLEDColor(p){const{red:a,green:e,blue:D}=this.ledColors[p];try{console.log("Setting color for vial",p,"to",a,e,D),await he.setLedColor(p,a,e,D)}catch(f){console.error(`Failed to set color for vial ${p}:`,f),alert(`Error setting color for vial ${p}`)}},updateColor(p){const a=this.ledColors[p].color,{r:e,g:D,b:f}=this.hexToRgb(a);this.ledColors[p].red=e/255,this.ledColors[p].green=D/255,this.ledColors[p].blue=f/255},hexToRgb(p){const a=parseInt(p.slice(1),16);return{r:a>>16&255,g:a>>8&255,b:a&255}}}},ln={class:"rgb-control-container"},on={class:"color-selector"},sn=["onUpdate:modelValue","onInput"],rn=["onClick"];function cn(p,a,e,D,f,i){return s(),v("div",ln,[(s(!0),v(B,null,H(f.vials,k=>(s(),v("div",{class:"vial-container",key:k},[l("div",on,[l("label",null,N("Vial "+k),1),ie(l("input",{type:"color","onUpdate:modelValue":O=>f.ledColors[k].color=O,onInput:O=>i.updateColor(k)},null,40,sn),[[re,f.ledColors[k].color]])]),l("button",{class:"set-color-button",onClick:O=>i.setLEDColor(k,O)},"Set",8,rn)]))),128))])}const un=Y(nn,[["render",cn],["__scopeId","data-v-0f12a494"]]);const dn={class:"device-configs"},vn={class:"config-actions"},pn={key:0,class:"error-message"},fn={key:1,class:"config-list mt-4"},bn={key:0},gn={key:1,class:"text-muted"},mn={__name:"DeviceConfigs",setup(p){const a=ae(),{openDialog:e}=ye(),D=F([]),f=F(""),i=F(!1),k=F(null),O=F(null);async function P(){f.value="",i.value=!0;try{const _=await a.listDeviceConfigs();D.value=(_||[]).sort((u,t)=>t.localeCompare(u))}catch{f.value="Failed to list device configs."}finally{i.value=!1}}async function M(_){f.value="",k.value=_;try{await a.loadDeviceConfig(_)}catch{f.value="Failed to load device config."}finally{k.value=null}}const g=async()=>{f.value="";try{await a.saveCalibrationToBackend(),z.success("Calibration checkpoint saved!")}catch{f.value="Failed to save device configs."}};function d(_){O.value=_,e({title:"Load checkpoint?",message:"Replace default config with checkpoint?"}).then(async u=>{u&&(await M(O.value),O.value=null)})}return(_,u)=>{const t=U("v-icon"),r=U("v-btn"),I=U("v-list-item"),y=U("v-list");return s(),v("div",dn,[l("div",vn,[A(r,{color:"success",onClick:g},{default:R(()=>[A(t,{left:""},{default:R(()=>u[0]||(u[0]=[L("mdi-content-save")])),_:1}),u[1]||(u[1]=L(" Save Calibration "))]),_:1}),A(r,{color:"primary",onClick:P,loading:i.value,class:"mr-2"},{default:R(()=>[A(t,{left:""},{default:R(()=>u[2]||(u[2]=[L("mdi-folder-open")])),_:1}),u[3]||(u[3]=L(" Load Calibration Checkpoints "))]),_:1},8,["loading"])]),f.value?(s(),v("div",pn,N(f.value),1)):T("",!0),D.value.length>0||i.value?(s(),v("div",fn,[u[6]||(u[6]=l("h3",{class:"text-h6 mb-2"},"Available Device Calibration Checkpoints",-1)),D.value.length>0?(s(),v("div",bn,[A(y,null,{default:R(()=>[(s(!0),v(B,null,H(D.value,c=>(s(),X(I,{key:c,onClick:b=>d(c),class:q({"config-item":!0,loading:k.value===c})},{default:R(()=>[A(t,{left:""},{default:R(()=>u[4]||(u[4]=[L("mdi-file-document")])),_:1}),L(" "+N(c)+" ",1),k.value===c?(s(),X(t,{key:0,right:""},{default:R(()=>u[5]||(u[5]=[L("mdi-loading")])),_:1})):T("",!0)]),_:2},1032,["onClick","class"]))),128))]),_:1})])):i.value?T("",!0):(s(),v("div",gn,' Click "Refresh Configs" to load. '))])):T("",!0)])}}},_n=Y(mn,[["__scopeId","data-v-ecd4ed1d"]]);const yn={key:0,class:"experiment-running-overlay"},hn={key:1,class:"experiment-running-overlay"},Cn={class:"overlay-content"},kn={class:"warning-message"},Dn={class:"calibration-switch-row"},wn={key:3},$n={__name:"DeviceControl",setup(p){const a=ae(),e=tt(),{deviceConnected:D,deviceControlEnabled:f,calibrationModeEnabled:i,stirrers:k,pumps:O,valves:P,ods:M}=te(a),{currentExperiment:g}=te(e),d=F(!1),_=K(()=>f.value),u=K({get:()=>i.value,set:c=>a.setCalibrationModeEnabled(c)}),t=K(()=>{var c;return((c=g.value)==null?void 0:c.status)==="running"}),{openDialog:r}=ye();function I(){d.value=!0,z.warning("Device control bypass enabled. Use caution during running experiment.",{autoClose:5e3})}async function y(){console.log("onReconnectClick"),await r({title:"Reconnect Device?",message:"Are you sure you want to reconnect the device?"})?(z.success("Reconnecting device..."),a.connectDevice()):z.error("Reconnect cancelled")}return ne(()=>{a.fetchDeviceData(),e.fetchCurrentExperiment()}),(c,b)=>{const h=U("v-icon"),m=U("v-btn"),S=U("v-switch");return s(),v("div",{class:q(["DeviceControl",{"device-disconnected":$(D)===!1,"experiment-running-bg":t.value}])},[$(f)===!1?(s(),v("div",yn)):T("",!0),t.value&&!d.value?(s(),v("div",hn,[l("div",Cn,[l("div",kn,[A(h,{color:"white",size:"48"},{default:R(()=>b[1]||(b[1]=[L("mdi-flask")])),_:1}),b[2]||(b[2]=l("h2",null,"Experiment Running",-1)),b[3]||(b[3]=l("p",null,"Device controls are locked during experiment",-1))]),A(m,{class:"bypass-button",color:"error",size:"large",onClick:I},{default:R(()=>[A(h,{left:""},{default:R(()=>b[4]||(b[4]=[L("mdi-close")])),_:1}),b[5]||(b[5]=L(" Bypass "))]),_:1})])])):T("",!0),l("div",Dn,[$(i)?(s(),X(m,{key:0,class:"reconnect-btn",onClick:y},{default:R(()=>b[6]||(b[6]=[L("Reconnect Device")])),_:1})):T("",!0),A(S,{modelValue:u.value,"onUpdate:modelValue":b[0]||(b[0]=j=>u.value=j),label:"Calibration Mode"},null,8,["modelValue"])]),$(f)||_.value||d.value?(s(),v(B,{key:2},[A(Ft),A(Xt),A(ua),A(tn),A(un),$(i)?(s(),X(_n,{key:0})):T("",!0)],64)):(s(),v("p",wn,"Device Control Disabled"))],2)}}},Pn=Y($n,[["__scopeId","data-v-f514329e"]]);export{Pn as default};
