import{x as we,C as $e,z as pe,D as Je,g as E,h as te,E as Se,B as re,G as fe,H as be,I as xe,_ as Q,s as ee,c as z,o as s,a as u,b as o,F as U,d as K,t as T,n as W,J as le,K as se,e as X,p as D,f as L,L as ye,r as B,j as F,i as N,k as A,l as q,M as he,N as Qe,O as Ze,P as Xe,m as Ce,w as ie,Q as ge}from"./index-e93c5d16.js";import{C as ce,B as Ye,S as et,a as tt,b as Ie,L as Oe,p as Pe,c as Ee,d as Fe,u as Y,e as at,P as nt}from"./chart-67fb78e9.js";/* empty css              */const Ve={data:{type:Object,required:!0},options:{type:Object,default:()=>({})},plugins:{type:Array,default:()=>[]},datasetIdKey:{type:String,default:"label"},updateMode:{type:String,default:void 0}},ot={ariaLabel:{type:String},ariaDescribedby:{type:String}},lt={type:{type:String,required:!0},destroyDelay:{type:Number,default:0},...Ve,...ot},st=Je[0]==="2"?(d,t)=>Object.assign(d,{attrs:t}):(d,t)=>Object.assign(d,t);function ne(d){return xe(d)?fe(d):d}function it(d){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:d;return xe(t)?new Proxy(d,{}):d}function rt(d,t){const e=d.options;e&&t&&Object.assign(e,t)}function Me(d,t){d.labels=t}function Ae(d,t,e){const C=[];d.datasets=t.map(f=>{const c=d.datasets.find(y=>y[e]===f[e]);return!c||!f.data||C.includes(c)?{...f}:(C.push(c),Object.assign(c,f),c)})}function ct(d,t){const e={labels:[],datasets:[]};return Me(e,d.labels),Ae(e,d.datasets,t),e}const ut=we({props:lt,setup(d,t){let{expose:e,slots:C}=t;const f=E(null),c=$e(null);e({chart:c});const y=()=>{if(!f.value)return;const{type:x,data:b,options:i,plugins:h,datasetIdKey:a}=d,l=ct(b,a),v=it(l,b);c.value=new ce(f.value,{type:x,data:v,options:{...i},plugins:h})},$=()=>{const x=fe(c.value);x&&(d.destroyDelay>0?setTimeout(()=>{x.destroy(),c.value=null},d.destroyDelay):(x.destroy(),c.value=null))},V=x=>{x.update(d.updateMode)};return te(y),Se($),re([()=>d.options,()=>d.data],(x,b)=>{let[i,h]=x,[a,l]=b;const v=fe(c.value);if(!v)return;let g=!1;if(i){const p=ne(i),k=ne(a);p&&p!==k&&(rt(v,p),g=!0)}if(h){const p=ne(h.labels),k=ne(l.labels),I=ne(h.datasets),O=ne(l.datasets);p!==k&&(Me(v.config.data,p),g=!0),I&&I!==O&&(Ae(v.config.data,I,d.datasetIdKey),g=!0)}g&&be(()=>{V(v)})},{deep:!0}),()=>pe("canvas",{role:"img",ariaLabel:d.ariaLabel,ariaDescribedby:d.ariaDescribedby,ref:f},[pe("p",{},[C.default?C.default():""])])}});function Le(d,t){return ce.register(t),we({props:Ve,setup(e,C){let{expose:f}=C;const c=$e(null),y=$=>{c.value=$==null?void 0:$.chart};return f({chart:c}),()=>pe(ut,st({ref:y},{type:d,...e}))}})}const dt=Le("bar",Ye),vt=Le("scatter",et);const pt={class:"pump-data"},ft={class:"iteration-rotation-wrapper"},bt={class:"iteration"},gt={class:"rotation"},mt=["onClick"],_t={key:0},yt={key:1},ht=["onUpdate:modelValue","onChange"],Ct={class:"chart-container"},kt={key:0,class:"calibration-section"},Dt={__name:"PumpCalibration",props:{pumpId:{type:Number,required:!0}},setup(d){ce.register(tt,Ie,Oe,Pe,Ee,Fe);const t=d,e=Y(),{calibrationModeEnabled:C,pumps:f,valves:c}=ee(e),y=E({datasets:[{data:[]}]}),$=E({responsive:!0,devicePixelRatio:4,maintainAspectRatio:!1,plugins:{legend:{display:!1}},backgroundColor:"rgba(0, 140, 186, 0.3)",layout:{padding:{top:20}},scales:{x:{title:{display:!0,text:"rotations"}},y:{title:{display:!0,text:"mL / rotation"},beginAtZero:!1,suggestedMin:.1,suggestedMax:.22}}}),V=E({}),x=E([{rotations:1,iterations:50,total_ml:NaN},{rotations:5,iterations:10,total_ml:NaN},{rotations:10,iterations:5,total_ml:NaN},{rotations:50,iterations:1,total_ml:NaN}]),b=z(()=>{var p,k;return((k=(p=f.value)==null?void 0:p.calibration)==null?void 0:k[t.pumpId])||{}});function i(){return{labels:Object.keys(b.value),datasets:[{label:null,data:Object.values(b.value),fill:!1,borderColor:"rgb(75, 192, 192)",tension:.1}]}}function h(){y.value=i()}function a(p){if(!Object.values(c.value.states).some(I=>I==="open")){alert("At least one valve must be open to start the pump");return}V.value[p]=!V.value[p],V.value[p]?g(x.value[p]):e.setPartStateAction({devicePart:"pumps",partIndex:t.pumpId,newState:"stopped"})}function l(p){V.value[p]=!1}function v(p){p.total_ml&&(e.setPartCalibrationAction({devicePart:"pumps",partIndex:t.pumpId,newCalibration:{...b.value,[p.rotations]:p.total_ml/p.rotations/p.iterations}}),V.value[p]=!1)}function g(p){alert(`Pumping ${p.rotations} rotations ${p.iterations} times. Please blank the scale`),e.startPumpCalibrationSequence({pumpId:t.pumpId,rotations:p.rotations,iterations:p.iterations}).then(()=>{l(p);const k=parseFloat(prompt("Enter total mL pumped"));isNaN(k)||(p.total_ml=k,v(p))})}return te(()=>{b.value&&h(),x.value.forEach(p=>{p.total_ml=(b.value[p.rotations]||0)*p.rotations*p.iterations,p.total_ml=p.total_ml?p.total_ml.toFixed(2):""})}),re(b,()=>{h()},{deep:!0}),(p,k)=>(s(),u("div",pt,[o("table",null,[k[1]||(k[1]=o("thead",null,[o("tr",null,[o("th",null,"Calibration Sequence"),o("th"),o("th",null,"Volume (mL)")])],-1)),o("tbody",null,[(s(!0),u(U,null,K(x.value,(I,O)=>(s(),u("tr",{key:O},[o("td",null,[o("div",ft,[o("div",bt,T(I.iterations),1),k[0]||(k[0]=o("div",{class:"multiplier"},"x",-1)),o("div",gt,T(I.rotations)+" rots",1)])]),o("td",null,[o("button",{onClick:_=>a(O),class:W([V.value[O]?"stop-button":"",V.value[O]===!1&&x.value[O].total_ml?"restart-button":""])},[V.value[O]?(s(),u("span",_t,"Stop")):(s(),u("span",yt,"Start"))],10,mt)]),o("td",null,[le(o("input",{"onUpdate:modelValue":_=>I.total_ml=_,onChange:_=>v(I),type:"float"},null,40,ht),[[se,I.total_ml]])])]))),128))])]),o("div",Ct,[y.value.datasets[0].data.length>0?(s(),X(D(dt),{key:0,id:"pump-calibration-chart",options:$.value,class:"pump-calibration-chart",data:y.value},null,8,["options","data"])):L("",!0)]),D(C)?(s(),u("div",kt)):L("",!0)]))}},wt=Q(Dt,[["__scopeId","data-v-6558f4be"]]);const $t={key:0,class:"pump-controls"},St={key:1},xt={class:"pump-input"},It={key:1},Ot={__name:"PumpControl",setup(d){const t=Y(),{pumps:e,valves:C,calibrationModeEnabled:f}=ee(t),c={1:"MAIN",2:"DRUG",3:"MISSING!!!",4:"WASTE"},y=ye({1:null,2:null,3:null,4:null}),$=ye({1:null,2:null,3:null,4:null});te(()=>{e.value||t.fetchDeviceData()});async function V(a){if(e.value.states[a]==="running"){await t.setPartStateAction({devicePart:"pumps",partIndex:a,newState:"stopped"});return}if(!Object.values(C.value.states).some(g=>g==="open")){alert("At least one valve must be open to start the pump");return}const v=parseFloat($[a]);if(!v){alert("Please set the volume before starting the pump");return}try{await t.setPartStateAction({devicePart:"pumps",partIndex:a,newState:"running",input:{volume:v}})}catch(g){console.error(g)}finally{await t.setPartStateAction({devicePart:"pumps",partIndex:a,newState:"stopped"})}}function x(a,l){$[l]=a;const v=parseFloat($[l]);isNaN(v)?y[l]="":y[l]=i(v,l).toFixed(2)}function b(a,l){y[l]=a;const v=parseFloat(y[l]);isNaN(v)?$[l]="":$[l]=h(v,l)}function i(a,l){const v=e.value.calibration[l],g=Object.entries(v).map(([j,ae])=>[parseInt(j),ae]).sort((j,ae)=>j[0]-ae[0]);if(a>=g[g.length-1][0]*g[g.length-1][1])return a/g[g.length-1][1];let p=g[0],k=g[g.length-1];for(let j=0;j<g.length-1;j++)if(a>=g[j][0]*g[j][1]&&a<=g[j+1][0]*g[j+1][1]){p=g[j],k=g[j+1];break}const I=p[0]*p[1],O=k[0]*k[1],_=(a-I)/(O-I),M=p[1]+(k[1]-p[1])*_;return a/M}function h(a,l){const v=e.value.calibration[l],g=Object.entries(v).map(([_,M])=>[parseInt(_),M]).sort((_,M)=>_[0]-M[0]);if(a>=g[g.length-1][0])return(a*g[g.length-1][1]).toFixed(2);let p=g[0],k=g[g.length-1];for(let _=0;_<g.length-1;_++)if(a>=g[_][0]&&a<=g[_+1][0]){p=g[_],k=g[_+1];break}const I=(a-p[0])/(k[0]-p[0]),O=p[1]+(k[1]-p[1])*I;return(a*O).toFixed(2)}return(a,l)=>{const v=B("v-progress-circular"),g=B("v-btn"),p=B("v-text-field");return D(e)&&D(e).states?(s(),u("div",$t,[(s(),u(U,null,K([1,2,4],k=>o("div",{class:"pump",key:k},[F(g,{class:W(["pump-button",{"stop-button":D(e).states[k]==="running"}]),onClick:I=>V(k)},{default:N(()=>[D(e).states[k]==="running"?(s(),X(v,{key:0,indeterminate:"",color:"white",class:"spinner-custom"})):(s(),u("span",St,[A(T(c[k]),1),l[0]||(l[0]=o("br",null,null,-1)),l[1]||(l[1]=A("pump"))]))]),_:2},1032,["class","onClick"]),o("div",xt,[F(p,{label:"Volume (mL)",type:"number",dense:"",modelValue:$[k],"onUpdate:modelValue":[I=>$[k]=I,I=>x(I,k)]},null,8,["modelValue","onUpdate:modelValue"]),D(f)?(s(),X(p,{key:0,label:"Rotations",type:"number",dense:"",modelValue:y[k],"onUpdate:modelValue":[I=>y[k]=I,I=>b(I,k)]},null,8,["modelValue","onUpdate:modelValue"])):L("",!0),D(f)?(s(),X(wt,{key:1,pumpId:k},null,8,["pumpId"])):L("",!0)])])),64))])):(s(),u("div",It," Loading pump data... "))}}},Pt=Q(Ot,[["__scopeId","data-v-dc27ed63"]]);const Et={class:"valve-calibration"},Ft={class:"warning-header"},Vt={key:0,class:"loading-state"},Mt={key:1,class:"calibration-controls"},At={class:"slider-container"},Lt={class:"slider-label"},Nt={class:"value"},Tt={class:"slider-container"},Rt={class:"slider-label"},Ut={class:"value"},Bt={class:"valve-controls"},qt={__name:"ValveCalibration",props:{valveId:{type:Number,required:!0}},setup(d){const t=d,e=Y(),{valves:C}=ee(e),f=E(.03),c=E(.12),y=E(!1),$=E(!0);re(C,l=>{var v,g;l&&(f.value=((v=l.duty_cycle_open)==null?void 0:v[t.valveId])??.03,c.value=((g=l.duty_cycle_closed)==null?void 0:g[t.valveId])??.12),$.value=!1},{immediate:!0}),te(async()=>{try{await e.fetchDeviceData()}catch(l){console.error("Error initializing valve calibration:",l),$.value=!1}});async function V(l){var v,g;y.value=!0;try{await e.setPartStateAction({devicePart:"valves",partIndex:t.valveId,newState:l?"open":"closed",input:{dutyCycle:l?f.value:c.value}}),q.success(`Valve ${t.valveId} ${l?"opened":"closed"} successfully`)}catch(p){if(console.error("Error operating valve:",p),!p.response)q.error("Server connection error. Please check if the backend server is running.");else{const k=((g=(v=p.response)==null?void 0:v.data)==null?void 0:g.message)||p.message||"Operation failed";q.error(`Failed to ${l?"open":"close"} valve ${t.valveId}: ${k}`)}}finally{y.value=!1}}async function x(){try{await he.post("/set-valve-duty-cycle-open",{valve:t.valveId,duty_cycle:f.value}),q.success(`Valve ${t.valveId} open duty cycle set to ${f.value.toFixed(3)}`)}catch(l){console.error("Error updating open duty cycle:",l),q.error(`Failed to update valve ${t.valveId} open duty cycle`)}}async function b(){try{await he.post("/set-valve-duty-cycle-closed",{valve:t.valveId,duty_cycle:c.value}),q.success(`Valve ${t.valveId} closed duty cycle set to ${c.value.toFixed(3)}`)}catch(l){console.error("Error updating closed duty cycle:",l),q.error(`Failed to update valve ${t.valveId} closed duty cycle`)}}async function i(){f.value=.03,c.value=.12;try{await Promise.all([x(),b()]),q.success(`Valve ${t.valveId} duty cycles reset to defaults`)}catch{q.error(`Failed to reset valve ${t.valveId} duty cycles`)}}function h(l){f.value=l}function a(l){c.value=l}return(l,v)=>{const g=B("v-icon"),p=B("v-progress-circular"),k=B("v-slider"),I=B("v-btn");return s(),u("div",Et,[o("div",Ft,[F(g,{color:"error",size:"large"},{default:N(()=>v[4]||(v[4]=[A("warning")])),_:1}),o("h2",null,"Warning! Valve "+T(d.valveId)+" Calibration Mode",1)]),$.value?(s(),u("div",Vt,[F(p,{indeterminate:"",color:"primary"}),v[5]||(v[5]=o("span",null,"Loading valve data...",-1))])):(s(),u("div",Mt,[o("div",At,[o("div",Lt,[v[6]||(v[6]=o("span",null,"Open Duty Cycle",-1)),o("span",Nt,T(f.value.toFixed(3)),1)]),F(k,{modelValue:f.value,"onUpdate:modelValue":[v[0]||(v[0]=O=>f.value=O),h],min:.02,max:.04,step:.001,color:"primary","track-color":"grey","thumb-label":"",onMouseup:x},null,8,["modelValue"])]),o("div",Tt,[o("div",Rt,[v[7]||(v[7]=o("span",null,"Closed Duty Cycle",-1)),o("span",Ut,T(c.value.toFixed(3)),1)]),F(k,{modelValue:c.value,"onUpdate:modelValue":[v[1]||(v[1]=O=>c.value=O),a],min:.11,max:.13,step:.001,color:"primary","track-color":"grey","thumb-label":"",onMouseup:b},null,8,["modelValue"])]),o("div",Bt,[F(I,{color:"success",onClick:v[2]||(v[2]=O=>V(!0)),loading:y.value,disabled:y.value},{default:N(()=>v[8]||(v[8]=[A(" Open Valve ")])),_:1},8,["loading","disabled"]),F(I,{color:"error",onClick:v[3]||(v[3]=O=>V(!1)),loading:y.value,disabled:y.value},{default:N(()=>v[9]||(v[9]=[A(" Close Valve ")])),_:1},8,["loading","disabled"]),F(I,{color:"primary",onClick:i},{default:N(()=>v[10]||(v[10]=[A(" Reset Defaults ")])),_:1})])]))])}}},jt=Q(qt,[["__scopeId","data-v-2b40de6c"]]);const Gt={class:"valve-controls"},Kt=["onClick","disabled"],zt={key:0,class:"spinner-border spinner-custom",role:"status"},Wt={key:1},Ht={__name:"ValveControl",setup(d){const t=Y(),{valves:e}=ee(t),C=E({}),f=new(window.AudioContext||window.webkitAudioContext),c=E(!1),y=E(null);function $(b){const i=b==="open"?500:300,h=b==="open"?300:500,a=f.createOscillator();a.type="sine";const l=f.createGain();return l.gain.setValueAtTime(.1,f.currentTime),a.connect(l),l.connect(f.destination),a.frequency.setValueAtTime(i,f.currentTime),a.frequency.linearRampToValueAtTime(h,f.currentTime+.3),a.start(),a.stop(f.currentTime+.3),a}async function V(b){const i=e.value.states[b];if(C.value[b])return;C.value={...C.value,[b]:!0};const h=$(i);try{await t.setPartStateAction({devicePart:"valves",partIndex:b,newState:i==="open"?"closed":"open"}),h.stop()}catch(a){console.error(a)}finally{C.value={...C.value,[b]:!1}}}function x(b,i){if(i.ctrlKey&&i.shiftKey){y.value=b,c.value=!0;return}V(b)}return(b,i)=>{const h=B("v-dialog");return s(),u(U,null,[o("div",Gt,[(s(),u(U,null,K(7,a=>o("button",{class:W(["btn",{"btn-danger":D(e).states[a]==="closed"&&!C.value[a],"btn-success":D(e).states[a]==="open"&&!C.value[a],"btn-warning":C.value[a]}]),key:a,onClick:l=>x(a,l),disabled:C.value[a]},[C.value[a]?(s(),u("div",zt)):(s(),u("span",Wt,"Valve "+T(a),1))],10,Kt)),64))]),F(h,{modelValue:c.value,"onUpdate:modelValue":i[1]||(i[1]=a=>c.value=a),"max-width":"600"},{default:N(()=>[c.value?(s(),X(jt,{key:0,valveId:y.value,onClose:i[0]||(i[0]=a=>c.value=!1)},null,8,["valveId"])):L("",!0)]),_:1},8,["modelValue"])],64)}}},Jt=Q(Ht,[["__scopeId","data-v-a341c808"]]);const Qt={class:"elements-container"},Zt={class:"stirrer-name"},Xt={key:0},Yt={style:{position:"relative",display:"inline-block"}},ea={style:{position:"relative",display:"inline-block"}},ta={class:"buttons-container"},ke=0,De=1,aa={__name:"StirrerCalibration",props:{stirrerId:{type:Number,required:!0}},setup(d){const t=d,e=E(null),C=E(null),f=E(null),c=new(window.AudioContext||window.webkitAudioContext);let y=null,$=null,V=null;const x=Y(),{calibrationModeEnabled:b,stirrers:i}=ee(x),h=z(()=>i.value&&i.value.states?i.value.states[t.stirrerId]:void 0);function a(O){x.setPartStateAction({devicePart:"stirrers",partIndex:t.stirrerId,newState:O})}function l(O){if(i.value&&i.value.states)for(let _=1;_<=7;_++)i.value.states[_]=O;x.setAllStirrersStateAction&&x.setAllStirrersStateAction(O)}function v(O,_){p(_.target.value)}function g(O,_){!i.value||!i.value.calibration||!i.value.calibration[t.stirrerId]||x.setPartCalibrationAction({devicePart:"stirrers",partIndex:t.stirrerId,newCalibration:{low:i.value.calibration[t.stirrerId].low,high:i.value.calibration[t.stirrerId].high}}).catch(M=>{console.error("Error updating stirrer calibration:",M)})}function p(O){y||(y=c.createOscillator(),$=c.createGain(),y.type="sine",$.gain.setValueAtTime(.1,c.currentTime),y.connect($),$.connect(c.destination),y.start());const _=300+O*500;y.frequency.setValueAtTime(_,c.currentTime),V&&clearTimeout(V),V=setTimeout(k,200)}function k(){y&&($.gain.exponentialRampToValueAtTime(.001,c.currentTime+.01),$.gain.setValueAtTime(.1,c.currentTime+.02),y.stop(c.currentTime+.02),y=null,$=null)}function I(O,_){(O==="high"&&h.value!=="high"||O==="low"&&h.value!=="low")&&(_.preventDefault(),q("Enable stirrer to adjust speed",{type:"info"}))}return te(()=>{window.addEventListener("resize",()=>{})}),Qe(()=>{window.removeEventListener("resize",()=>{})}),(O,_)=>(s(),u("div",{class:"stirrer-calibrator",ref_key:"container",ref:e},[o("div",Qt,[o("div",Zt,[o("header",null,"Stirrer "+T(d.stirrerId),1)]),D(b)&&D(i)&&D(i).calibration&&D(i).calibration[d.stirrerId]?(s(),u("div",Xt,[o("div",Yt,[le(o("input",{type:"range",class:W(["slider slider-high",[{active:h.value==="high"},{"slider-disabled":h.value!=="high"}]]),min:ke,max:De,step:.01,"onUpdate:modelValue":_[0]||(_[0]=M=>D(i).calibration[d.stirrerId].high=M),onInput:_[1]||(_[1]=M=>v("high",M)),onChange:_[2]||(_[2]=M=>g())},null,34),[[se,D(i).calibration[d.stirrerId].high,void 0,{number:!0}]]),h.value!=="high"?(s(),u("div",{key:0,class:"slider-overlay",onClick:_[3]||(_[3]=M=>I("high",M))})):L("",!0)]),o("div",ea,[le(o("input",{type:"range",class:W(["slider slider-low",[{active:h.value==="low"},{"slider-disabled":h.value!=="low"}]]),min:ke,max:De,step:.01,"onUpdate:modelValue":_[4]||(_[4]=M=>D(i).calibration[d.stirrerId].low=M),onInput:_[5]||(_[5]=M=>v("low",M)),onChange:_[6]||(_[6]=M=>g())},null,34),[[se,D(i).calibration[d.stirrerId].low,void 0,{number:!0}]]),h.value!=="low"?(s(),u("div",{key:0,class:"slider-overlay",onClick:_[7]||(_[7]=M=>I("low",M))})):L("",!0)])])):L("",!0),o("div",ta,[o("button",{class:W(["button button-high",{active:h.value==="high"}]),ref_key:"buttonHigh",ref:C,onClick:_[8]||(_[8]=M=>a("high")),onDblclick:_[9]||(_[9]=M=>l("high"))},"High",34),o("button",{class:W(["button button-low",{active:h.value==="low"}]),ref_key:"buttonLow",ref:f,onClick:_[10]||(_[10]=M=>a("low")),onDblclick:_[11]||(_[11]=M=>l("low"))},"Low",34),o("button",{class:W(["button button-off",{active:h.value==="stopped"}]),ref:"buttonOff",onClick:_[12]||(_[12]=M=>a("stopped")),onDblclick:_[13]||(_[13]=M=>l("stopped"))},"OFF",34)])])],512))}},na=Q(aa,[["__scopeId","data-v-d01f6391"]]);const oa={name:"StirrerControl",components:{StirrerCalibration:na}},la={class:"stirrer-controls"};function sa(d,t,e,C,f,c){const y=B("StirrerCalibration");return s(),u("div",la,[(s(),u(U,null,K(7,$=>F(y,{key:$,stirrerId:$},null,8,["stirrerId"])),64))])}const ia=Q(oa,[["render",sa],["__scopeId","data-v-6cada7fd"]]),ra={className:"single-chart-container"},ca={__name:"ODChart",props:{partId:{type:Number,required:!0}},setup(d){ce.register(Pe,Ee,Fe,at,Ie,Oe,nt);const t=d,e=Y(),{ods:C}=ee(e),f=z(()=>{var b,i;return(i=(b=C.value)==null?void 0:b.calibration)==null?void 0:i[t.partId]}),c=z(()=>{var b,i;return(i=(b=C.value)==null?void 0:b.calibration_coefs)==null?void 0:i[t.partId]}),y=z(()=>{var b,i,h,a;return{od:(i=(b=C.value)==null?void 0:b.states)==null?void 0:i[t.partId],signal:(a=(h=C.value)==null?void 0:h.odsignals)==null?void 0:a[t.partId]}});function $(b,i,h){return-Math.log10(b/i)*h}const V=z(()=>{if(f.value&&typeof f.value=="object"&&c.value){const b=Object.entries(f.value).filter(([l,v])=>v!==null).map(([l,v])=>({x:Number(v),y:Number(l)})).sort((l,v)=>l.x-v.x);let i=Math.min(...b.map(l=>l.x)),h=Math.max(...b.map(l=>l.x));const a=[];i===h&&(i=0,h=50);for(let l=i;l<=h;l+=.1){const v=$(l,...c.value);a.push({x:l,y:v})}return{datasets:[{label:`Vial ${t.partId} Calibration OD`,data:b,borderColor:"#607ecb",backgroundColor:"rgba(83,158,255,0.64)"},{label:`Vial ${t.partId} Current OD`,data:[{x:y.value.signal,y:y.value.od}],pointRadius:5,backgroundColor:"rgba(255,1,60,0.64)"},{label:`Vial ${t.partId} Fit`,data:a,pointRadius:0,borderColor:"rgba(0,70,220,0.38)",borderWidth:2,showLine:!0,fill:!1,borderDash:[2,2]}]}}return{}}),x=z(()=>{var b,i;return{devicePixelRatio:4,responsive:!0,maintainAspectRatio:!1,plugins:{legend:{display:!1},title:{display:!0,text:`Vial ${t.partId}`+(c.value?`
blank: ${(b=c.value[0])==null?void 0:b.toFixed(2)}, scaling: ${(i=c.value[1])==null?void 0:i.toFixed(2)}`:"")}},scales:{x:{title:{display:!0,text:"Signal (mV)"},suggestedMin:0},y:{title:{display:!0,text:"OD"},suggestedMax:1.5,suggestedMin:0}}}});return(b,i)=>(s(),u("div",ra,[F(D(vt),{data:V.value,options:x.value},null,8,["data","options"])]))}};E({show:!1,title:"",content:"",resolve:null});const ua={class:"guide-popup"},da={class:"guide-header"},va={__name:"ODGuide",setup(d){return(t,e)=>{const C=B("v-icon");return s(),u("div",{class:"guide-overlay",onClick:e[1]||(e[1]=Xe(f=>t.$emit("close"),["self"]))},[o("div",ua,[o("div",da,[e[3]||(e[3]=o("span",{class:"guide-title"},"OD Calibration Guide",-1)),o("button",{class:"guide-close",onClick:e[0]||(e[0]=f=>t.$emit("close"))},[F(C,null,{default:N(()=>e[2]||(e[2]=[A("mdi-close")])),_:1})])]),e[4]||(e[4]=Ze('<div class="guide-content" data-v-8d7af6ce><div class="guide-section" data-v-8d7af6ce><b class="section-title" data-v-8d7af6ce>What is Optical Density (OD)?</b><br data-v-8d7af6ce><span class="guide-text" data-v-8d7af6ce> Optical Density (OD) measures how much light is absorbed by a sample. The higher the OD, the more cells or particles are in the solution. </span></div><div class="guide-section" data-v-8d7af6ce><b class="section-title" data-v-8d7af6ce>Beer-Lambert Law and Scaling Factor</b><br data-v-8d7af6ce><span class="guide-text" data-v-8d7af6ce> The Beer-Lambert Law relates OD to the transmitted light signal: </span><br data-v-8d7af6ce><span class="formula" data-v-8d7af6ce> OD = -log₁₀(signal / blank_signal) </span><br data-v-8d7af6ce><span class="guide-text" data-v-8d7af6ce> In our devices, the light path is not a standard 1cm cuvette. The curved shape of the vial and the sensor design affect how light travels through the sample. This is corrected using a scaling factor: </span><br data-v-8d7af6ce><span class="formula" data-v-8d7af6ce> OD = -log₁₀(signal / blank_signal) * scaling </span><br data-v-8d7af6ce></div><div class="guide-section" data-v-8d7af6ce><b class="section-title" data-v-8d7af6ce>Calibration Process</b><div class="method-panel" data-v-8d7af6ce><div class="method-heading" data-v-8d7af6ce>Step 1: Measure OD₀ (Blank Signal)</div><div class="od-warning-box" data-v-8d7af6ce><b data-v-8d7af6ce>Important: OD₀ must be measured with a vial containing growth medium!</b><div class="od-warning-details" data-v-8d7af6ce> - Use the same growth medium that will be used in your experiment<br data-v-8d7af6ce> - The vial must be filled with liquid<br data-v-8d7af6ce> - A good blank signal should be above 20mV<br data-v-8d7af6ce> - If the signal is below 20mV, check for:<br data-v-8d7af6ce>   • Proper vial alignment<br data-v-8d7af6ce>   • Clean sensors and vials<br data-v-8d7af6ce>   • No obstructions in the light path </div></div></div><div class="method-panel" data-v-8d7af6ce><div class="method-heading" data-v-8d7af6ce>Step 2 (Optional): Measure additional OD values to calibrate the scaling factor</div><div class="option-container" data-v-8d7af6ce><div class="option-box" data-v-8d7af6ce><div class="method-subheading" data-v-8d7af6ce>Option A: Using Liquid Samples (Recommended)</div><ol class="guide-ol" data-v-8d7af6ce><li data-v-8d7af6ce>Prepare a vial with a known OD between 0.1 and 2.0: </li><li data-v-8d7af6ce>Insert this vial into each slot and measure its signal using the calibration table.</li><li data-v-8d7af6ce>The scaling factor will be automatically calculated from these measurements.</li><i data-v-8d7af6ce>Repeat with different OD values for increased accuracy.</i></ol></div><div class="option-box" data-v-8d7af6ce><div class="method-subheading" data-v-8d7af6ce>Option B: Using Semitransparent Sheets</div><ol class="guide-ol" data-v-8d7af6ce><li data-v-8d7af6ce>Determine the equivalent OD of one or more semitransparent sheets (using a solution which creates the same signal as the sheet inserted in the sensor)</li><li data-v-8d7af6ce>Place the sheet over all sensors at once</li><li data-v-8d7af6ce>Measure the signals and the scaling factor will be calculated automatically</li><i data-v-8d7af6ce>Note: This method is less accurate than using liquid samples</i></ol></div></div></div><div class="method-panel" data-v-8d7af6ce><div class="method-heading" data-v-8d7af6ce>Step 3: Final Check</div><div class="guide-text" data-v-8d7af6ce> Ideally, remeasure OD₀ just before starting the experiment. Small changes in the position of the vial and media composition can affect the signal. </div></div></div></div>',1))])])}}},pa=Q(va,[["__scopeId","data-v-8d7af6ce"]]);const fa={class:"od-control-container"},ba=["onClick"],ga={key:0,class:"od-output-value"},ma={key:1,class:"od-output-value"},_a={key:2,class:"signal-output-value"},ya={key:3,class:"signal-output-value"},ha={key:0,class:"calibration-section"},Ca={class:"probe-table-outer-container",style:{"margin-bottom":"18px"}},ka={class:"table-controls"},Da={class:"mode-controls"},wa={class:"calibration-table-wrapper"},$a={class:"calibration-table"},Sa={key:0,style:{width:"36px"}},xa={class:"od-value-container"},Ia=["onDblclick"],Oa=["value","onInput","onBlur","onKeyup"],Pa=["title"],Ea={key:1,class:"signal-value"},Fa={key:1,class:"signal-value"},Va={key:1,class:"measure-cell-container"},Ma=["onDblclick"],Aa=["onDblclick"],La=["value","onInput","onBlur","onKeyup"],Na=["onClick","disabled","title"],Ta={key:0,class:"measure-button-content"},Ra={key:1,class:"measure-button-content"},Ua={key:0,style:{"text-align":"center",width:"36px",padding:"4px"}},Ba=["onClick","disabled"],qa={key:1,style:{width:"36px"}},ja={key:0},Ga={class:"scaling-factor-container"},Ka={class:"calibration-table"},za={class:"scaling-factor-row"},Wa=["title"],Ha=["onUpdate:modelValue"],Ja={key:1,class:"scaling-factor-value"},Qa={key:0,style:{width:"40px"}},Za={key:0,class:"chart-container"},Xa={__name:"ODControl",setup(d){const t=Y(),{ods:e,calibrationModeEnabled:C}=ee(t),{openDialog:f}=ge(),c=[1,2,3,4,5,6,7],y=E(!1),$=E(!0),V=E(!1),x=E(!1),b=E({}),i=E({}),h=z(()=>{let r=new Set;if(e.value.calibration)for(let S in e.value.calibration)for(let m in e.value.calibration[S])r.add(m);return Array.from(r).sort((S,m)=>parseFloat(S)-parseFloat(m))}),a=z(()=>{if(!e.value.calibration)return[];const r=new Set;for(const n in e.value.calibration)for(const S in e.value.calibration[n])r.add(parseFloat(S));return Array.from(r).sort((n,S)=>n-S)}),l=E(new Set),v=z(()=>{const r=e.value.calibration_coefs||{};return c.map(n=>{var S;return((S=r[n])==null?void 0:S[1])??"—"})}),g=E([]);re(v,r=>{g.value=[...r]},{immediate:!0}),te(()=>{t.fetchDeviceData(),document.addEventListener("click",p)}),Se(()=>{document.removeEventListener("click",p)});function p(r){if(J.value&&!r.target.closest(".calibration-signal")&&ue(J.value.vial,J.value.odValue),Z.value&&!r.target.closest(".od-value-input")){const n=a.value.indexOf(Z.value);n!==-1&&ae(Z.value,n),Z.value=null}}async function k(r){try{const n=await t.measureDevicePart({devicePart:"ods",partIndex:r});await t.fetchDeviceData()}catch(n){throw console.error("Error measuring OD:",n),q.error(n.message||"Failed to measure OD. Please try again."),n}}function I(r,n,S){i.value[n]||(i.value[n]={}),i.value[n][S]=parseFloat(r.target.value)}function O(r,n){if(i.value[r]&&i.value[r][n]!==void 0){e.value.calibration[r]||(e.value.calibration[r]={});const S=i.value[r][n];isNaN(i.value[r][n])&&delete e.value.calibration[r][n],t.updateODCalibrationValueAction({od:n,vial:r,newValue:S}).catch(m=>{console.error(`Error updating calibration for vial ${r}:`,m)}),delete i.value[r][n]}}function _(r,n){return i.value[r]&&i.value[r][n]!==void 0?i.value[r][n]:e.value.calibration&&e.value.calibration[r]&&e.value.calibration[r][n]!==void 0?e.value.calibration[r][n]:""}function M(r,n){if(!e.value.calibration||!e.value.calibration[r]||e.value.calibration[r][n]===void 0)return{background:""};const S=parseFloat(e.value.calibration[r][n]),m=5,P=40;let w;if(S<=0)w=m;else{const R=Math.log(10),oe=Math.log(1e3),He=(Math.log(Math.max(10,Math.min(1e3,S)))-R)/(oe-R);w=m+He*(P-m)}return{background:`rgba(255, 100, 100, ${w/100})`}}function j(r){if(r==null)return"";const n=parseFloat(r);if(isNaN(n))return"";const S=.02,m=.25,P=Math.max(0,Math.min(4,n)),w=Math.log(P+1)/Math.log(5),R=S+w*(m-S);return`background: linear-gradient(to right, rgba(255, 235, 156, ${R}), rgba(255, 235, 156, ${R*.6}))`}async function ae(r,n,S){if(b.value[n]!==void 0){const m=b.value[n];if(a.value.some((w,R)=>R!==n&&parseFloat(w)===parseFloat(m))&&!await f({title:"Duplicate OD Value",message:`An OD probe value of ${m} already exists. Are you sure you want to overwrite?`,showCancel:!0})){delete b.value[n];return}a.value[n]=m,delete b.value[n];try{for(let w in e.value.calibration){const R=e.value.calibration[w],oe=JSON.parse(JSON.stringify(R));R[r]!==void 0&&(delete oe[r],oe[m]=R[r],await t.setPartCalibrationAction({devicePart:"ods",partIndex:w,newCalibration:oe}))}await t.fetchDeviceData()}catch(w){console.error("Error updating calibration:",w),q.error("Failed to update calibration values")}}}function Ne(r,n){console.log("handleProbeValueInput",r.target.value),b.value[n]=parseFloat(r.target.value)}function Te(){V.value=!0}function Re(){V.value=!1}function Ue(){if(!a.value.length)return .1;const r=Math.max(...a.value);return parseFloat((r+.1).toFixed(2))}async function Be(){const r=Ue();for(const n of c)e.value.calibration[n]||(e.value.calibration[n]={}),e.value.calibration[n][r]=null,await t.setPartCalibrationAction({devicePart:"ods",partIndex:n,newCalibration:e.value.calibration[n]});await t.fetchDeviceData()}async function qe(r){const n=h.value[r];l.value.add(n);for(const S of c)e.value.calibration[S]&&(delete e.value.calibration[S][n],await t.setPartCalibrationAction({devicePart:"ods",partIndex:S,newCalibration:e.value.calibration[S]}));await t.fetchDeviceData(),l.value.delete(n)}const G={VIEW:"view",MEASURE:"measure"},H=E(G.VIEW);z(()=>({"view-mode":H.value===G.VIEW,"measure-mode":H.value===G.MEASURE}));async function je(r,n){try{await t.measureDevicePart({devicePart:"ods",partIndex:r});const S=e.value.odsignals[r];await t.updateODCalibrationValueAction({od:n,vial:r,newValue:S}),await t.fetchDeviceData()}catch(S){console.error("Error measuring cell:",S)}}const J=E(null),Ge=E(null);function _e(r,n){J.value={vial:r,odValue:n},be(()=>{const S=document.querySelector(".calibration-signal");S&&S.focus()})}function ue(r,n){i.value[r]&&i.value[r][n]!==void 0&&O(r,n),J.value=null}function Ke(){if(J.value=null,J.value){const{vial:r,odValue:n}=J.value;i.value[r]&&delete i.value[r][n]}}const Z=E(null);function ze(r,n){Z.value=r,be(()=>{const S=document.querySelector(".od-value-input");S&&S.focus()})}function We(){if(Z.value=null,Z.value){const r=a.value.indexOf(Z.value);r!==-1&&b.value[r]&&delete b.value[r]}}const de=(r,n)=>({icon:"",color:"#90caf9",tooltip:"Scaling factor"}),ve=r=>typeof r!="number"?{icon:"mdi-help-circle-outline",color:"grey",tooltip:"No signal value available"}:r>=20?{icon:"mdi-check-circle",color:"#4caf50",tooltip:"Signal value within expected range"}:r>=12?{icon:"mdi-alert-circle",color:"#ffc107",tooltip:"Signal value slightly low. Consider recalibrating"}:{icon:"mdi-close-circle",color:"#f44336",tooltip:"Signal value too low. Check OD sensor"};return(r,n)=>{const S=B("v-icon");return s(),u(U,null,[o("div",fa,[(s(!0),u(U,null,K(D(e).states,(m,P)=>(s(),u("div",{class:"elements-container",key:P},[o("button",{class:"od-button",onClick:w=>k(P)},[o("span",null,"OD "+T(P),1)],8,ba),D(e).states&&D(e).states[P]!==void 0&&D(e).states[P]!==0?(s(),u("span",ga,T(parseFloat(D(e).states[P].toFixed(2))),1)):(s(),u("span",ma,"---")),n[1]||(n[1]=o("div",{style:{height:"0.5px"}},null,-1)),D(e).odsignals&&D(e).odsignals[P]!==void 0&&D(e).odsignals[P]!==0?(s(),u("span",_a,"("+T(parseFloat(D(e).odsignals[P].toFixed(2)))+"mV)",1)):(s(),u("span",ya,"(---)"))]))),128))]),D(C)?(s(),u("div",ha,[o("div",Ca,[n[6]||(n[6]=o("div",{style:{display:"flex","align-items":"center","margin-bottom":"8px"}},null,-1)),o("div",ka,[n[5]||(n[5]=o("div",{style:{flex:"1"}},null,-1)),o("div",Da,[o("button",{class:W(["control-button mode-toggle",{active:H.value===G.MEASURE}]),onClick:n[0]||(n[0]=m=>H.value=H.value===G.MEASURE?G.VIEW:G.MEASURE)},[F(S,null,{default:N(()=>n[2]||(n[2]=[A("mdi-pencil")])),_:1}),n[3]||(n[3]=A(" Edit "))],2)]),o("button",{class:"control-button help-button",onClick:Te},[F(S,null,{default:N(()=>n[4]||(n[4]=[A("mdi-help-circle-outline")])),_:1})])])]),n[15]||(n[15]=o("div",{class:"calibration-controls"},null,-1)),o("div",wa,[o("table",$a,[o("thead",null,[o("tr",null,[n[7]||(n[7]=o("th",{style:{width:"110px"}},"OD Value",-1)),(s(),u(U,null,K(c,m=>o("th",{key:m,style:{width:"90px"}},"Vial "+T(m),1)),64)),y.value?(s(),u("th",Sa)):L("",!0)])]),o("tbody",null,[(s(!0),u(U,null,K(h.value,(m,P)=>(s(),u("tr",{key:m,class:W({"od-zero-row":parseFloat(m)===0})},[o("td",{style:Ce([{width:"110px"},j(m)])},[o("div",xa,[!Z.value||Z.value!==m?(s(),u("span",{key:0,class:"od-value-display",onDblclick:w=>ze(m),title:"Double click to edit"},T(P<a.value.length?b.value[P]!==void 0?b.value[P]:a.value[P]:m),41,Ia)):(s(),u("input",{key:1,value:b.value[P]!==void 0?b.value[P]:a.value[P],onInput:w=>Ne(w,P),onBlur:w=>ae(m,P),onKeyup:[ie(w=>ae(m,P),["enter"]),ie(We,["esc"])],type:"number",step:"0.1",class:"od-value-input",ref_for:!0,ref:"odValueInput"},null,40,Oa))])],4),(s(),u(U,null,K(c,w=>o("td",{key:w,class:W({"has-data":D(e).calibration&&D(e).calibration[w]&&D(e).calibration[w][m]!==void 0}),style:Ce({background:M(w,m).background})},[H.value===G.VIEW?(s(),u(U,{key:0},[D(e).calibration&&D(e).calibration[w]&&D(e).calibration[w][m]!==void 0&&D(e).calibration[w][m]!==null?(s(),u(U,{key:0},[parseFloat(m)===0?(s(),u("div",{key:0,class:"signal-value-with-status",title:ve(D(e).calibration[w][m]).tooltip},[A(T(D(e).calibration[w][m].toFixed(2))+" ",1),F(S,{color:ve(D(e).calibration[w][m]).color,size:"small",style:{"margin-left":"4px"}},{default:N(()=>[A(T(ve(D(e).calibration[w][m]).icon),1)]),_:2},1032,["color"])],8,Pa)):(s(),u("div",Ea,T(D(e).calibration[w][m].toFixed(2)),1))],64)):(s(),u("div",Fa,"---"))],64)):H.value===G.MEASURE?(s(),u("div",Va,[D(e).calibration&&D(e).calibration[w]&&D(e).calibration[w][m]!==void 0&&D(e).calibration[w][m]!==null?(s(),u("span",{key:0,class:"signal-value measure-background-value",onDblclick:R=>_e(w,m),title:"Double click to edit"},T(parseFloat(D(e).calibration[w][m]).toFixed(2))+"mV ",41,Ma)):(s(),u("span",{key:1,class:"signal-value measure-background-value empty-value",onDblclick:R=>_e(w,m),title:"Double click to edit"}," ——— ",40,Aa)),J.value&&J.value.vial===w&&J.value.odValue===m?(s(),u("input",{key:2,value:_(w,m),onInput:R=>I(R,w,m),onBlur:R=>ue(w,m),onKeyup:[ie(R=>ue(w,m),["enter"]),ie(Ke,["esc"])],type:"number",class:"calibration-signal",ref_for:!0,ref_key:"editingInput",ref:Ge},null,40,La)):L("",!0),o("button",{class:"measure-cell-button",onClick:R=>je(w,m),disabled:x.value,title:`Calibrate OD ${parseFloat(m).toFixed(2)} signal in vial ${w} (measure now)`},[x.value?(s(),u("span",Ta,n[8]||(n[8]=[o("span",{class:"loading-spinner"},null,-1)]))):(s(),u("span",Ra,[F(S,null,{default:N(()=>n[9]||(n[9]=[A("mdi-camera-metering-center")])),_:1})]))],8,Na)])):L("",!0)],6)),64)),H.value===G.MEASURE&&parseFloat(h.value[P])!==0?(s(),u("td",Ua,[o("button",{class:"delete-od-row",onClick:w=>qe(P),disabled:l.value.has(h.value[P]),title:"Delete row"},[F(S,null,{default:N(()=>n[10]||(n[10]=[A("mdi-delete")])),_:1})],8,Ba)])):H.value===G.MEASURE?(s(),u("td",qa)):L("",!0)],2))),128)),H.value===G.MEASURE?(s(),u("tr",ja,[o("td",null,[o("button",{class:"add-od-probe-table",onClick:Be},[F(S,null,{default:N(()=>n[11]||(n[11]=[A("mdi-plus")])),_:1}),n[12]||(n[12]=A(" Add "))])]),(s(),u(U,null,K(c,m=>o("td",{key:"add-row-"+m})),64)),n[13]||(n[13]=o("td",null,null,-1))])):L("",!0)])])]),o("div",Ga,[o("table",Ka,[o("tbody",null,[o("tr",za,[n[14]||(n[14]=o("th",{class:"scaling-factor-label"},"Scaling Factor",-1)),(s(!0),u(U,null,K(g.value,(m,P)=>(s(),u("th",{key:"sf-head-"+P,class:"scaling-factor-cell",title:de().tooltip},[y.value?le((s(),u("input",{key:0,type:"number",step:"0.01",min:"0.1","onUpdate:modelValue":w=>g.value[P]=w,style:{width:"60px","text-align":"center",background:"#23272e",color:"#90caf9",border:"1px solid #444","border-radius":"4px"}},null,8,Ha)),[[se,g.value[P],void 0,{number:!0}]]):(s(),u("div",Ja,[A(T(typeof m=="number"?m.toFixed(2):m)+" ",1),F(S,{color:de().color,size:"small",style:{"margin-left":"4px"}},{default:N(()=>[A(T(de(m,P+1).icon),1)]),_:2},1032,["color"])]))],8,Wa))),128)),H.value===G.MEASURE?(s(),u("th",Qa)):L("",!0)])])])]),$.value?(s(),u("div",Za,[(s(),u(U,null,K(c,m=>F(ca,{partId:m,key:m},null,8,["partId"])),64))])):L("",!0)])):L("",!0),V.value?(s(),X(pa,{key:1,onClose:Re})):L("",!0)],64)}}},Ya=Q(Xa,[["__scopeId","data-v-d1818801"]]);const me=Y(),{leds:en}=ee(me);te(()=>{en.value||me.fetchDeviceData()});const tn={name:"SetLEDColor",data(){return{vials:[1,2,3,4,5,6,7],ledColors:{1:{red:0,green:0,blue:0,color:"#000000"},2:{red:0,green:0,blue:0,color:"#000000"},3:{red:0,green:0,blue:0,color:"#000000"},4:{red:0,green:0,blue:0,color:"#000000"},5:{red:0,green:0,blue:0,color:"#000000"},6:{red:0,green:0,blue:0,color:"#000000"},7:{red:0,green:0,blue:0,color:"#000000"}}}},methods:{async setLEDColor(d,t){if(t.shiftKey){const{red:e,green:C,blue:f}=this.ledColors[d];for(const c of this.vials)this.ledColors[c].red=e,this.ledColors[c].green=C,this.ledColors[c].blue=f,this.ledColors[c].color=this.ledColors[d].color,await this.setIndividualLEDColor(c)}else await this.setIndividualLEDColor(d)},async setIndividualLEDColor(d){const{red:t,green:e,blue:C}=this.ledColors[d];try{console.log("Setting color for vial",d,"to",t,e,C),await me.setLedColor(d,t,e,C)}catch(f){console.error(`Failed to set color for vial ${d}:`,f),alert(`Error setting color for vial ${d}`)}},updateColor(d){const t=this.ledColors[d].color,{r:e,g:C,b:f}=this.hexToRgb(t);this.ledColors[d].red=e/255,this.ledColors[d].green=C/255,this.ledColors[d].blue=f/255},hexToRgb(d){const t=parseInt(d.slice(1),16);return{r:t>>16&255,g:t>>8&255,b:t&255}}}},an={class:"rgb-control-container"},nn={class:"color-selector"},on=["onUpdate:modelValue","onInput"],ln=["onClick"];function sn(d,t,e,C,f,c){return s(),u("div",an,[(s(!0),u(U,null,K(f.vials,y=>(s(),u("div",{class:"vial-container",key:y},[o("div",nn,[o("label",null,T("Vial "+y),1),le(o("input",{type:"color","onUpdate:modelValue":$=>f.ledColors[y].color=$,onInput:$=>c.updateColor(y)},null,40,on),[[se,f.ledColors[y].color]])]),o("button",{class:"set-color-button",onClick:$=>c.setLEDColor(y,$)},"Set",8,ln)]))),128))])}const rn=Q(tn,[["render",sn],["__scopeId","data-v-0f12a494"]]);const cn={class:"device-configs"},un={class:"config-actions"},dn={key:0,class:"error-message"},vn={key:1,class:"config-list mt-4"},pn={key:0},fn={key:1,class:"text-muted"},bn={__name:"DeviceConfigs",setup(d){const t=Y(),{openDialog:e}=ge(),C=E([]),f=E(""),c=E(!1),y=E(null),$=E(null);async function V(){f.value="",c.value=!0;try{const h=await t.listDeviceConfigs();C.value=(h||[]).sort((a,l)=>l.localeCompare(a))}catch{f.value="Failed to list device configs."}finally{c.value=!1}}async function x(h){f.value="",y.value=h;try{await t.loadDeviceConfig(h)}catch{f.value="Failed to load device config."}finally{y.value=null}}const b=async()=>{f.value="";try{await t.saveCalibrationToBackend(),q.success("Calibration checkpoint saved!")}catch{f.value="Failed to save device configs."}};function i(h){$.value=h,e({title:"Load checkpoint?",message:"Replace default config with checkpoint?"}).then(async a=>{a&&(await x($.value),$.value=null)})}return(h,a)=>{const l=B("v-icon"),v=B("v-btn"),g=B("v-list-item"),p=B("v-list");return s(),u("div",cn,[o("div",un,[F(v,{color:"success",onClick:b},{default:N(()=>[F(l,{left:""},{default:N(()=>a[0]||(a[0]=[A("mdi-content-save")])),_:1}),a[1]||(a[1]=A(" Save Calibration "))]),_:1}),F(v,{color:"primary",onClick:V,loading:c.value,class:"mr-2"},{default:N(()=>[F(l,{left:""},{default:N(()=>a[2]||(a[2]=[A("mdi-folder-open")])),_:1}),a[3]||(a[3]=A(" Load Calibration Checkpoints "))]),_:1},8,["loading"])]),f.value?(s(),u("div",dn,T(f.value),1)):L("",!0),C.value.length>0||c.value?(s(),u("div",vn,[a[6]||(a[6]=o("h3",{class:"text-h6 mb-2"},"Available Device Calibration Checkpoints",-1)),C.value.length>0?(s(),u("div",pn,[F(p,null,{default:N(()=>[(s(!0),u(U,null,K(C.value,k=>(s(),X(g,{key:k,onClick:I=>i(k),class:W({"config-item":!0,loading:y.value===k})},{default:N(()=>[F(l,{left:""},{default:N(()=>a[4]||(a[4]=[A("mdi-file-document")])),_:1}),A(" "+T(k)+" ",1),y.value===k?(s(),X(l,{key:0,right:""},{default:N(()=>a[5]||(a[5]=[A("mdi-loading")])),_:1})):L("",!0)]),_:2},1032,["onClick","class"]))),128))]),_:1})])):c.value?L("",!0):(s(),u("div",fn,' Click "Refresh Configs" to load. '))])):L("",!0)])}}},gn=Q(bn,[["__scopeId","data-v-ecd4ed1d"]]);const mn={key:0,class:"experiment-running-overlay"},_n={class:"calibration-switch-row"},yn={key:2},hn={__name:"DeviceControl",setup(d){const t=Y(),{deviceConnected:e,deviceControlEnabled:C,calibrationModeEnabled:f,stirrers:c,pumps:y,valves:$,ods:V}=ee(t),x=z(()=>C.value),b=z({get:()=>f.value,set:a=>t.setCalibrationModeEnabled(a)}),{openDialog:i}=ge();async function h(){console.log("onReconnectClick"),await i({title:"Reconnect Device?",message:"Are you sure you want to reconnect the device?"})?(q.success("Reconnecting device..."),t.connectDevice()):q.error("Reconnect cancelled")}return te(()=>{t.fetchDeviceData()}),(a,l)=>{const v=B("v-btn"),g=B("v-switch");return s(),u("div",{class:W(["DeviceControl",{"device-disconnected":D(e)===!1}])},[D(C)===!1?(s(),u("div",mn)):L("",!0),o("div",_n,[D(f)?(s(),X(v,{key:0,class:"reconnect-btn",onClick:h},{default:N(()=>l[1]||(l[1]=[A("Reconnect Device")])),_:1})):L("",!0),F(g,{modelValue:b.value,"onUpdate:modelValue":l[0]||(l[0]=p=>b.value=p),label:"Calibration Mode"},null,8,["modelValue"])]),D(C)||x.value?(s(),u(U,{key:1},[F(Pt),F(Jt),F(ia),F(Ya),F(rn),D(f)?(s(),X(gn,{key:0})):L("",!0)],64)):(s(),u("p",yn,"Device Control Disabled"))],2)}}},$n=Q(hn,[["__scopeId","data-v-12bbe645"]]);export{$n as default};
