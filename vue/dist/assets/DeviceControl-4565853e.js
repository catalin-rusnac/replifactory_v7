import{z as Ie,N as Ee,J as _e,O as ot,k as F,m as ne,p as Pe,A as se,P as ye,L as ue,Q as Fe,_ as Y,B as te,h as G,o as s,c as v,a as o,F as B,i as H,t as N,e as q,w as ie,v as re,j as X,C as $,d as T,R as Se,r as U,f as V,q as R,s as L,l as z,S as he,M as st,T as it,U as rt,n as $e,b as le,y as Ce,g as ct}from"./index-845f94b5.js";import{u as ae}from"./device-800ee211.js";import{C as de,B as ut,S as dt,a as vt,b as Me,L as Ve,p as Ae,c as Le,d as Re,e as pt,P as ft}from"./chart-48157de6.js";/* empty css              */const Te={data:{type:Object,required:!0},options:{type:Object,default:()=>({})},plugins:{type:Array,default:()=>[]},datasetIdKey:{type:String,default:"label"},updateMode:{type:String,default:void 0}},bt={ariaLabel:{type:String},ariaDescribedby:{type:String}},gt={type:{type:String,required:!0},destroyDelay:{type:Number,default:0},...Te,...bt},mt=ot[0]==="2"?(p,l)=>Object.assign(p,{attrs:l}):(p,l)=>Object.assign(p,l);function oe(p){return Fe(p)?ye(p):p}function _t(p){let l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:p;return Fe(l)?new Proxy(p,{}):p}function yt(p,l){const e=p.options;e&&l&&Object.assign(e,l)}function Ne(p,l){p.labels=l}function Ue(p,l,e){const w=[];p.datasets=l.map(b=>{const i=p.datasets.find(D=>D[e]===b[e]);return!i||!b.data||w.includes(i)?{...b}:(w.push(i),Object.assign(i,b),i)})}function ht(p,l){const e={labels:[],datasets:[]};return Ne(e,p.labels),Ue(e,p.datasets,l),e}const Ct=Ie({props:gt,setup(p,l){let{expose:e,slots:w}=l;const b=F(null),i=Ee(null);e({chart:i});const D=()=>{if(!b.value)return;const{type:M,data:g,options:d,plugins:y,datasetIdKey:u}=p,a=ht(g,u),r=_t(a,g);i.value=new de(b.value,{type:M,data:r,options:{...d},plugins:y})},O=()=>{const M=ye(i.value);M&&(p.destroyDelay>0?setTimeout(()=>{M.destroy(),i.value=null},p.destroyDelay):(M.destroy(),i.value=null))},P=M=>{M.update(p.updateMode)};return ne(D),Pe(O),se([()=>p.options,()=>p.data],(M,g)=>{let[d,y]=M,[u,a]=g;const r=ye(i.value);if(!r)return;let E=!1;if(d){const h=oe(d),c=oe(u);h&&h!==c&&(yt(r,h),E=!0)}if(y){const h=oe(y.labels),c=oe(a.labels),f=oe(y.datasets),_=oe(a.datasets);h!==c&&(Ne(r.config.data,h),E=!0),f&&f!==_&&(Ue(r.config.data,f,p.datasetIdKey),E=!0)}E&&ue(()=>{P(r)})},{deep:!0}),()=>_e("canvas",{role:"img",ariaLabel:p.ariaLabel,ariaDescribedby:p.ariaDescribedby,ref:b},[_e("p",{},[w.default?w.default():""])])}});function Be(p,l){return de.register(l),Ie({props:Te,setup(e,w){let{expose:b}=w;const i=Ee(null),D=O=>{i.value=O==null?void 0:O.chart};return b({chart:i}),()=>_e(Ct,mt({ref:D},{type:p,...e}))}})}const kt=Be("bar",ut),Dt=Be("scatter",dt);const wt={class:"pump-data"},St={class:"iteration-rotation-wrapper"},$t={class:"iteration"},xt={class:"rotation"},Ot=["onClick"],It={key:0},Et={key:1},Pt=["onUpdate:modelValue","onChange"],Ft={class:"chart-container"},Mt={key:0,class:"calibration-section"},Vt={__name:"PumpCalibration",props:{pumpId:{type:Number,required:!0}},setup(p){de.register(vt,Me,Ve,Ae,Le,Re);const l=p,e=ae(),{calibrationModeEnabled:w,pumps:b,valves:i}=te(e),D=F({datasets:[{data:[]}]}),O=F({responsive:!0,devicePixelRatio:4,maintainAspectRatio:!1,plugins:{legend:{display:!1}},backgroundColor:"rgba(0, 140, 186, 0.3)",layout:{padding:{top:20}},scales:{x:{title:{display:!0,text:"rotations"}},y:{title:{display:!0,text:"mL / rotation"},beginAtZero:!1,suggestedMin:.1,suggestedMax:.22}}}),P=F({}),M=F(null),g=F([{rotations:1,iterations:50,total_ml:NaN},{rotations:5,iterations:10,total_ml:NaN},{rotations:10,iterations:5,total_ml:NaN},{rotations:50,iterations:1,total_ml:NaN}]),d=G(()=>{var c,f;return((f=(c=b.value)==null?void 0:c.calibration)==null?void 0:f[l.pumpId])||{}});function y(){return{labels:Object.keys(d.value),datasets:[{label:null,data:Object.values(d.value),fill:!1,borderColor:"rgb(75, 192, 192)",tension:.1}]}}function u(){D.value=y()}function a(c){if(!Object.values(i.value.states).some(_=>_==="open")){alert("At least one valve must be open to start the pump");return}P.value[c]=!P.value[c],P.value[c]?h(g.value[c]):e.setPartStateAction({devicePart:"pumps",partIndex:l.pumpId,newState:"stopped"})}function r(c){P.value[c]=!1}function E(c){c.total_ml&&(e.setPartCalibrationAction({devicePart:"pumps",partIndex:l.pumpId,newCalibration:{...d.value,[c.rotations]:c.total_ml/c.rotations/c.iterations}}),P.value[c]=!1)}async function h(c){if(!confirm(`Pumping ${c.rotations} rotations ${c.iterations} times. Please blank the scale. Continue?`)){const _=g.value.findIndex(m=>m===c);r(_);return}try{const _=Date.now()+Math.random();M.value=_;const m=e.startPumpCalibrationSequence({pumpId:l.pumpId,rotations:c.rotations,iterations:c.iterations});await new Promise(j=>setTimeout(j,100)),await e.fetchDeviceData(),await m;const x=g.value.findIndex(j=>j===c);if(r(x),M.value===_){const j=parseFloat(prompt("Enter total mL pumped"));isNaN(j)||(c.total_ml=j,E(c))}M.value===_&&(M.value=null)}catch(_){console.error("Calibration failed:",_);const m=g.value.findIndex(x=>x===c);r(m),M.value=null}}return ne(()=>{d.value&&u(),g.value.forEach(c=>{c.total_ml=(d.value[c.rotations]||0)*c.rotations*c.iterations,c.total_ml=c.total_ml?c.total_ml.toFixed(2):""})}),se(d,()=>{u()},{deep:!0}),se(()=>{var c,f;return(f=(c=b.value)==null?void 0:c.states)==null?void 0:f[l.pumpId]},(c,f)=>{c==="stopped"&&f==="running"&&(Object.values(P.value).some(Boolean)&&M.value&&(M.value=null),Object.keys(P.value).forEach(m=>{P.value[m]&&(P.value[m]=!1)}))}),(c,f)=>(s(),v("div",wt,[o("table",null,[f[1]||(f[1]=o("thead",null,[o("tr",null,[o("th",null,"Calibration Sequence"),o("th"),o("th",null,"Volume (mL)")])],-1)),o("tbody",null,[(s(!0),v(B,null,H(g.value,(_,m)=>(s(),v("tr",{key:m},[o("td",null,[o("div",St,[o("div",$t,N(_.iterations),1),f[0]||(f[0]=o("div",{class:"multiplier"},"x",-1)),o("div",xt,N(_.rotations)+" rots",1)])]),o("td",null,[o("button",{onClick:x=>a(m),class:q([P.value[m]?"stop-button":"",P.value[m]===!1&&g.value[m].total_ml?"restart-button":""])},[P.value[m]?(s(),v("span",It,"Stop")):(s(),v("span",Et,"Start"))],10,Ot)]),o("td",null,[ie(o("input",{"onUpdate:modelValue":x=>_.total_ml=x,onChange:x=>E(_),type:"float"},null,40,Pt),[[re,_.total_ml]])])]))),128))])]),o("div",Ft,[D.value.datasets[0].data.length>0?(s(),X($(kt),{key:0,id:"pump-calibration-chart",options:O.value,class:"pump-calibration-chart",data:D.value},null,8,["options","data"])):T("",!0)]),$(w)?(s(),v("div",Mt)):T("",!0)]))}},At=Y(Vt,[["__scopeId","data-v-23032033"]]);const Lt={key:0,class:"pump-controls"},Rt={key:1},Tt={class:"pump-input"},Nt={key:1},Ut={__name:"PumpControl",setup(p){const l=ae(),{pumps:e,valves:w,calibrationModeEnabled:b}=te(l),i=F({});se(()=>{var a;return(a=e.value)==null?void 0:a.states},a=>{},{immediate:!1});const D={1:"MAIN",2:"DRUG",3:"MISSING!!!",4:"WASTE"},O=Se({1:null,2:null,3:null,4:null}),P=Se({1:null,2:null,3:null,4:null});ne(()=>{e.value||l.fetchDeviceData()});async function M(a){if(i.value[a]&&(clearInterval(i.value[a]),delete i.value[a]),e.value.states[a]==="running"){await l.setPartStateAction({devicePart:"pumps",partIndex:a,newState:"stopped"}),await l.fetchDeviceData();return}if(!Object.values(w.value.states).some(h=>h==="open")){alert("At least one valve must be open to start the pump");return}const E=parseFloat(P[a]);if(!E){alert("Please set the volume before starting the pump");return}try{i.value[a]=setInterval(async()=>{await l.fetchDeviceData(),e.value.states[a]!=="running"&&(clearInterval(i.value[a]),delete i.value[a])},500),await l.setPartStateAction({devicePart:"pumps",partIndex:a,newState:"running",input:{volume:E}}),setTimeout(()=>{i.value[a]&&(clearInterval(i.value[a]),delete i.value[a],l.fetchDeviceData())},3e4)}catch(h){console.error(`Error starting pump ${a}:`,h),e.value.states[a]="stopped",i.value[a]&&(clearInterval(i.value[a]),delete i.value[a])}}function g(a,r){P[r]=a;const E=parseFloat(P[r]);isNaN(E)?O[r]="":O[r]=y(E,r).toFixed(2)}function d(a,r){O[r]=a;const E=parseFloat(O[r]);isNaN(E)?P[r]="":P[r]=u(E,r)}function y(a,r){const E=e.value.calibration[r],h=Object.entries(E).map(([K,ce])=>[parseInt(K),ce]).sort((K,ce)=>K[0]-ce[0]);if(a>=h[h.length-1][0]*h[h.length-1][1])return a/h[h.length-1][1];let c=h[0],f=h[h.length-1];for(let K=0;K<h.length-1;K++)if(a>=h[K][0]*h[K][1]&&a<=h[K+1][0]*h[K+1][1]){c=h[K],f=h[K+1];break}const _=c[0]*c[1],m=f[0]*f[1],x=(a-_)/(m-_),j=c[1]+(f[1]-c[1])*x;return a/j}function u(a,r){const E=e.value.calibration[r],h=Object.entries(E).map(([x,j])=>[parseInt(x),j]).sort((x,j)=>x[0]-j[0]);if(a>=h[h.length-1][0])return(a*h[h.length-1][1]).toFixed(2);let c=h[0],f=h[h.length-1];for(let x=0;x<h.length-1;x++)if(a>=h[x][0]&&a<=h[x+1][0]){c=h[x],f=h[x+1];break}const _=(a-c[0])/(f[0]-c[0]),m=c[1]+(f[1]-c[1])*_;return(a*m).toFixed(2)}return(a,r)=>{const E=U("v-progress-circular"),h=U("v-btn"),c=U("v-text-field");return $(e)&&$(e).states?(s(),v("div",Lt,[(s(),v(B,null,H([1,2,4],f=>o("div",{class:"pump",key:f},[V(h,{class:q(["pump-button",{"stop-button":$(e).states[f]==="running"}]),onClick:_=>M(f)},{default:R(()=>[$(e).states[f]==="running"?(s(),X(E,{key:0,indeterminate:"",color:"white",class:"spinner-custom",size:"64"})):(s(),v("span",Rt,[L(N(D[f]),1),r[0]||(r[0]=o("br",null,null,-1)),r[1]||(r[1]=L("pump"))]))]),_:2},1032,["class","onClick"]),o("div",Tt,[V(c,{label:"Volume (mL)",type:"number",dense:"",modelValue:P[f],"onUpdate:modelValue":[_=>P[f]=_,_=>g(_,f)]},null,8,["modelValue","onUpdate:modelValue"]),$(b)?(s(),X(c,{key:0,label:"Rotations",type:"number",dense:"",modelValue:O[f],"onUpdate:modelValue":[_=>O[f]=_,_=>d(_,f)]},null,8,["modelValue","onUpdate:modelValue"])):T("",!0),$(b)?(s(),X(At,{key:1,pumpId:f},null,8,["pumpId"])):T("",!0)])])),64))])):(s(),v("div",Nt," Loading pump data... "))}}},Bt=Y(Ut,[["__scopeId","data-v-632f9782"]]);const qt={class:"valve-calibration"},jt={class:"warning-header"},zt={key:0,class:"loading-state"},Kt={key:1,class:"calibration-controls"},Gt={class:"slider-container"},Wt={class:"slider-label"},Ht={class:"value"},Jt={class:"slider-container"},Qt={class:"slider-label"},Zt={class:"value"},Xt={class:"valve-controls"},Yt={__name:"ValveCalibration",props:{valveId:{type:Number,required:!0}},setup(p){const l=p,e=ae(),{valves:w}=te(e),b=F(.03),i=F(.12),D=F(!1),O=F(!0);se(w,a=>{var r,E;a&&(b.value=((r=a.duty_cycle_open)==null?void 0:r[l.valveId])??.03,i.value=((E=a.duty_cycle_closed)==null?void 0:E[l.valveId])??.12),O.value=!1},{immediate:!0}),ne(async()=>{try{await e.fetchDeviceData()}catch(a){console.error("Error initializing valve calibration:",a),O.value=!1}});async function P(a){var r,E;D.value=!0;try{await e.setPartStateAction({devicePart:"valves",partIndex:l.valveId,newState:a?"open":"closed",input:{dutyCycle:a?b.value:i.value}}),z.success(`Valve ${l.valveId} ${a?"opened":"closed"} successfully`)}catch(h){if(console.error("Error operating valve:",h),!h.response)z.error("Server connection error. Please check if the backend server is running.");else{const c=((E=(r=h.response)==null?void 0:r.data)==null?void 0:E.message)||h.message||"Operation failed";z.error(`Failed to ${a?"open":"close"} valve ${l.valveId}: ${c}`)}}finally{D.value=!1}}async function M(){try{await he.post("/set-valve-duty-cycle-open",{valve:l.valveId,duty_cycle:b.value}),z.success(`Valve ${l.valveId} open duty cycle set to ${b.value.toFixed(3)}`)}catch(a){console.error("Error updating open duty cycle:",a),z.error(`Failed to update valve ${l.valveId} open duty cycle`)}}async function g(){try{await he.post("/set-valve-duty-cycle-closed",{valve:l.valveId,duty_cycle:i.value}),z.success(`Valve ${l.valveId} closed duty cycle set to ${i.value.toFixed(3)}`)}catch(a){console.error("Error updating closed duty cycle:",a),z.error(`Failed to update valve ${l.valveId} closed duty cycle`)}}async function d(){b.value=.03,i.value=.12;try{await Promise.all([M(),g()]),z.success(`Valve ${l.valveId} duty cycles reset to defaults`)}catch{z.error(`Failed to reset valve ${l.valveId} duty cycles`)}}function y(a){b.value=a}function u(a){i.value=a}return(a,r)=>{const E=U("v-icon"),h=U("v-progress-circular"),c=U("v-slider"),f=U("v-btn");return s(),v("div",qt,[o("div",jt,[V(E,{color:"error",size:"large"},{default:R(()=>r[4]||(r[4]=[L("warning")])),_:1}),o("h2",null,"Warning! Valve "+N(p.valveId)+" Calibration Mode",1)]),O.value?(s(),v("div",zt,[V(h,{indeterminate:"",color:"primary"}),r[5]||(r[5]=o("span",null,"Loading valve data...",-1))])):(s(),v("div",Kt,[o("div",Gt,[o("div",Wt,[r[6]||(r[6]=o("span",null,"Open Duty Cycle",-1)),o("span",Ht,N(b.value.toFixed(3)),1)]),V(c,{modelValue:b.value,"onUpdate:modelValue":[r[0]||(r[0]=_=>b.value=_),y],min:.02,max:.04,step:.001,color:"primary","track-color":"grey","thumb-label":"",onMouseup:M},null,8,["modelValue"])]),o("div",Jt,[o("div",Qt,[r[7]||(r[7]=o("span",null,"Closed Duty Cycle",-1)),o("span",Zt,N(i.value.toFixed(3)),1)]),V(c,{modelValue:i.value,"onUpdate:modelValue":[r[1]||(r[1]=_=>i.value=_),u],min:.11,max:.13,step:.001,color:"primary","track-color":"grey","thumb-label":"",onMouseup:g},null,8,["modelValue"])]),o("div",Xt,[V(f,{color:"success",onClick:r[2]||(r[2]=_=>P(!0)),loading:D.value,disabled:D.value},{default:R(()=>r[8]||(r[8]=[L(" Open Valve ")])),_:1},8,["loading","disabled"]),V(f,{color:"error",onClick:r[3]||(r[3]=_=>P(!1)),loading:D.value,disabled:D.value},{default:R(()=>r[9]||(r[9]=[L(" Close Valve ")])),_:1},8,["loading","disabled"]),V(f,{color:"primary",onClick:d},{default:R(()=>r[10]||(r[10]=[L(" Reset Defaults ")])),_:1})])]))])}}},ea=Y(Yt,[["__scopeId","data-v-2b40de6c"]]);const ta={class:"valve-controls"},aa=["onClick","disabled"],na={key:0,class:"spinner-border spinner-custom",role:"status"},la={key:1},oa={__name:"ValveControl",setup(p){const l=ae(),{valves:e}=te(l),w=F({}),b=new(window.AudioContext||window.webkitAudioContext),i=F(!1),D=F(null);function O(g){const d=g==="open"?500:300,y=g==="open"?300:500,u=b.createOscillator();u.type="sine";const a=b.createGain();return a.gain.setValueAtTime(.1,b.currentTime),u.connect(a),a.connect(b.destination),u.frequency.setValueAtTime(d,b.currentTime),u.frequency.linearRampToValueAtTime(y,b.currentTime+.3),u.start(),u.stop(b.currentTime+.3),u}async function P(g){const d=e.value.states[g];if(w.value[g])return;w.value={...w.value,[g]:!0};const y=O(d);try{await l.setPartStateAction({devicePart:"valves",partIndex:g,newState:d==="open"?"closed":"open"}),y.stop()}catch(u){console.error(u)}finally{w.value={...w.value,[g]:!1}}}function M(g,d){if(d.ctrlKey&&d.shiftKey){D.value=g,i.value=!0;return}P(g)}return(g,d)=>{const y=U("v-dialog");return s(),v(B,null,[o("div",ta,[(s(),v(B,null,H(7,u=>o("button",{class:q(["btn",{"btn-danger":$(e).states[u]==="closed"&&!w.value[u],"btn-success":$(e).states[u]==="open"&&!w.value[u],"btn-warning":w.value[u]}]),key:u,onClick:a=>M(u,a),disabled:w.value[u]},[w.value[u]?(s(),v("div",na)):(s(),v("span",la,"Valve "+N(u),1))],10,aa)),64))]),V(y,{modelValue:i.value,"onUpdate:modelValue":d[1]||(d[1]=u=>i.value=u),"max-width":"600"},{default:R(()=>[i.value?(s(),X(ea,{key:0,valveId:D.value,onClose:d[0]||(d[0]=u=>i.value=!1)},null,8,["valveId"])):T("",!0)]),_:1},8,["modelValue"])],64)}}},sa=Y(oa,[["__scopeId","data-v-a341c808"]]);const ia={class:"elements-container"},ra={class:"stirrer-name"},ca={key:0},ua={style:{position:"relative",display:"inline-block"}},da={style:{position:"relative",display:"inline-block"}},va={class:"buttons-container"},xe=0,Oe=1,pa={__name:"StirrerCalibration",props:{stirrerId:{type:Number,required:!0}},setup(p){const l=p,e=F(null),w=F(null),b=F(null),i=new(window.AudioContext||window.webkitAudioContext);let D=null,O=null,P=null;const M=ae(),{calibrationModeEnabled:g,stirrers:d}=te(M),y=G(()=>d.value&&d.value.states?d.value.states[l.stirrerId]:void 0);function u(_){M.setPartStateAction({devicePart:"stirrers",partIndex:l.stirrerId,newState:_})}function a(_){if(d.value&&d.value.states)for(let m=1;m<=7;m++)d.value.states[m]=_;M.setAllStirrersStateAction&&M.setAllStirrersStateAction(_)}function r(_,m){h(m.target.value)}function E(_,m){!d.value||!d.value.calibration||!d.value.calibration[l.stirrerId]||M.setPartCalibrationAction({devicePart:"stirrers",partIndex:l.stirrerId,newCalibration:{low:d.value.calibration[l.stirrerId].low,high:d.value.calibration[l.stirrerId].high}}).catch(x=>{console.error("Error updating stirrer calibration:",x)})}function h(_){D||(D=i.createOscillator(),O=i.createGain(),D.type="sine",O.gain.setValueAtTime(.1,i.currentTime),D.connect(O),O.connect(i.destination),D.start());const m=300+_*500;D.frequency.setValueAtTime(m,i.currentTime),P&&clearTimeout(P),P=setTimeout(c,200)}function c(){D&&(O.gain.exponentialRampToValueAtTime(.001,i.currentTime+.01),O.gain.setValueAtTime(.1,i.currentTime+.02),D.stop(i.currentTime+.02),D=null,O=null)}function f(_,m){(_==="high"&&y.value!=="high"||_==="low"&&y.value!=="low")&&(m.preventDefault(),z("Enable stirrer to adjust speed",{type:"info"}))}return ne(()=>{window.addEventListener("resize",()=>{})}),st(()=>{window.removeEventListener("resize",()=>{})}),(_,m)=>(s(),v("div",{class:"stirrer-calibrator",ref_key:"container",ref:e},[o("div",ia,[o("div",ra,[o("header",null,"Stirrer "+N(p.stirrerId),1)]),$(g)&&$(d)&&$(d).calibration&&$(d).calibration[p.stirrerId]?(s(),v("div",ca,[o("div",ua,[ie(o("input",{type:"range",class:q(["slider slider-high",[{active:y.value==="high"},{"slider-disabled":y.value!=="high"}]]),min:xe,max:Oe,step:.01,"onUpdate:modelValue":m[0]||(m[0]=x=>$(d).calibration[p.stirrerId].high=x),onInput:m[1]||(m[1]=x=>r("high",x)),onChange:m[2]||(m[2]=x=>E())},null,34),[[re,$(d).calibration[p.stirrerId].high,void 0,{number:!0}]]),y.value!=="high"?(s(),v("div",{key:0,class:"slider-overlay",onClick:m[3]||(m[3]=x=>f("high",x))})):T("",!0)]),o("div",da,[ie(o("input",{type:"range",class:q(["slider slider-low",[{active:y.value==="low"},{"slider-disabled":y.value!=="low"}]]),min:xe,max:Oe,step:.01,"onUpdate:modelValue":m[4]||(m[4]=x=>$(d).calibration[p.stirrerId].low=x),onInput:m[5]||(m[5]=x=>r("low",x)),onChange:m[6]||(m[6]=x=>E())},null,34),[[re,$(d).calibration[p.stirrerId].low,void 0,{number:!0}]]),y.value!=="low"?(s(),v("div",{key:0,class:"slider-overlay",onClick:m[7]||(m[7]=x=>f("low",x))})):T("",!0)])])):T("",!0),o("div",va,[o("button",{class:q(["button button-high",{active:y.value==="high"}]),ref_key:"buttonHigh",ref:w,onClick:m[8]||(m[8]=x=>u("high")),onDblclick:m[9]||(m[9]=x=>a("high"))},"High",34),o("button",{class:q(["button button-low",{active:y.value==="low"}]),ref_key:"buttonLow",ref:b,onClick:m[10]||(m[10]=x=>u("low")),onDblclick:m[11]||(m[11]=x=>a("low"))},"Low",34),o("button",{class:q(["button button-off",{active:y.value==="stopped"}]),ref:"buttonOff",onClick:m[12]||(m[12]=x=>u("stopped")),onDblclick:m[13]||(m[13]=x=>a("stopped"))},"OFF",34)])])],512))}},fa=Y(pa,[["__scopeId","data-v-d01f6391"]]);const ba={name:"StirrerControl",components:{StirrerCalibration:fa}},ga={class:"stirrer-controls"};function ma(p,l,e,w,b,i){const D=U("StirrerCalibration");return s(),v("div",ga,[(s(),v(B,null,H(7,O=>V(D,{key:O,stirrerId:O},null,8,["stirrerId"])),64))])}const _a=Y(ba,[["render",ma],["__scopeId","data-v-6cada7fd"]]),ya={className:"single-chart-container"},ha={__name:"ODChart",props:{partId:{type:Number,required:!0}},setup(p){de.register(Ae,Le,Re,pt,Me,Ve,ft);const l=p,e=ae(),{ods:w}=te(e),b=G(()=>{var g,d;return(d=(g=w.value)==null?void 0:g.calibration)==null?void 0:d[l.partId]}),i=G(()=>{var g,d;return(d=(g=w.value)==null?void 0:g.calibration_coefs)==null?void 0:d[l.partId]}),D=G(()=>{var g,d,y,u;return{od:(d=(g=w.value)==null?void 0:g.states)==null?void 0:d[l.partId],signal:(u=(y=w.value)==null?void 0:y.odsignals)==null?void 0:u[l.partId]}});function O(g,d,y){return-Math.log10(g/d)*y}const P=G(()=>{if(b.value&&typeof b.value=="object"&&i.value){const g=Object.entries(b.value).filter(([a,r])=>r!==null).map(([a,r])=>({x:Number(r),y:Number(a)})).sort((a,r)=>a.x-r.x);let d=Math.min(...g.map(a=>a.x)),y=Math.max(...g.map(a=>a.x));const u=[];d===y&&(d=0,y=50);for(let a=d;a<=y;a+=.1){const r=O(a,...i.value);u.push({x:a,y:r})}return{datasets:[{label:`Vial ${l.partId} Calibration OD`,data:g,borderColor:"#607ecb",backgroundColor:"rgba(83,158,255,0.64)"},{label:`Vial ${l.partId} Current OD`,data:[{x:D.value.signal,y:D.value.od}],pointRadius:5,backgroundColor:"rgba(255,1,60,0.64)"},{label:`Vial ${l.partId} Fit`,data:u,pointRadius:0,borderColor:"rgba(0,70,220,0.38)",borderWidth:2,showLine:!0,fill:!1,borderDash:[2,2]}]}}return{}}),M=G(()=>{var g,d;return{devicePixelRatio:4,responsive:!0,maintainAspectRatio:!1,plugins:{legend:{display:!1},title:{display:!0,text:`Vial ${l.partId}`+(i.value?`
blank: ${(g=i.value[0])==null?void 0:g.toFixed(2)}, scaling: ${(d=i.value[1])==null?void 0:d.toFixed(2)}`:"")}},scales:{x:{title:{display:!0,text:"Signal (mV)"},suggestedMin:0},y:{title:{display:!0,text:"OD"},suggestedMax:1.5,suggestedMin:0}}}});return(g,d)=>(s(),v("div",ya,[V($(Dt),{data:P.value,options:M.value},null,8,["data","options"])]))}};F({show:!1,title:"",content:"",resolve:null});const Ca={class:"guide-popup"},ka={class:"guide-header"},Da={__name:"ODGuide",setup(p){return(l,e)=>{const w=U("v-icon");return s(),v("div",{class:"guide-overlay",onClick:e[1]||(e[1]=rt(b=>l.$emit("close"),["self"]))},[o("div",Ca,[o("div",ka,[e[3]||(e[3]=o("span",{class:"guide-title"},"OD Calibration Guide",-1)),o("button",{class:"guide-close",onClick:e[0]||(e[0]=b=>l.$emit("close"))},[V(w,null,{default:R(()=>e[2]||(e[2]=[L("mdi-close")])),_:1})])]),e[4]||(e[4]=it('<div class="guide-content" data-v-8d7af6ce><div class="guide-section" data-v-8d7af6ce><b class="section-title" data-v-8d7af6ce>What is Optical Density (OD)?</b><br data-v-8d7af6ce><span class="guide-text" data-v-8d7af6ce> Optical Density (OD) measures how much light is absorbed by a sample. The higher the OD, the more cells or particles are in the solution. </span></div><div class="guide-section" data-v-8d7af6ce><b class="section-title" data-v-8d7af6ce>Beer-Lambert Law and Scaling Factor</b><br data-v-8d7af6ce><span class="guide-text" data-v-8d7af6ce> The Beer-Lambert Law relates OD to the transmitted light signal: </span><br data-v-8d7af6ce><span class="formula" data-v-8d7af6ce> OD = -log₁₀(signal / blank_signal) </span><br data-v-8d7af6ce><span class="guide-text" data-v-8d7af6ce> In our devices, the light path is not a standard 1cm cuvette. The curved shape of the vial and the sensor design affect how light travels through the sample. This is corrected using a scaling factor: </span><br data-v-8d7af6ce><span class="formula" data-v-8d7af6ce> OD = -log₁₀(signal / blank_signal) * scaling </span><br data-v-8d7af6ce></div><div class="guide-section" data-v-8d7af6ce><b class="section-title" data-v-8d7af6ce>Calibration Process</b><div class="method-panel" data-v-8d7af6ce><div class="method-heading" data-v-8d7af6ce>Step 1: Measure OD₀ (Blank Signal)</div><div class="od-warning-box" data-v-8d7af6ce><b data-v-8d7af6ce>Important: OD₀ must be measured with a vial containing growth medium!</b><div class="od-warning-details" data-v-8d7af6ce> - Use the same growth medium that will be used in your experiment<br data-v-8d7af6ce> - The vial must be filled with liquid<br data-v-8d7af6ce> - A good blank signal should be above 20mV<br data-v-8d7af6ce> - If the signal is below 20mV, check for:<br data-v-8d7af6ce>   • Proper vial alignment<br data-v-8d7af6ce>   • Clean sensors and vials<br data-v-8d7af6ce>   • No obstructions in the light path </div></div></div><div class="method-panel" data-v-8d7af6ce><div class="method-heading" data-v-8d7af6ce>Step 2 (Optional): Measure additional OD values to calibrate the scaling factor</div><div class="option-container" data-v-8d7af6ce><div class="option-box" data-v-8d7af6ce><div class="method-subheading" data-v-8d7af6ce>Option A: Using Liquid Samples (Recommended)</div><ol class="guide-ol" data-v-8d7af6ce><li data-v-8d7af6ce>Prepare a vial with a known OD between 0.1 and 2.0: </li><li data-v-8d7af6ce>Insert this vial into each slot and measure its signal using the calibration table.</li><li data-v-8d7af6ce>The scaling factor will be automatically calculated from these measurements.</li><i data-v-8d7af6ce>Repeat with different OD values for increased accuracy.</i></ol></div><div class="option-box" data-v-8d7af6ce><div class="method-subheading" data-v-8d7af6ce>Option B: Using Semitransparent Sheets</div><ol class="guide-ol" data-v-8d7af6ce><li data-v-8d7af6ce>Determine the equivalent OD of one or more semitransparent sheets (using a solution which creates the same signal as the sheet inserted in the sensor)</li><li data-v-8d7af6ce>Place the sheet over all sensors at once</li><li data-v-8d7af6ce>Measure the signals and the scaling factor will be calculated automatically</li><i data-v-8d7af6ce>Note: This method is less accurate than using liquid samples</i></ol></div></div></div><div class="method-panel" data-v-8d7af6ce><div class="method-heading" data-v-8d7af6ce>Step 3: Final Check</div><div class="guide-text" data-v-8d7af6ce> Ideally, remeasure OD₀ just before starting the experiment. Small changes in the position of the vial and media composition can affect the signal. </div></div></div></div>',1))])])}}},wa=Y(Da,[["__scopeId","data-v-8d7af6ce"]]);const Sa={class:"od-control-container"},$a=["onClick","disabled"],xa={key:1},Oa={key:0,class:"od-output-value error-message"},Ia={key:3,class:"signal-output-value error-message"},Ea={key:0,class:"calibration-section"},Pa={class:"probe-table-outer-container",style:{"margin-bottom":"18px"}},Fa={class:"table-controls"},Ma={class:"mode-controls"},Va={class:"calibration-table-wrapper"},Aa={class:"calibration-table"},La={key:0,style:{width:"36px"}},Ra={class:"od-value-container"},Ta=["onDblclick"],Na=["value","onInput","onBlur","onKeyup"],Ua=["title"],Ba={key:1,class:"signal-value"},qa={key:1,class:"signal-value"},ja={key:1,class:"measure-cell-container"},za=["onDblclick"],Ka=["onDblclick"],Ga=["value","onInput","onBlur","onKeyup"],Wa=["onClick","disabled","title"],Ha={key:0,class:"measure-button-content"},Ja={key:1,class:"measure-button-content"},Qa={key:0,style:{"text-align":"center",width:"36px",padding:"4px"}},Za=["onClick","disabled"],Xa={key:1,style:{width:"36px"}},Ya={key:0},en={class:"scaling-factor-container"},tn={class:"calibration-table"},an={class:"scaling-factor-row"},nn=["title"],ln=["onUpdate:modelValue"],on=["onDblclick","title"],sn=["onBlur","onKeyup"],rn={key:1},cn={key:0,style:{width:"40px"}},un={key:0,class:"chart-container"},dn={__name:"ODControl",setup(p){const l=ae(),{ods:e,calibrationModeEnabled:w}=te(l),{openDialog:b}=Ce(),i=[1,2,3,4,5,6,7],D=F(!1),O=F(!0),P=F(!1),M=F(!1),g=F(null),d=F({}),y=F({}),u=F({}),a=G(()=>{let n=new Set;if(e.value.calibration)for(let I in e.value.calibration)for(let A in e.value.calibration[I])n.add(A);return Array.from(n).sort((I,A)=>parseFloat(I)-parseFloat(A))}),r=G(()=>{if(!e.value.calibration)return[];const n=new Set;for(const t in e.value.calibration)for(const I in e.value.calibration[t])n.add(parseFloat(I));return Array.from(n).sort((t,I)=>t-I)}),E=F(new Set),h=G(()=>{const n=e.value.calibration_coefs||{};return i.map(t=>{var I;return((I=n[t])==null?void 0:I[1])??"—"})}),c=F([]),f=F(null),_=F(null);se(h,n=>{c.value=[...n]},{immediate:!0}),ne(()=>{l.fetchDeviceData(),document.addEventListener("click",m)}),Pe(()=>{document.removeEventListener("click",m)});function m(n){if(Z.value&&!n.target.closest(".calibration-signal")&&pe(Z.value.vial,Z.value.odValue),ee.value&&!n.target.closest(".od-value-input")){const t=r.value.indexOf(ee.value);t!==-1&&ve(ee.value,t),ee.value=null}f.value&&!n.target.closest(".scaling-factor-input")&&ge(f.value)}async function x(n){var t,I;if(console.log("handleOdClick called with odIndex:",n,typeof n),g.value===null){g.value=n,delete d.value[n];try{console.log("Starting OD measurement for index:",n);const A=await he.post("/measure-ods",{partIndex:n});if(console.log("Raw API response:",A),A.data.success)console.log("OD measurement successful for index:",n),await l.fetchDeviceData(),delete d.value[n];else throw console.log("API returned failure for index:",n),new Error(A.data.message||"Measurement failed")}catch(A){console.error("Error measuring OD:",A),console.log("Setting error for OD index:",n);const k=((I=(t=A.response)==null?void 0:t.data)==null?void 0:I.message)||A.message||"Measurement failed";d.value={...d.value,[n]:k},console.log("Error set for odIndex:",n,"error:",k),console.log("Full odErrors object:",d.value)}finally{g.value=null}}}function j(n,t,I){u.value[t]||(u.value[t]={}),u.value[t][I]=parseFloat(n.target.value)}function K(n,t){if(u.value[n]&&u.value[n][t]!==void 0){e.value.calibration[n]||(e.value.calibration[n]={});const I=u.value[n][t];isNaN(u.value[n][t])&&delete e.value.calibration[n][t],l.updateODCalibrationValueAction({od:t,vial:n,newValue:I}).catch(A=>{console.error(`Error updating calibration for vial ${n}:`,A)}),delete u.value[n][t]}}function ce(n,t){return u.value[n]&&u.value[n][t]!==void 0?u.value[n][t]:e.value.calibration&&e.value.calibration[n]&&e.value.calibration[n][t]!==void 0?e.value.calibration[n][t]:""}function qe(n,t){if(!e.value.calibration||!e.value.calibration[n]||e.value.calibration[n][t]===void 0)return{background:""};const I=parseFloat(e.value.calibration[n][t]),A=5,k=40;let C;if(I<=0)C=A;else{const S=Math.log(10),J=Math.log(1e3),lt=(Math.log(Math.max(10,Math.min(1e3,I)))-S)/(J-S);C=A+lt*(k-A)}return{background:`rgba(255, 100, 100, ${C/100})`}}function je(n){if(n==null)return"";const t=parseFloat(n);if(isNaN(t))return"";const I=.02,A=.25,k=Math.max(0,Math.min(4,t)),C=Math.log(k+1)/Math.log(5),S=I+C*(A-I);return`background: linear-gradient(to right, rgba(255, 235, 156, ${S}), rgba(255, 235, 156, ${S*.6}))`}async function ve(n,t,I){if(y.value[t]!==void 0){const A=y.value[t];if(r.value.some((C,S)=>S!==t&&parseFloat(C)===parseFloat(A))&&!await b({title:"Duplicate OD Value",message:`An OD probe value of ${A} already exists. Are you sure you want to overwrite?`,showCancel:!0})){delete y.value[t];return}r.value[t]=A,delete y.value[t];try{for(let C in e.value.calibration){const S=e.value.calibration[C],J=JSON.parse(JSON.stringify(S));S[n]!==void 0&&(delete J[n],J[A]=S[n],await l.setPartCalibrationAction({devicePart:"ods",partIndex:C,newCalibration:J}))}await l.fetchDeviceData()}catch(C){console.error("Error updating calibration:",C),z.error("Failed to update calibration values")}}}function ze(n,t){console.log("handleProbeValueInput",n.target.value),y.value[t]=parseFloat(n.target.value)}function Ke(){P.value=!0}function Ge(){P.value=!1}function We(){if(!r.value.length)return .1;const n=Math.max(...r.value);return parseFloat((n+.1).toFixed(2))}async function He(){const n=We();for(const t of i)e.value.calibration[t]||(e.value.calibration[t]={}),e.value.calibration[t][n]=null,await l.setPartCalibrationAction({devicePart:"ods",partIndex:t,newCalibration:e.value.calibration[t]});await l.fetchDeviceData()}async function Je(n){const t=a.value[n];E.value.add(t);for(const I of i)e.value.calibration[I]&&(delete e.value.calibration[I][t],await l.setPartCalibrationAction({devicePart:"ods",partIndex:I,newCalibration:e.value.calibration[I]}));await l.fetchDeviceData(),E.value.delete(t)}const W={VIEW:"view",MEASURE:"measure"},Q=F(W.VIEW);G(()=>({"view-mode":Q.value===W.VIEW,"measure-mode":Q.value===W.MEASURE}));async function Qe(n,t){try{await l.measureDevicePart({devicePart:"ods",partIndex:n});const I=e.value.odsignals[n];await l.updateODCalibrationValueAction({od:t,vial:n,newValue:I}),await l.fetchDeviceData()}catch(I){console.error("Error measuring cell:",I)}}const Z=F(null),Ze=F(null);function De(n,t){Z.value={vial:n,odValue:t},ue(()=>{const I=document.querySelector(".calibration-signal");I&&I.focus()})}function pe(n,t){u.value[n]&&u.value[n][t]!==void 0&&K(n,t),Z.value=null}function Xe(){if(Z.value=null,Z.value){const{vial:n,odValue:t}=Z.value;u.value[n]&&delete u.value[n][t]}}const ee=F(null);function Ye(n,t){ee.value=n,ue(()=>{const I=document.querySelector(".od-value-input");I&&I.focus()})}function et(){if(ee.value=null,ee.value){const n=r.value.indexOf(ee.value);n!==-1&&y.value[n]&&delete y.value[n]}}const fe=(n,t)=>({icon:"",color:"#90caf9",tooltip:"Scaling factor"});function we(n){return!e.value.calibration||!e.value.calibration[n]?0:Object.values(e.value.calibration[n]).filter(t=>t!=null).length}function be(n){return we(n)===1}function tt(n){const t=we(n);return t>=2?"Scaling factor is automatically calculated from multiple calibration points. Cannot be edited.":t===1?"Double-click to edit scaling factor.":"No calibration points available for this vial."}function at(n){if(!be(n))return;f.value=n;const t=c.value[n-1];_.value=typeof t=="number"?t:2,ue(()=>{const I=document.querySelector(".scaling-factor-input");I&&(I.focus(),I.select())})}async function ge(n){if(f.value===n)try{_.value&&_.value>0&&await l.setODScalingFactorAction({vial:n,scalingFactor:_.value})}catch(t){console.error("Error setting scaling factor:",t)}finally{f.value=null,_.value=null}}function nt(){f.value=null,_.value=null}const me=n=>typeof n!="number"?{icon:"mdi-help-circle-outline",color:"grey",tooltip:"No signal value available"}:n>=20?{icon:"mdi-check-circle",color:"#4caf50",tooltip:"Signal value within expected range"}:n>=12?{icon:"mdi-alert-circle",color:"#ffc107",tooltip:"Signal value slightly low. Consider recalibrating"}:{icon:"mdi-close-circle",color:"#f44336",tooltip:"Signal value too low. Check OD sensor"};return(n,t)=>{const I=U("v-progress-circular"),A=U("v-icon");return s(),v(B,null,[o("div",Sa,[(s(!0),v(B,null,H($(e).states,(k,C)=>(s(),v("div",{class:"elements-container",key:C},[o("button",{class:"od-button",onClick:S=>x(C),disabled:g.value===C},[g.value===C?(s(),X(I,{key:0,indeterminate:"",color:"white",size:"24"})):(s(),v("span",xa,"OD "+N(C),1))],8,$a),d.value[C]?(s(),v("span",Oa,N(d.value[C]),1)):$(e).states&&$(e).states[C]!==void 0&&$(e).states[C]!==0?(s(),v("span",{key:1,class:q(["od-output-value",{"value-being-replaced":g.value===C}])},N(parseFloat($(e).states[C].toFixed(2))),3)):(s(),v("span",{key:2,class:q(["od-output-value",{"value-being-replaced":g.value===C}])},"---",2)),t[2]||(t[2]=o("div",{style:{height:"0.5px"}},null,-1)),d.value[C]?(s(),v("span",Ia)):$(e).odsignals&&$(e).odsignals[C]!==void 0&&$(e).odsignals[C]!==0?(s(),v("span",{key:4,class:q(["signal-output-value",{"value-being-replaced":g.value===C}])},"("+N(parseFloat($(e).odsignals[C].toFixed(2)))+"mV)",3)):(s(),v("span",{key:5,class:q(["signal-output-value",{"value-being-replaced":g.value===C}])},"(---)",2))]))),128))]),$(w)?(s(),v("div",Ea,[o("div",Pa,[t[7]||(t[7]=o("div",{style:{display:"flex","align-items":"center","margin-bottom":"8px"}},null,-1)),o("div",Fa,[t[6]||(t[6]=o("div",{style:{flex:"1"}},null,-1)),o("div",Ma,[o("button",{class:q(["control-button mode-toggle",{active:Q.value===W.MEASURE}]),onClick:t[0]||(t[0]=k=>Q.value=Q.value===W.MEASURE?W.VIEW:W.MEASURE)},[V(A,null,{default:R(()=>t[3]||(t[3]=[L("mdi-pencil")])),_:1}),t[4]||(t[4]=L(" Edit "))],2)]),o("button",{class:"control-button help-button",onClick:Ke},[V(A,null,{default:R(()=>t[5]||(t[5]=[L("mdi-help-circle-outline")])),_:1})])])]),t[16]||(t[16]=o("div",{class:"calibration-controls"},null,-1)),o("div",Va,[o("table",Aa,[o("thead",null,[o("tr",null,[t[8]||(t[8]=o("th",{style:{width:"110px"}},"OD Value",-1)),(s(),v(B,null,H(i,k=>o("th",{key:k,style:{width:"90px"}},"Vial "+N(k),1)),64)),D.value?(s(),v("th",La)):T("",!0)])]),o("tbody",null,[(s(!0),v(B,null,H(a.value,(k,C)=>(s(),v("tr",{key:k,class:q({"od-zero-row":parseFloat(k)===0})},[o("td",{style:$e([{width:"110px"},je(k)])},[o("div",Ra,[!ee.value||ee.value!==k?(s(),v("span",{key:0,class:"od-value-display",onDblclick:S=>Ye(k),title:"Double click to edit"},N(C<r.value.length?y.value[C]!==void 0?y.value[C]:r.value[C]:k),41,Ta)):(s(),v("input",{key:1,value:y.value[C]!==void 0?y.value[C]:r.value[C],onInput:S=>ze(S,C),onBlur:S=>ve(k,C),onKeyup:[le(S=>ve(k,C),["enter"]),le(et,["esc"])],type:"number",step:"0.1",class:"od-value-input",ref_for:!0,ref:"odValueInput"},null,40,Na))])],4),(s(),v(B,null,H(i,S=>o("td",{key:S,class:q({"has-data":$(e).calibration&&$(e).calibration[S]&&$(e).calibration[S][k]!==void 0}),style:$e({background:qe(S,k).background})},[Q.value===W.VIEW?(s(),v(B,{key:0},[$(e).calibration&&$(e).calibration[S]&&$(e).calibration[S][k]!==void 0&&$(e).calibration[S][k]!==null?(s(),v(B,{key:0},[parseFloat(k)===0?(s(),v("div",{key:0,class:"signal-value-with-status",title:me($(e).calibration[S][k]).tooltip},[L(N($(e).calibration[S][k].toFixed(2))+" ",1),V(A,{color:me($(e).calibration[S][k]).color,size:"small",style:{"margin-left":"4px"}},{default:R(()=>[L(N(me($(e).calibration[S][k]).icon),1)]),_:2},1032,["color"])],8,Ua)):(s(),v("div",Ba,N($(e).calibration[S][k].toFixed(2)),1))],64)):(s(),v("div",qa,"---"))],64)):Q.value===W.MEASURE?(s(),v("div",ja,[$(e).calibration&&$(e).calibration[S]&&$(e).calibration[S][k]!==void 0&&$(e).calibration[S][k]!==null?(s(),v("span",{key:0,class:"signal-value measure-background-value",onDblclick:J=>De(S,k),title:"Double click to edit"},N(parseFloat($(e).calibration[S][k]).toFixed(2))+"mV ",41,za)):(s(),v("span",{key:1,class:"signal-value measure-background-value empty-value",onDblclick:J=>De(S,k),title:"Double click to edit"}," ——— ",40,Ka)),Z.value&&Z.value.vial===S&&Z.value.odValue===k?(s(),v("input",{key:2,value:ce(S,k),onInput:J=>j(J,S,k),onBlur:J=>pe(S,k),onKeyup:[le(J=>pe(S,k),["enter"]),le(Xe,["esc"])],type:"number",class:"calibration-signal",ref_for:!0,ref_key:"editingInput",ref:Ze},null,40,Ga)):T("",!0),o("button",{class:"measure-cell-button",onClick:J=>Qe(S,k),disabled:M.value,title:`Calibrate OD ${parseFloat(k).toFixed(2)} signal in vial ${S} (measure now)`},[M.value?(s(),v("span",Ha,t[9]||(t[9]=[o("span",{class:"loading-spinner"},null,-1)]))):(s(),v("span",Ja,[V(A,null,{default:R(()=>t[10]||(t[10]=[L("mdi-camera-metering-center")])),_:1})]))],8,Wa)])):T("",!0)],6)),64)),Q.value===W.MEASURE&&parseFloat(a.value[C])!==0?(s(),v("td",Qa,[o("button",{class:"delete-od-row",onClick:S=>Je(C),disabled:E.value.has(a.value[C]),title:"Delete row"},[V(A,null,{default:R(()=>t[11]||(t[11]=[L("mdi-delete")])),_:1})],8,Za)])):Q.value===W.MEASURE?(s(),v("td",Xa)):T("",!0)],2))),128)),Q.value===W.MEASURE?(s(),v("tr",Ya,[o("td",null,[o("button",{class:"add-od-probe-table",onClick:He},[V(A,null,{default:R(()=>t[12]||(t[12]=[L("mdi-plus")])),_:1}),t[13]||(t[13]=L(" Add "))])]),(s(),v(B,null,H(i,k=>o("td",{key:"add-row-"+k})),64)),t[14]||(t[14]=o("td",null,null,-1))])):T("",!0)])])]),o("div",en,[o("table",tn,[o("tbody",null,[o("tr",an,[t[15]||(t[15]=o("th",{class:"scaling-factor-label"},"Scaling Factor",-1)),(s(!0),v(B,null,H(c.value,(k,C)=>(s(),v("th",{key:"sf-head-"+C,class:"scaling-factor-cell",title:fe().tooltip},[D.value?ie((s(),v("input",{key:0,type:"number",step:"0.01",min:"0.1","onUpdate:modelValue":S=>c.value[C]=S,style:{width:"60px","text-align":"center",background:"#23272e",color:"#90caf9",border:"1px solid #444","border-radius":"4px"}},null,8,ln)),[[re,c.value[C],void 0,{number:!0}]]):(s(),v("div",{key:1,class:q(["scaling-factor-value",{editable:be(C+1),"non-editable":!be(C+1)}]),onDblclick:S=>at(C+1),title:tt(C+1)},[f.value===C+1?ie((s(),v("input",{key:0,"onUpdate:modelValue":t[1]||(t[1]=S=>_.value=S),onBlur:S=>ge(C+1),onKeyup:[le(S=>ge(C+1),["enter"]),le(nt,["esc"])],type:"number",step:"0.01",min:"0.1",class:"scaling-factor-input",ref_for:!0,ref:"scalingFactorInput"},null,40,sn)),[[re,_.value,void 0,{number:!0}]]):(s(),v("span",rn,[L(N(typeof k=="number"?k.toFixed(2):k)+" ",1),V(A,{color:fe().color,size:"small",style:{"margin-left":"4px"}},{default:R(()=>[L(N(fe(k,C+1).icon),1)]),_:2},1032,["color"])]))],42,on))],8,nn))),128)),Q.value===W.MEASURE?(s(),v("th",cn)):T("",!0)])])])]),O.value?(s(),v("div",un,[(s(),v(B,null,H(i,k=>V(ha,{partId:k,key:k},null,8,["partId"])),64))])):T("",!0)])):T("",!0),P.value?(s(),X(wa,{key:1,onClose:Ge})):T("",!0)],64)}}},vn=Y(dn,[["__scopeId","data-v-6b75e0ac"]]);const ke=ae(),{leds:pn}=te(ke);ne(()=>{pn.value||ke.fetchDeviceData()});const fn={name:"SetLEDColor",data(){return{vials:[1,2,3,4,5,6,7],ledColors:{1:{red:0,green:0,blue:0,color:"#000000"},2:{red:0,green:0,blue:0,color:"#000000"},3:{red:0,green:0,blue:0,color:"#000000"},4:{red:0,green:0,blue:0,color:"#000000"},5:{red:0,green:0,blue:0,color:"#000000"},6:{red:0,green:0,blue:0,color:"#000000"},7:{red:0,green:0,blue:0,color:"#000000"}}}},methods:{async setLEDColor(p,l){if(l.shiftKey){const{red:e,green:w,blue:b}=this.ledColors[p];for(const i of this.vials)this.ledColors[i].red=e,this.ledColors[i].green=w,this.ledColors[i].blue=b,this.ledColors[i].color=this.ledColors[p].color,await this.setIndividualLEDColor(i)}else await this.setIndividualLEDColor(p)},async setIndividualLEDColor(p){const{red:l,green:e,blue:w}=this.ledColors[p];try{console.log("Setting color for vial",p,"to",l,e,w),await ke.setLedColor(p,l,e,w)}catch(b){console.error(`Failed to set color for vial ${p}:`,b),alert(`Error setting color for vial ${p}`)}},updateColor(p){const l=this.ledColors[p].color,{r:e,g:w,b}=this.hexToRgb(l);this.ledColors[p].red=e/255,this.ledColors[p].green=w/255,this.ledColors[p].blue=b/255},hexToRgb(p){const l=parseInt(p.slice(1),16);return{r:l>>16&255,g:l>>8&255,b:l&255}}}},bn={class:"rgb-control-container"},gn={class:"color-selector"},mn=["onUpdate:modelValue","onInput"],_n=["onClick"];function yn(p,l,e,w,b,i){return s(),v("div",bn,[(s(!0),v(B,null,H(b.vials,D=>(s(),v("div",{class:"vial-container",key:D},[o("div",gn,[o("label",null,N("Vial "+D),1),ie(o("input",{type:"color","onUpdate:modelValue":O=>b.ledColors[D].color=O,onInput:O=>i.updateColor(D)},null,40,mn),[[re,b.ledColors[D].color]])]),o("button",{class:"set-color-button",onClick:O=>i.setLEDColor(D,O)},"Set",8,_n)]))),128))])}const hn=Y(fn,[["render",yn],["__scopeId","data-v-0f12a494"]]);const Cn={class:"device-configs"},kn={class:"config-actions"},Dn={key:0,class:"error-message"},wn={key:1,class:"config-list mt-4"},Sn={key:0},$n={key:1,class:"text-muted"},xn={__name:"DeviceConfigs",setup(p){const l=ae(),{openDialog:e}=Ce(),w=F([]),b=F(""),i=F(!1),D=F(null),O=F(null);async function P(){b.value="",i.value=!0;try{const y=await l.listDeviceConfigs();w.value=(y||[]).sort((u,a)=>a.localeCompare(u))}catch{b.value="Failed to list device configs."}finally{i.value=!1}}async function M(y){b.value="",D.value=y;try{await l.loadDeviceConfig(y)}catch{b.value="Failed to load device config."}finally{D.value=null}}const g=async()=>{b.value="";try{await l.saveCalibrationToBackend(),z.success("Calibration checkpoint saved!")}catch{b.value="Failed to save device configs."}};function d(y){O.value=y,e({title:"Load checkpoint?",message:"Replace default config with checkpoint?"}).then(async u=>{u&&(await M(O.value),O.value=null)})}return(y,u)=>{const a=U("v-icon"),r=U("v-btn"),E=U("v-list-item"),h=U("v-list");return s(),v("div",Cn,[o("div",kn,[V(r,{color:"success",onClick:g},{default:R(()=>[V(a,{left:""},{default:R(()=>u[0]||(u[0]=[L("mdi-content-save")])),_:1}),u[1]||(u[1]=L(" Save Calibration "))]),_:1}),V(r,{color:"primary",onClick:P,loading:i.value,class:"mr-2"},{default:R(()=>[V(a,{left:""},{default:R(()=>u[2]||(u[2]=[L("mdi-folder-open")])),_:1}),u[3]||(u[3]=L(" Load Calibration Checkpoints "))]),_:1},8,["loading"])]),b.value?(s(),v("div",Dn,N(b.value),1)):T("",!0),w.value.length>0||i.value?(s(),v("div",wn,[u[6]||(u[6]=o("h3",{class:"text-h6 mb-2"},"Available Device Calibration Checkpoints",-1)),w.value.length>0?(s(),v("div",Sn,[V(h,null,{default:R(()=>[(s(!0),v(B,null,H(w.value,c=>(s(),X(E,{key:c,onClick:f=>d(c),class:q({"config-item":!0,loading:D.value===c})},{default:R(()=>[V(a,{left:""},{default:R(()=>u[4]||(u[4]=[L("mdi-file-document")])),_:1}),L(" "+N(c)+" ",1),D.value===c?(s(),X(a,{key:0,right:""},{default:R(()=>u[5]||(u[5]=[L("mdi-loading")])),_:1})):T("",!0)]),_:2},1032,["onClick","class"]))),128))]),_:1})])):i.value?T("",!0):(s(),v("div",$n,' Click "Refresh Configs" to load. '))])):T("",!0)])}}},On=Y(xn,[["__scopeId","data-v-ecd4ed1d"]]);const In={key:0,class:"experiment-running-overlay"},En={key:1,class:"experiment-running-overlay"},Pn={class:"overlay-content"},Fn={class:"warning-message"},Mn={class:"calibration-switch-row"},Vn={key:3},An={__name:"DeviceControl",setup(p){const l=ae(),e=ct(),{deviceConnected:w,deviceControlEnabled:b,calibrationModeEnabled:i,stirrers:D,pumps:O,valves:P,ods:M}=te(l),{currentExperiment:g}=te(e),d=F(!1),y=G(()=>b.value),u=G({get:()=>i.value,set:c=>l.setCalibrationModeEnabled(c)}),a=G(()=>{var c;return((c=g.value)==null?void 0:c.status)==="running"}),{openDialog:r}=Ce();function E(){d.value=!0,z.warning("Device control bypass enabled. Use caution during running experiment.",{autoClose:5e3})}async function h(){console.log("onReconnectClick"),await r({title:"Reconnect Device?",message:"Are you sure you want to reconnect the device?"})?(z.success("Reconnecting device..."),l.connectDevice()):z.error("Reconnect cancelled")}return ne(()=>{l.fetchDeviceData(),e.fetchCurrentExperiment()}),(c,f)=>{const _=U("v-icon"),m=U("v-btn"),x=U("v-switch");return s(),v("div",{class:q(["DeviceControl",{"device-disconnected":$(w)===!1,"experiment-running-bg":a.value}])},[$(b)===!1?(s(),v("div",In)):T("",!0),a.value&&!d.value?(s(),v("div",En,[o("div",Pn,[o("div",Fn,[V(_,{color:"white",size:"48"},{default:R(()=>f[1]||(f[1]=[L("mdi-flask")])),_:1}),f[2]||(f[2]=o("h2",null,"Experiment Running",-1)),f[3]||(f[3]=o("p",null,"Device controls are locked during experiment",-1))]),V(m,{class:"bypass-button",color:"error",size:"large",onClick:E},{default:R(()=>[V(_,{left:""},{default:R(()=>f[4]||(f[4]=[L("mdi-close")])),_:1}),f[5]||(f[5]=L(" Bypass "))]),_:1})])])):T("",!0),o("div",Mn,[$(i)?(s(),X(m,{key:0,class:"reconnect-btn",onClick:h},{default:R(()=>f[6]||(f[6]=[L("Reconnect Device")])),_:1})):T("",!0),V(x,{modelValue:u.value,"onUpdate:modelValue":f[0]||(f[0]=j=>u.value=j),label:"Calibration Mode"},null,8,["modelValue"])]),$(b)||y.value||d.value?(s(),v(B,{key:2},[V(Bt),V(sa),V(_a),V(vn),V(hn),$(i)?(s(),X(On,{key:0})):T("",!0)],64)):(s(),v("p",Vn,"Device Control Disabled"))],2)}}},Bn=Y(An,[["__scopeId","data-v-f514329e"]]);export{Bn as default};
