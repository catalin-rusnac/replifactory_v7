import{B as $e,C as K,v as ce,D as de,y as se,E as xe,g as M,h as X,G as Me,A as pe,H as le,I as Ie,J as ve,_ as H,s as G,c as U,o as i,a as d,b as n,F as L,d as B,t as A,n as j,K as te,L as ne,e as ee,u as S,f as R,M as re,r as Y,j as N,i as J,k as T,N as Fe,l as Oe,m as Q,w as oe}from"./index-90ae7a18.js";import{C as ae,B as Pe,S as Ve,a as Ae,b as be,L as ge,p as fe,c as me,d as he,e as Ee,P as Le,m as Ne}from"./vuex.esm-bundler-cd2d87f8.js";/* empty css              */const z=$e("device",{state:()=>({deviceConnected:!1,deviceControlEnabled:!1,calibrationModeEnabled:!1,valves:{},pumps:{},stirrers:{},ods:{},thermometers:{},leds:{},isFetchingCalibration:!1,valves:null,pumps:null,stirrers:null,ods:null,thermometers:null,leds:null,isFetchingCalibration:!1,errorMessage:null}),actions:{async fetchDeviceData(){try{const e=await K.get("/get-all-device-data");if(e.data.success){const t=e.data.device_states;this.valves=t.valves,this.pumps=t.pumps,this.stirrers=t.stirrers,this.ods=t.ods,this.thermometers=t.temperatures,this.leds=t.leds,this.deviceConnected=!0,this.deviceControlEnabled=!0}else this.deviceConnected=!1,this.deviceControlEnabled=!1,this.errorMessage="Failed to fetch device data."}catch{this.deviceConnected=!1,this.deviceControlEnabled=!1,this.errorMessage="Failed to fetch device data."}},async setPartState(e,t,a,f){try{(await K.post(`/set-${e}-state`,{partIndex:t,newState:a,input:f})).data.success?await this.fetchDeviceData():this.errorMessage=`Failed to set ${e} state.`}catch{this.errorMessage=`Failed to set ${e} state.`}},async setPartCalibration(e,t,a){try{(await K.post(`/set-${e}-calibration`,{partIndex:t,newCalibration:a})).data.success?await this.fetchDeviceData():this.errorMessage=`Failed to set ${e} calibration.`}catch{this.errorMessage=`Failed to set ${e} calibration.`}},async connectDevice(){try{(await K.post("/connect-device")).data.success?(this.deviceConnected=!0,this.deviceControlEnabled=!0,await this.fetchDeviceData()):(this.deviceConnected=!1,this.deviceControlEnabled=!1,this.errorMessage="Failed to connect device.")}catch{this.deviceConnected=!1,this.deviceControlEnabled=!1,this.errorMessage="Failed to connect device."}},setDeviceControlEnabled(e){this.deviceControlEnabled=e},setCalibrationModeEnabled(e){this.calibrationModeEnabled=e},setErrorMessage(e){this.errorMessage=e},async setPartStateAction(e){return this.setPartState(e.devicePart,e.partIndex,e.newState,e.input)},async setPartCalibrationAction(e){return this.setPartCalibration(e.devicePart,e.partIndex,e.newCalibration)},toggleCalibrationMode(){this.calibrationModeEnabled=!this.calibrationModeEnabled},async measureDevicePart({devicePart:e,partIndex:t}){try{(await K.post(`/measure-${e}`,{partIndex:t})).data.success?await this.fetchDeviceData():this.errorMessage=`Failed to measure ${e}.`}catch{this.errorMessage=`Failed to measure ${e}.`}},async setAllStirrersStateAction(e){const t=[1,2,3,4,5,6,7];await Promise.all(t.map(a=>this.setPartState("stirrers",a,e))),await this.fetchDeviceData()},async measureODCalibrationAction({odValue:e}){try{(await K.post("/measure-od-calibration",{odValue:parseFloat(e)})).data.success?await this.fetchDeviceData():this.errorMessage="Failed to measure OD calibration."}catch{this.errorMessage="Failed to measure OD calibration."}},async updateODCalibrationKeyAction({oldOD:e,newOD:t}){try{(await K.post("/update-od-calibration-key",{oldOD:e,newOD:t})).data.success?await this.fetchDeviceData():this.errorMessage="Failed to update OD calibration key."}catch{this.errorMessage="Failed to update OD calibration key."}},async updateODCalibrationValueAction({od:e,odsIndex:t,newValue:a}){try{(await K.post("/update-od-calibration-value",{od:e,odsIndex:t,newValue:a})).data.success?await this.fetchDeviceData():this.errorMessage="Failed to update OD calibration value."}catch{this.errorMessage="Failed to update OD calibration value."}},async removeODCalibrationRowAction(e){try{(await K.post("/remove-od-calibration-row",{odValue:e})).data.success?await this.fetchDeviceData():this.errorMessage="Failed to remove OD calibration row."}catch{this.errorMessage="Failed to remove OD calibration row."}}}}),ye={data:{type:Object,required:!0},options:{type:Object,default:()=>({})},plugins:{type:Array,default:()=>[]},datasetIdKey:{type:String,default:"label"},updateMode:{type:String,default:void 0}},Te={ariaLabel:{type:String},ariaDescribedby:{type:String}},Be={type:{type:String,required:!0},destroyDelay:{type:Number,default:0},...ye,...Te},Re=xe[0]==="2"?(e,t)=>Object.assign(e,{attrs:t}):(e,t)=>Object.assign(e,t);function W(e){return ve(e)?le(e):e}function Ue(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:e;return ve(t)?new Proxy(e,{}):e}function je(e,t){const a=e.options;a&&t&&Object.assign(a,t)}function _e(e,t){e.labels=t}function Ce(e,t,a){const f=[];e.datasets=t.map(v=>{const y=e.datasets.find(D=>D[a]===v[a]);return!y||!v.data||f.includes(y)?{...v}:(f.push(y),Object.assign(y,v),y)})}function qe(e,t){const a={labels:[],datasets:[]};return _e(a,e.labels),Ce(a,e.datasets,t),a}const Ke=ce({props:Be,setup(e,t){let{expose:a,slots:f}=t;const v=M(null),y=de(null);a({chart:y});const D=()=>{if(!v.value)return;const{type:h,data:c,options:g,plugins:w,datasetIdKey:C}=e,p=qe(c,C),k=Ue(p,c);y.value=new ae(v.value,{type:h,data:k,options:{...g},plugins:w})},m=()=>{const h=le(y.value);h&&(e.destroyDelay>0?setTimeout(()=>{h.destroy(),y.value=null},e.destroyDelay):(h.destroy(),y.value=null))},I=h=>{h.update(e.updateMode)};return X(D),Me(m),pe([()=>e.options,()=>e.data],(h,c)=>{let[g,w]=h,[C,p]=c;const k=le(y.value);if(!k)return;let u=!1;if(g){const r=W(g),_=W(C);r&&r!==_&&(je(k,r),u=!0)}if(w){const r=W(w.labels),_=W(p.labels),$=W(w.datasets),F=W(p.datasets);r!==_&&(_e(k.config.data,r),u=!0),$&&$!==F&&(Ce(k.config.data,$,e.datasetIdKey),u=!0)}u&&Ie(()=>{I(k)})},{deep:!0}),()=>se("canvas",{role:"img",ariaLabel:e.ariaLabel,ariaDescribedby:e.ariaDescribedby,ref:v},[se("p",{},[f.default?f.default():""])])}});function De(e,t){return ae.register(t),ce({props:ye,setup(a,f){let{expose:v}=f;const y=de(null),D=m=>{y.value=m==null?void 0:m.chart};return v({chart:y}),()=>se(Ke,Re({ref:D},{type:e,...a}))}})}const He=De("bar",Pe),Ge=De("scatter",Ve);const ze={class:"pump-data"},We={class:"iteration-rotation-wrapper"},Je={class:"iteration"},Ye={class:"rotation"},Ze=["onClick"],Qe={key:0},Xe={key:1},et=["onUpdate:modelValue","onChange"],tt={class:"chart-container"},nt={key:0,class:"calibration-section"},at={__name:"PumpCalibration",props:{pumpId:{type:Number,required:!0}},setup(e){ae.register(Ae,be,ge,fe,me,he);const t=e,a=z(),{calibrationModeEnabled:f,pumps:v,valves:y}=G(a),D=M({datasets:[{data:[]}]}),m=M({responsive:!0,devicePixelRatio:4,maintainAspectRatio:!1,plugins:{legend:{display:!1}},backgroundColor:"rgba(0, 140, 186, 0.3)",layout:{padding:{top:20}},scales:{x:{title:{display:!0,text:"rotations"}},y:{title:{display:!0,text:"mL / rotation"},beginAtZero:!1,suggestedMin:.1,suggestedMax:.22}}}),I=M({}),h=M([{rotations:1,iterations:50,total_ml:NaN},{rotations:5,iterations:10,total_ml:NaN},{rotations:10,iterations:5,total_ml:NaN},{rotations:50,iterations:1,total_ml:NaN}]),c=U(()=>{var r,_;return((_=(r=v.value)==null?void 0:r.calibration)==null?void 0:_[t.pumpId])||{}});function g(){return{labels:Object.keys(c.value),datasets:[{label:null,data:Object.values(c.value),fill:!1,borderColor:"rgb(75, 192, 192)",tension:.1}]}}function w(){D.value=g()}function C(r){if(!Object.values(y.value.states).some($=>$==="open")){alert("At least one valve must be open to start the pump");return}I.value[r]=!I.value[r],I.value[r]?u(h.value[r]):a.setPartStateAction({devicePart:"pumps",partIndex:t.pumpId,newState:"stopped"})}function p(r){I.value[r]=!1}function k(r){r.total_ml&&(a.setPartCalibrationAction({devicePart:"pumps",partIndex:t.pumpId,newCalibration:{...c.value,[r.rotations]:r.total_ml/r.rotations/r.iterations}}),I.value[r]=!1)}function u(r){alert(`Pumping ${r.rotations} rotations ${r.iterations} times. Please blank the scale`),a.startPumpCalibrationSequence({pumpId:t.pumpId,rotations:r.rotations,iterations:r.iterations}).then(()=>{p(r);const _=parseFloat(prompt("Enter total mL pumped"));isNaN(_)||(r.total_ml=_,k(r))})}return X(()=>{c.value&&w(),h.value.forEach(r=>{r.total_ml=(c.value[r.rotations]||0)*r.rotations*r.iterations,r.total_ml=r.total_ml?r.total_ml.toFixed(2):""})}),pe(c,()=>{w()},{deep:!0}),(r,_)=>(i(),d("div",ze,[n("table",null,[_[1]||(_[1]=n("thead",null,[n("tr",null,[n("th",null,"Calibration Sequence"),n("th"),n("th",null,"Volume (mL)")])],-1)),n("tbody",null,[(i(!0),d(L,null,B(h.value,($,F)=>(i(),d("tr",{key:F},[n("td",null,[n("div",We,[n("div",Je,A($.iterations),1),_[0]||(_[0]=n("div",{class:"multiplier"},"x",-1)),n("div",Ye,A($.rotations)+" rots",1)])]),n("td",null,[n("button",{onClick:l=>C(F),class:j({"stop-button":I.value[F]})},[I.value[F]?(i(),d("span",Xe,"Stop")):(i(),d("span",Qe,"Start"))],10,Ze)]),n("td",null,[te(n("input",{"onUpdate:modelValue":l=>$.total_ml=l,onChange:l=>k($),type:"float"},null,40,et),[[ne,$.total_ml]])])]))),128))])]),n("div",tt,[D.value.datasets[0].data.length>0?(i(),ee(S(He),{key:0,id:"pump-calibration-chart",options:m.value,class:"pump-calibration-chart",data:D.value},null,8,["options","data"])):R("",!0)]),S(f)?(i(),d("div",nt)):R("",!0)]))}},ot=H(at,[["__scopeId","data-v-9be7f321"]]);const st={key:0,class:"pump-controls"},lt={key:1},rt={class:"pump-input"},it={key:1},ut={__name:"PumpControl",setup(e){const t=z(),{pumps:a,valves:f,calibrationModeEnabled:v}=G(t),y={1:"MAIN",2:"DRUG",3:"MISSING!!!",4:"WASTE"},D=re({1:null,2:null,3:null,4:null}),m=re({1:null,2:null,3:null,4:null});X(()=>{a.value||t.fetchDeviceData()});async function I(C){if(a.value.states[C]==="running"){await t.setPartStateAction({devicePart:"pumps",partIndex:C,newState:"stopped"});return}if(!Object.values(f.value.states).some(u=>u==="open")){alert("At least one valve must be open to start the pump");return}const k=parseFloat(m[C]);if(!k){alert("Please set the volume before starting the pump");return}try{await t.setPartStateAction({devicePart:"pumps",partIndex:C,newState:"running",input:{volume:k}})}catch(u){console.error(u)}finally{await t.setPartStateAction({devicePart:"pumps",partIndex:C,newState:"stopped"})}}function h(C,p){m[p]=C;const k=parseFloat(m[p]);isNaN(k)?D[p]="":D[p]=g(k,p).toFixed(2)}function c(C,p){D[p]=C;const k=parseFloat(D[p]);isNaN(k)?m[p]="":m[p]=w(k,p)}function g(C,p){const k=a.value.calibration[p],u=Object.entries(k).map(([E,Z])=>[parseInt(E),Z]).sort((E,Z)=>E[0]-Z[0]);if(C>=u[u.length-1][0]*u[u.length-1][1])return C/u[u.length-1][1];let r=u[0],_=u[u.length-1];for(let E=0;E<u.length-1;E++)if(C>=u[E][0]*u[E][1]&&C<=u[E+1][0]*u[E+1][1]){r=u[E],_=u[E+1];break}const $=r[0]*r[1],F=_[0]*_[1],l=(C-$)/(F-$),x=r[1]+(_[1]-r[1])*l;return C/x}function w(C,p){const k=a.value.calibration[p],u=Object.entries(k).map(([l,x])=>[parseInt(l),x]).sort((l,x)=>l[0]-x[0]);if(C>=u[u.length-1][0])return(C*u[u.length-1][1]).toFixed(2);let r=u[0],_=u[u.length-1];for(let l=0;l<u.length-1;l++)if(C>=u[l][0]&&C<=u[l+1][0]){r=u[l],_=u[l+1];break}const $=(C-r[0])/(_[0]-r[0]),F=r[1]+(_[1]-r[1])*$;return(C*F).toFixed(2)}return(C,p)=>{const k=Y("v-progress-circular"),u=Y("v-btn"),r=Y("v-text-field");return S(a)&&S(a).states?(i(),d("div",st,[(i(),d(L,null,B([1,2,4],_=>n("div",{class:"pump",key:_},[N(u,{class:j(["pump-button",{"stop-button":S(a).states[_]==="running"}]),onClick:$=>I(_)},{default:J(()=>[S(a).states[_]==="running"?(i(),ee(k,{key:0,indeterminate:"",color:"white",class:"spinner-custom"})):(i(),d("span",lt,[T(A(y[_]),1),p[0]||(p[0]=n("br",null,null,-1)),p[1]||(p[1]=T("pump"))]))]),_:2},1032,["class","onClick"]),n("div",rt,[N(r,{label:"Volume (mL)",type:"number",dense:"",modelValue:m[_],"onUpdate:modelValue":[$=>m[_]=$,$=>h($,_)]},null,8,["modelValue","onUpdate:modelValue"]),S(v)?(i(),ee(r,{key:0,label:"Rotations",type:"number",dense:"",modelValue:D[_],"onUpdate:modelValue":[$=>D[_]=$,$=>c($,_)]},null,8,["modelValue","onUpdate:modelValue"])):R("",!0),S(v)?(i(),ee(ot,{key:1,pumpId:_},null,8,["pumpId"])):R("",!0)])])),64))])):(i(),d("div",it," Loading pump data... "))}}},ct=H(ut,[["__scopeId","data-v-dc27ed63"]]);const dt={class:"valve-controls"},pt=["onClick","disabled"],vt={key:0,class:"spinner-border spinner-custom",role:"status"},bt={key:1},gt={__name:"ValveControl",setup(e){const t=z(),{valves:a}=G(t),f=M({}),v=new(window.AudioContext||window.webkitAudioContext);function y(m){const I=m==="open"?500:300,h=m==="open"?300:500,c=v.createOscillator();c.type="sine";const g=v.createGain();return g.gain.setValueAtTime(.1,v.currentTime),c.connect(g),g.connect(v.destination),c.frequency.setValueAtTime(I,v.currentTime),c.frequency.linearRampToValueAtTime(h,v.currentTime+.3),c.start(),c.stop(v.currentTime+.3),c}async function D(m){const I=a.value.states[m];if(f.value[m])return;f.value={...f.value,[m]:!0};const h=y(I);try{await t.setPartStateAction({devicePart:"valves",partIndex:m,newState:I==="open"?"closed":"open"}),h.stop()}catch(c){console.error(c)}finally{f.value={...f.value,[m]:!1}}}return(m,I)=>(i(),d("div",dt,[(i(),d(L,null,B(7,h=>n("button",{class:j(["btn",{"btn-danger":S(a).states[h]==="closed"&&!f.value[h],"btn-success":S(a).states[h]==="open"&&!f.value[h],"btn-warning":f.value[h]}]),key:h,onClick:c=>D(h),disabled:f.value[h]},[f.value[h]?(i(),d("div",vt)):(i(),d("span",bt,"Valve "+A(h),1))],10,pt)),64))]))}},ft=H(gt,[["__scopeId","data-v-9591560c"]]);const mt={class:"elements-container"},ht={class:"stirrer-name"},yt={key:0},_t={style:{position:"relative",display:"inline-block"}},Ct={style:{position:"relative",display:"inline-block"}},Dt={class:"buttons-container"},ie=0,ue=1,kt={__name:"StirrerCalibration",props:{stirrerId:{type:Number,required:!0}},setup(e){const t=e,a=M(null),f=M(null),v=M(null),y=new(window.AudioContext||window.webkitAudioContext);let D=null,m=null,I=null;const h=z(),{calibrationModeEnabled:c,stirrers:g}=G(h),w=U(()=>g.value&&g.value.states?g.value.states[t.stirrerId]:void 0);function C(F){h.setPartStateAction({devicePart:"stirrers",partIndex:t.stirrerId,newState:F})}function p(F){if(g.value&&g.value.states)for(let l=1;l<=7;l++)g.value.states[l]=F;h.setAllStirrersStateAction&&h.setAllStirrersStateAction(F)}function k(F,l){r(l.target.value)}function u(F,l){!g.value||!g.value.calibration||!g.value.calibration[t.stirrerId]||h.setPartCalibrationAction({devicePart:"stirrers",partIndex:t.stirrerId,newCalibration:{low:g.value.calibration[t.stirrerId].low,high:g.value.calibration[t.stirrerId].high}}).catch(x=>{console.error("Error updating stirrer calibration:",x)})}function r(F){D||(D=y.createOscillator(),m=y.createGain(),D.type="sine",m.gain.setValueAtTime(.1,y.currentTime),D.connect(m),m.connect(y.destination),D.start());const l=300+F*500;D.frequency.setValueAtTime(l,y.currentTime),I&&clearTimeout(I),I=setTimeout(_,200)}function _(){D&&(m.gain.exponentialRampToValueAtTime(.001,y.currentTime+.01),m.gain.setValueAtTime(.1,y.currentTime+.02),D.stop(y.currentTime+.02),D=null,m=null)}function $(F,l){(F==="high"&&w.value!=="high"||F==="low"&&w.value!=="low")&&(l.preventDefault(),Oe("Enable stirrer to adjust speed",{type:"info"}))}return X(()=>{window.addEventListener("resize",()=>{})}),Fe(()=>{window.removeEventListener("resize",()=>{})}),(F,l)=>(i(),d("div",{class:"stirrer-calibrator",ref_key:"container",ref:a},[n("div",mt,[n("div",ht,[n("header",null,"Stirrer "+A(e.stirrerId),1)]),S(c)&&S(g)&&S(g).calibration&&S(g).calibration[e.stirrerId]?(i(),d("div",yt,[n("div",_t,[te(n("input",{type:"range",class:j(["slider slider-high",[{active:w.value==="high"},{"slider-disabled":w.value!=="high"}]]),min:ie,max:ue,step:.01,"onUpdate:modelValue":l[0]||(l[0]=x=>S(g).calibration[e.stirrerId].high=x),onInput:l[1]||(l[1]=x=>k("high",x)),onChange:l[2]||(l[2]=x=>u())},null,34),[[ne,S(g).calibration[e.stirrerId].high,void 0,{number:!0}]]),w.value!=="high"?(i(),d("div",{key:0,class:"slider-overlay",onClick:l[3]||(l[3]=x=>$("high",x))})):R("",!0)]),n("div",Ct,[te(n("input",{type:"range",class:j(["slider slider-low",[{active:w.value==="low"},{"slider-disabled":w.value!=="low"}]]),min:ie,max:ue,step:.01,"onUpdate:modelValue":l[4]||(l[4]=x=>S(g).calibration[e.stirrerId].low=x),onInput:l[5]||(l[5]=x=>k("low",x)),onChange:l[6]||(l[6]=x=>u())},null,34),[[ne,S(g).calibration[e.stirrerId].low,void 0,{number:!0}]]),w.value!=="low"?(i(),d("div",{key:0,class:"slider-overlay",onClick:l[7]||(l[7]=x=>$("low",x))})):R("",!0)])])):R("",!0),n("div",Dt,[n("button",{class:j(["button button-high",{active:w.value==="high"}]),ref_key:"buttonHigh",ref:f,onClick:l[8]||(l[8]=x=>C("high")),onDblclick:l[9]||(l[9]=x=>p("high"))},"High",34),n("button",{class:j(["button button-low",{active:w.value==="low"}]),ref_key:"buttonLow",ref:v,onClick:l[10]||(l[10]=x=>C("low")),onDblclick:l[11]||(l[11]=x=>p("low"))},"Low",34),n("button",{class:j(["button button-off",{active:w.value==="stopped"}]),ref:"buttonOff",onClick:l[12]||(l[12]=x=>C("stopped")),onDblclick:l[13]||(l[13]=x=>p("stopped"))},"OFF",34)])])],512))}},St=H(kt,[["__scopeId","data-v-d01f6391"]]);const wt={name:"StirrerControl",components:{StirrerCalibration:St}},$t={class:"stirrer-controls"};function xt(e,t,a,f,v,y){const D=Y("StirrerCalibration");return i(),d("div",$t,[(i(),d(L,null,B(7,m=>N(D,{key:m,stirrerId:m},null,8,["stirrerId"])),64))])}const Mt=H(wt,[["render",xt],["__scopeId","data-v-6cada7fd"]]),It={className:"single-chart-container"},Ft={__name:"ODChart",props:{partId:{type:Number,required:!0}},setup(e){ae.register(fe,me,he,Ee,be,ge,Le);const t=e,a=z(),{ods:f}=G(a),v=U(()=>{var c,g;return(g=(c=f.value)==null?void 0:c.calibration)==null?void 0:g[t.partId]}),y=U(()=>{var c,g;return(g=(c=f.value)==null?void 0:c.calibration_coefs)==null?void 0:g[t.partId]}),D=U(()=>{var c,g,w,C;return{od:(g=(c=f.value)==null?void 0:c.states)==null?void 0:g[t.partId],signal:(C=(w=f.value)==null?void 0:w.odsignals)==null?void 0:C[t.partId]}});function m(c,g,w,C,p,k){return p+(g-p)/Math.pow(1+Math.pow(c/C,w),k)}const I=U(()=>{if(v.value&&typeof v.value=="object"&&y.value){const c=Object.entries(v.value).map(([p,k])=>({x:Number(k),y:Number(p)})).sort((p,k)=>p.x-k.x),g=Math.min(...c.map(p=>p.x)),w=Math.max(...c.map(p=>p.x)),C=[];for(let p=g;p<=w;p+=.1){const k=m(p,...y.value);C.push({x:p,y:k})}return{datasets:[{label:`Vial ${t.partId} Calibration OD`,data:c,borderColor:"#607ecb",backgroundColor:"rgba(83,158,255,0.64)"},{label:`Vial ${t.partId} Current OD`,data:[{x:D.value.signal,y:D.value.od}],pointRadius:5,backgroundColor:"rgba(255,1,60,0.64)"},{label:`Vial ${t.partId} Fit`,data:C,pointRadius:0,borderColor:"rgba(0,70,220,0.38)",borderWidth:2,showLine:!0,fill:!1,borderDash:[2,2]}]}}return{}}),h=U(()=>({devicePixelRatio:4,responsive:!0,maintainAspectRatio:!1,plugins:{legend:{display:!1},title:{display:!0,text:`Vial ${t.partId}`}},scales:{x:{title:{display:!0,text:"Signal (mV)"},suggestedMin:0},y:{title:{display:!0,text:"OD"},suggestedMax:1.5,suggestedMin:0}}}));return(c,g)=>(i(),d("div",It,[N(S(Ge),{data:I.value,options:h.value},null,8,["data","options"])]))}};const Ot={class:"od-control-container"},Pt=["onClick"],Vt={key:0,class:"od-output-value"},At={key:1,class:"signal-output-value"},Et={key:0,class:"calibration-section"},Lt={class:"probe-table-outer-container",style:{"margin-bottom":"18px"}},Nt={class:"state-table-container"},Tt={class:"state-table"},Bt={class:"state-row-label"},Rt=["disabled"],Ut={key:0},jt={key:1},qt={class:"signal-value-text"},Kt={class:"table-controls"},Ht={class:"calibration-table"},Gt=["value","onInput","onBlur","onKeyup"],zt=["value","onChange"],Wt=["value","onInput","onBlur","onKeyup"],Jt={key:0,class:"signal-value"},Yt={key:1},Zt={class:"table-controls bottom-controls"},Qt=["disabled"],Xt={key:0},en={key:1},tn={class:"control-input-group"},nn=["value"],an={key:0,class:"chart-container"},on={__name:"ODControl",setup(e){const t=z(),{ods:a,calibrationModeEnabled:f}=G(t),v=[1,2,3,4,5,6,7];M(null);const y=M(!1);M(0);const D=M(!0);M(!1),M({hostname:"replifactory"});const m=M(["a","b","c","d","e","f","g"]),I=M([0,.12,.25,.5,1,2,4]),h=M("diagonal"),c=M(0);M([0,.12,.25,.5,1,2,4]),M([null,null,null,null,null,null,null]);const g=M(!1),w=M(!1),C=M(2),p=M({});M({});const k=M(null);M(0);const u=U(()=>{let b=new Set;if(a.value.calibration)for(let V in a.value.calibration)for(let o in a.value.calibration[V])b.add(o);return Array.from(b).sort((V,o)=>parseFloat(V)-parseFloat(o)).slice(0,7)});U(()=>{const b=new Date;return`${b.getFullYear()}-${String(b.getMonth()+1).padStart(2,"0")}-${String(b.getDate()).padStart(2,"0")}`});async function r(b){await t.measureDevicePart({devicePart:"ods",partIndex:b}),await t.fetchDeviceData()}function _(b){if(h.value==="diagonal"){const s=(b-1-c.value+u.value.length)%u.value.length;return u.value[s]||"-"}else return u.value[c.value]||"-"}function $(b){if(h.value==="diagonal"){const s=(b-1-c.value+m.value.length)%m.value.length;return m.value[s].toUpperCase()}else return m.value[c.value].toUpperCase()}function F(b,s){if(!a.value.calibration||!a.value.calibration[b]||a.value.calibration[b][s]===void 0)return{background:""};const V=parseFloat(a.value.calibration[b][s]),o=5,P=40;let O;if(V<=0)O=o;else{const q=Math.log(10),Se=Math.log(1e3),we=(Math.log(Math.max(10,Math.min(1e3,V)))-q)/(Se-q);O=o+we*(P-o)}return{background:`rgba(255, 100, 100, ${O/100})`}}function l(b){if(b==null)return"";const s=parseFloat(b);if(isNaN(s))return"";const V=.02,o=.25,P=Math.max(0,Math.min(4,s)),O=Math.log(P+1)/Math.log(5),q=V+O*(o-V);return`background: linear-gradient(to right, rgba(255, 235, 156, ${q}), rgba(255, 235, 156, ${q*.6}))`}function x(b){const s=_(b);return s==="-"?"-":a.value.calibration&&a.value.calibration[b]&&a.value.calibration[b][s]!==void 0?parseFloat(a.value.calibration[b][s]).toFixed(2)+" mV":"-"}function E(b,s){const V=u.value.indexOf(b);return V===-1?!1:h.value==="diagonal"?(s-1-c.value+u.value.length)%u.value.length===V:V===c.value}function Z(){h.value=h.value==="diagonal"?"row":"diagonal"}function ke(){u.value.length!==0&&(c.value=(c.value+1)%u.value.length)}return(b,s)=>{const V=Y("v-icon");return i(),d(L,null,[n("div",Ot,[(i(!0),d(L,null,B(S(a).states,(o,P)=>(i(),d("div",{class:"elements-container",key:P},[n("button",{class:"od-button",onClick:O=>r(P)},[n("span",null,"OD "+A(P),1)],8,Pt),S(a).states&&S(a).states[P]!==void 0?(i(),d("span",Vt,A(parseFloat(S(a).states[P].toFixed(2))),1)):R("",!0),s[9]||(s[9]=n("div",{style:{height:"0.5px"}},null,-1)),S(a).odsignals&&S(a).odsignals[P]!==void 0?(i(),d("span",At,"("+A(parseFloat(S(a).odsignals[P].toFixed(2)))+"mV)",1)):R("",!0)]))),128))]),S(f)?(i(),d("div",Et,[n("div",Lt,[s[15]||(s[15]=n("div",{style:{display:"flex","align-items":"center","margin-bottom":"8px"}},null,-1)),n("div",Nt,[n("table",Tt,[n("thead",null,[n("tr",null,[s[10]||(s[10]=n("th",{class:"state-header-empty"},null,-1)),(i(),d(L,null,B(v,(o,P)=>n("th",{key:"vial-header-"+o,class:"state-vial-header"}," Vial "+A(o),1)),64))])]),n("tbody",null,[n("tr",null,[s[11]||(s[11]=n("th",{class:"state-row-label"},"Probe",-1)),(i(),d(L,null,B(v,(o,P)=>n("td",{key:"probe-"+o,class:"state-probe-cell",style:Q(l(_(o)))},A($(o)),5)),64))]),n("tr",null,[s[12]||(s[12]=n("th",{class:"state-row-label state-od-label"},"OD Value",-1)),(i(),d(L,null,B(v,(o,P)=>n("td",{key:"od-"+o,class:"state-od-cell",style:Q(l(_(o)))},[n("span",null,A(_(o)),1)],4)),64))]),n("tr",null,[n("th",Bt,[n("button",{class:"control-button measure-inline",onClick:s[0]||(s[0]=(...o)=>b.remeasureDiagonal&&b.remeasureDiagonal(...o)),disabled:g.value},[g.value?(i(),d("span",Ut,s[13]||(s[13]=[n("span",{class:"loading-spinner"},null,-1),T(" Measuring... ")]))):(i(),d("span",jt,[N(V,null,{default:J(()=>s[14]||(s[14]=[T("mdi-camera-metering-center")])),_:1}),T(" "+A(h.value==="diagonal"?"Measure Diagonal "+(c.value+1):"Measure OD "+u.value[c.value]),1)]))],8,Rt)]),(i(),d(L,null,B(v,(o,P)=>n("td",{key:"signal-"+o,class:j(["state-signal-cell",{highlighted:E(_(o),o)}]),style:Q({background:E(_(o),o)?"rgba(100, 149, 237, 0.15)":F(o,_(o)).background})},[n("span",qt,A(x(o)),1)],6)),64))])])])]),n("div",Kt,[n("button",{class:"control-button",onClick:Z},A(h.value==="diagonal"?"Select Row":"Select Diagonal"),1),n("button",{class:"control-button",onClick:ke},A(h.value==="diagonal"?"Next Diagonal":"Next Row"),1)])]),s[25]||(s[25]=n("div",{class:"calibration-controls"},null,-1)),n("table",Ht,[n("thead",null,[n("tr",null,[s[16]||(s[16]=n("th",{style:{width:"90px"}},"OD Value",-1)),(i(),d(L,null,B(v,o=>n("th",{key:o,style:{width:"90px"}},"Vial "+A(o),1)),64))])]),n("tbody",null,[(i(!0),d(L,null,B(u.value,(o,P)=>(i(),d("tr",{key:o},[n("td",{style:Q([{width:"90px"},l(o)])},[P<I.value.length?(i(),d("input",{key:0,value:p.value[P]!==void 0?p.value[P]:I.value[P],onInput:O=>b.handleProbeValueInput(O,P),onBlur:O=>b.updateProbeValue(o,P),onKeyup:oe(O=>b.updateProbeValue(o,P),["enter"]),type:"number",step:"0.1",class:"property-value",style:{"text-align":"center"}},null,40,Gt)):(i(),d("input",{key:1,value:o,onChange:O=>b.updateODCalibrationKeyAction({oldOD:o,newOD:O.target.value}),type:"number",step:"0.1",class:"property-value",style:{"text-align":"center"}},null,40,zt))],4),(i(),d(L,null,B(v,O=>n("td",{key:O,style:Q([{width:"90px"},{background:E(o,O)?"rgba(100, 149, 237, 0.15)":F(O,o).background}]),class:j({"has-data":S(a).calibration&&S(a).calibration[O]&&S(a).calibration[O][o]!==void 0,"diagonal-cell":E(o,O)})},[y.value?(i(),d("input",{key:0,value:b.getCalibrationInputValue(O,o),onInput:q=>b.handleSignalInput(q,O,o),onBlur:q=>b.updateSignalValue(O,o),onKeyup:oe(q=>b.updateSignalValue(O,o),["enter"]),type:"number",class:"calibration-signal"},null,40,Wt)):(i(),d(L,{key:1},[S(a).calibration&&S(a).calibration[O]&&S(a).calibration[O][o]!==void 0?(i(),d("span",Jt,A(parseFloat(S(a).calibration[O][o]).toFixed(2))+"mV ",1)):(i(),d("span",Yt))],64))],6)),64))]))),128))])]),n("div",Zt,[n("button",{class:"control-button",onClick:s[1]||(s[1]=(...o)=>b.autofillValues&&b.autofillValues(...o)),disabled:w.value},[w.value?(i(),d("span",Xt,s[17]||(s[17]=[n("span",{class:"loading-spinner"},null,-1),T(" Autofilling... ")]))):(i(),d("span",en,[N(V,null,{default:J(()=>s[18]||(s[18]=[T("mdi-autorenew")])),_:1}),s[19]||(s[19]=T(" Autofill OD>0 "))]))],8,Qt),n("div",tn,[s[20]||(s[20]=n("label",{for:"scalingFactor"},"Scaling Factor:",-1)),n("input",{id:"scalingFactor",value:k.value!==null?k.value:C.value,onInput:s[2]||(s[2]=o=>k.value=parseFloat(o.target.value)),onBlur:s[3]||(s[3]=(...o)=>b.updateScalingFactor&&b.updateScalingFactor(...o)),onKeyup:s[4]||(s[4]=oe((...o)=>b.updateScalingFactor&&b.updateScalingFactor(...o),["enter"])),type:"number",min:"0.1",step:"0.1",class:"scaling-factor-input"},null,40,nn)]),n("button",{class:"control-button mode-toggle",onClick:s[5]||(s[5]=(...o)=>b.toggleMeasurementMode&&b.toggleMeasurementMode(...o))},[N(V,null,{default:J(()=>[T(A(y.value?"mdi-eye":"mdi-pencil"),1)]),_:1}),T(" "+A(y.value?"View Mode":"Edit Mode"),1)]),n("button",{class:"control-button save",onClick:s[6]||(s[6]=(...o)=>b.saveCalibration&&b.saveCalibration(...o))},[N(V,null,{default:J(()=>s[21]||(s[21]=[T("mdi-content-save")])),_:1}),s[22]||(s[22]=T(" Save "))]),n("button",{class:"control-button load",onClick:s[7]||(s[7]=(...o)=>b.loadCalibration&&b.loadCalibration(...o))},[N(V,null,{default:J(()=>s[23]||(s[23]=[T("mdi-folder-open")])),_:1}),s[24]||(s[24]=T(" Load "))])]),D.value?(i(),d("div",an,[(i(),d(L,null,B(v,o=>N(Ft,{partId:o,key:o},null,8,["partId"])),64))])):R("",!0)])):R("",!0),n("input",{type:"file",ref:"fileInput",style:{display:"none"},accept:".json",onChange:s[8]||(s[8]=(...o)=>b.onFileSelected&&b.onFileSelected(...o))},null,544)],64)}}},sn=H(on,[["__scopeId","data-v-c9fdd2a2"]]);const ln={name:"SetLEDColor",data(){return{vials:[1,2,3,4,5,6,7],ledColors:{1:{red:0,green:0,blue:0,color:"#000000"},2:{red:0,green:0,blue:0,color:"#000000"},3:{red:0,green:0,blue:0,color:"#000000"},4:{red:0,green:0,blue:0,color:"#000000"},5:{red:0,green:0,blue:0,color:"#000000"},6:{red:0,green:0,blue:0,color:"#000000"},7:{red:0,green:0,blue:0,color:"#000000"}}}},methods:{...Ne("device",["setLedColor"]),async setLEDColor(e,t){if(t.shiftKey){const{red:a,green:f,blue:v}=this.ledColors[e];for(const y of this.vials)this.ledColors[y].red=a,this.ledColors[y].green=f,this.ledColors[y].blue=v,this.ledColors[y].color=this.ledColors[e].color,await this.setIndividualLEDColor(y)}else await this.setIndividualLEDColor(e)},async setIndividualLEDColor(e){const{red:t,green:a,blue:f}=this.ledColors[e];try{console.log("Setting color for vial",e,"to",t,a,f),await this.setLedColor({vial:e,red:t,green:a,blue:f})}catch(v){console.error(`Failed to set color for vial ${e}:`,v),alert(`Error setting color for vial ${e}`)}},updateColor(e){const t=this.ledColors[e].color,{r:a,g:f,b:v}=this.hexToRgb(t);this.ledColors[e].red=a/255,this.ledColors[e].green=f/255,this.ledColors[e].blue=v/255},hexToRgb(e){const t=parseInt(e.slice(1),16);return{r:t>>16&255,g:t>>8&255,b:t&255}}}},rn={class:"rgb-control-container"},un={class:"color-selector"},cn=["onUpdate:modelValue","onInput"],dn=["onClick"];function pn(e,t,a,f,v,y){return i(),d("div",rn,[(i(!0),d(L,null,B(v.vials,D=>(i(),d("div",{class:"vial-container",key:D},[n("div",un,[n("label",null,A("Vial "+D),1),te(n("input",{type:"color","onUpdate:modelValue":m=>v.ledColors[D].color=m,onInput:m=>y.updateColor(D)},null,40,cn),[[ne,v.ledColors[D].color]])]),n("button",{class:"set-color-button",onClick:m=>y.setLEDColor(D,m)},"Set",8,dn)]))),128))])}const vn=H(ln,[["render",pn],["__scopeId","data-v-c1c97778"]]);const bn={key:0,class:"experiment-running-overlay"},gn={class:"calibration-switch",style:{"text-align":"right"}},fn={key:2},mn={__name:"DeviceControl",setup(e){const t=z(),{deviceConnected:a,deviceControlEnabled:f,calibrationModeEnabled:v,stirrers:y,pumps:D,valves:m,ods:I}=G(t),h=U(()=>f.value),c=U({get:()=>v.value,set:g=>t.setCalibrationModeEnabled(g)});return X(()=>{t.fetchDeviceData()}),(g,w)=>{const C=Y("v-switch");return i(),d("div",{class:j(["DeviceControl",{"device-disconnected":S(a)===!1}])},[S(f)===!1?(i(),d("div",bn)):R("",!0),n("div",gn,[N(C,{modelValue:c.value,"onUpdate:modelValue":w[0]||(w[0]=p=>c.value=p),label:"Calibration Mode"},null,8,["modelValue"])]),S(f)||h.value?(i(),d(L,{key:1},[N(ct),N(ft),N(Mt),N(sn),N(vn)],64)):(i(),d("p",fn,"Device Control Disabled - please pause experiment to control device."))],2)}}},Dn=H(mn,[["__scopeId","data-v-81ee37e0"]]);export{Dn as default};
